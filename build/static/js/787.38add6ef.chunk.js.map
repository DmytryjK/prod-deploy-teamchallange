{"version":3,"file":"static/js/787.38add6ef.chunk.js","mappings":"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","sources":["assets/icons/categories/categories-sprite.svg","hooks/useFetch.ts","pages/CatalogPage/components/CategoryList/CategoryList.tsx","pages/CatalogPage/components/Filters/ColorFilter/ColorFilter.tsx","pages/CatalogPage/components/Filters/RangeFilter/RangeFilter.tsx","pages/CatalogPage/components/Filters/BooleanFilter/BooleanFilter.tsx","pages/CatalogPage/components/Filters/CheckboxesFilter/CheckboxesFilter.tsx","pages/CatalogPage/components/Filters/FiltersData.ts","pages/CatalogPage/components/Filters/Filters.tsx","pages/CatalogPage/components/SortProducts/SortProducts.tsx","pages/CatalogPage/components/SearchedQuantity/SearchedQuantity.tsx","pages/CatalogPage/components/Navigation/Navigation.tsx","pages/CatalogPage/components/ProductsList/ProductLoader/ProductLoader.tsx","pages/CatalogPage/components/ProductsList/ProductsList.tsx","pages/CatalogPage/components/OpenFiltersButton/OpenFiltersButton.tsx","pages/CatalogPage/CatalogPage.tsx","shared-components/ArrowUp/ArrowUp.tsx","shared-components/ArrowUp/index.ts","shared-components/Breadcrumbs/Breadcrumbs.tsx","assets/icons/pagination/pagination-sprites.svg","shared-components/Pagination2/Pagination2.tsx","shared-components/ProductCard/Skeleton/Skeleton.tsx","utils/moveUserToPageUp.ts"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _path, _g, _defs, _symbol5, _symbol6, _symbol7;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCategoriesSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 0,\n    height: 0,\n    className: \"hidden\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"beds\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Catalog/\\\\xD0\\\\x9B\\\\xD1\\\\x96\\\\xD0\\\\xB6\\\\xD0\\\\xBA\\\\xD0\\\\xB0\",\n    clipPath: \"url(#clip0_1345_12132)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 4\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 2\",\n    d: \"M2.53756 27.923V27.923C2.07024 27.923 1.69141 28.3018 1.69141 28.7692V30.3076C1.69141 30.8599 2.13912 31.3076 2.69141 31.3076H3.38371M2.53756 27.923H42.3068M2.53756 27.923C2.37568 26.7898 2.53898 25.0063 3.66736 23.6922M42.3068 27.923V27.923C42.7741 27.923 43.1529 28.3018 43.1529 28.7692V30.3076C43.1529 30.8599 42.7052 31.3076 42.1529 31.3076H41.4277M42.3068 27.923C42.3068 26.3738 42.0138 25.0883 41.4277 24.1153M8.46064 21.9999C8.31198 21.9999 8.17084 21.9999 8.03756 21.9999C5.87448 21.9999 4.505 22.7167 3.66736 23.6922M8.46064 21.9999V18.3461C8.46064 17.7938 8.90835 17.3461 9.46064 17.3461H18.8837C19.436 17.3461 19.8837 17.7938 19.8837 18.3461V21.9999M8.46064 21.9999C10.844 21.9999 15.1563 21.9999 19.8837 21.9999M19.8837 21.9999C21.4088 21.9999 22.977 21.9999 24.5376 21.9999M24.5376 21.9999V18.3461C24.5376 17.7938 24.9853 17.3461 25.5376 17.3461H34.9606C35.5129 17.3461 35.9606 17.7938 35.9606 18.3461V21.9999M24.5376 21.9999C28.7285 21.9999 32.8643 21.9999 35.9606 21.9999M35.9606 21.9999C36.4062 21.9999 36.8303 21.9999 37.2299 21.9999C39.2061 21.9999 40.6054 22.75 41.4277 24.1153M41.4277 24.1153V18.6153V10.3076C41.4277 9.75533 40.98 9.30762 40.4277 9.30762H4.66736C4.11507 9.30762 3.66736 9.75533 3.66736 10.3076V23.6922M3.38371 31.3076V34.1153C3.38371 34.6676 3.83143 35.1153 4.38371 35.1153H6.19141C6.74369 35.1153 7.19141 34.6676 7.19141 34.1153V31.3076M3.38371 31.3076H7.19141M7.19141 31.3076H37.6529M37.6529 31.3076V34.1153C37.6529 34.6676 38.1007 35.1153 38.6529 35.1153H40.4277C40.98 35.1153 41.4277 34.6676 41.4277 34.1153V31.3076M37.6529 31.3076H41.4277\",\n    strokeWidth: 2\n  }))), /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1345_12132\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 44,\n    height: 44,\n    fill: \"white\"\n  }))))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"cabinets\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Catalog/\\xD0\\xA8\\xD0\\xB0\\xD1\\x84\\xD0\\xB8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.9992 3.94824C10.0267 3.94824 9.0941 4.33455 8.40646 5.02218C7.71883 5.70982 7.33252 6.64245 7.33252 7.61491V35.1149C7.33252 36.8363 8.50002 38.2691 10.0916 38.6698C10.5825 38.7934 10.9992 39.192 10.9992 39.6983C10.9992 40.2045 11.4096 40.6149 11.9159 40.6149H13.4436C13.9499 40.6149 14.3603 40.2045 14.3603 39.6983C14.3603 39.192 14.7707 38.7816 15.277 38.7816H28.7214C29.2277 38.7816 29.6381 39.192 29.6381 39.6983C29.6381 40.2045 30.0485 40.6149 30.5548 40.6149H32.0825C32.5888 40.6149 32.9992 40.2045 32.9992 39.6983C32.9992 39.192 33.4159 38.7934 33.9068 38.6698C35.4984 38.2691 36.6659 36.8363 36.6659 35.1149V7.61491C36.6659 6.64245 36.2796 5.70982 35.5919 5.02218C34.9043 4.33455 33.9717 3.94824 32.9992 3.94824H10.9992ZM9.77697 8.36933C9.77697 7.26476 10.6724 6.36933 11.777 6.36933H20.3881C20.9404 6.36933 21.3881 6.81705 21.3881 7.36933V35.6662C21.3881 36.2185 20.9404 36.6662 20.3881 36.6662H11.777C10.6724 36.6662 9.77697 35.7708 9.77697 34.6662V8.36933ZM23.2214 7.36933C23.2214 6.81705 23.6691 6.36933 24.2214 6.36933H32.2214C33.326 6.36933 34.2214 7.26476 34.2214 8.36933V34.6662C34.2214 35.7708 33.326 36.6662 32.2214 36.6662H24.2214C23.6691 36.6662 23.2214 36.2185 23.2214 35.6662V7.36933ZM15.6659 18.6149C15.1136 18.6149 14.6659 19.0626 14.6659 19.6149V23.1149C14.6659 23.6672 15.1136 24.1149 15.6659 24.1149H17.027C17.5793 24.1149 18.027 23.6672 18.027 23.1149V19.6149C18.027 19.0626 17.5793 18.6149 17.027 18.6149H15.6659ZM27.277 18.6149C26.7247 18.6149 26.277 19.0626 26.277 19.6149V23.1149C26.277 23.6672 26.7247 24.1149 27.277 24.1149H28.3325C28.8848 24.1149 29.3325 23.6672 29.3325 23.1149V19.6149C29.3325 19.0626 28.8848 18.6149 28.3325 18.6149H27.277Z\",\n    strokeWidth: 0\n  })))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"chairs\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Catalog/\\\\xD0\\\\xA1\\\\xD1\\\\x82\\\\xD1\\\\x96\\\\xD0\\\\xBB\\\\xD1\\\\x8C\\\\xD1\\\\x86\\\\xD1\\\\x96\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 1\",\n    d: \"M29.7769 13.4592C29.7014 13.4671 29.6305 13.4706 29.5667 13.4706C25.3086 13.4706 16.4441 13.4706 15.0505 13.4706C13.657 13.4706 13.3086 12.5883 13.3086 12C13.3086 11.804 13.3086 10.9412 13.3086 9.05882C13.3086 7.73723 13.9418 7 15.3409 7C19.7925 7.00002 28.6957 7.00004 29.857 7C31.0183 6.99996 31.3086 8.27453 31.3086 8.76475C31.3086 9.35299 31.3086 10.8236 31.3086 12C31.3086 13.0472 30.3886 13.3953 29.7769 13.4592ZM29.7769 13.4592L29.9116 16.4006L30.7279 35.5294C30.7279 36.1176 30.7279 37 29.5667 37C28.6957 37 28.4054 36.4118 28.4054 36.1176C28.332 34.9029 28.2363 33.3585 28.1305 31.7059M14.7602 13.4706L14.2565 33.4831L14.1796 35.8235C14.1796 36.2157 14.3538 36.7059 15.0505 36.7059C15.9215 36.7059 16.2118 36.4118 16.2118 35.8235C16.2118 35.7076 16.3321 34.0229 16.5015 31.7059M16.641 29.8064C16.8842 26.5044 17.1779 22.5619 17.3731 19.9412C17.3731 19.3529 17.6634 18.1765 18.8247 18.1765C19.986 18.1765 23.9538 18.1765 25.7925 18.1765C26.1796 18.1765 27.0118 18.5294 27.2441 19.9412C27.3955 20.8616 27.7197 25.4163 28.0075 29.8064M16.641 29.8064H28.0075M16.641 29.8064C16.5921 30.4708 16.5452 31.1093 16.5015 31.7059M28.0075 29.8064C28.0495 30.447 28.0907 31.0841 28.1305 31.7059M16.5015 31.7059H28.1305\",\n    strokeWidth: 1.5\n  })))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"decor\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Catalog/\\\\xD0\\\\x94\\\\xD0\\\\xB5\\\\xD0\\\\xBA\\\\xD0\\\\xBE\\\\xD1\\\\x80\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M23.285 28.0985V28.8748L24.037 29.0673C25.5834 29.4632 26.9814 30.3118 28.0549 31.5083C29.1286 32.7049 29.8298 34.1961 30.0693 35.7957L30.0702 35.8019C30.0742 35.8276 30.0727 35.8538 30.0657 35.8787C30.0588 35.9035 30.0468 35.9257 30.0313 35.9441C30.0158 35.9625 29.9971 35.9766 29.977 35.9859C29.9572 35.9952 29.9361 35.9999 29.915 36C29.9148 36 29.9146 36 29.9144 36H14.105C14.1048 36 14.1046 36 14.1044 36C14.0833 35.9999 14.0622 35.9952 14.0424 35.9859C14.0223 35.9766 14.0036 35.9625 13.9881 35.9442C13.9726 35.9257 13.9606 35.9035 13.9537 35.8787C13.9467 35.8538 13.9452 35.8276 13.9492 35.8019L13.9492 35.8019L13.9502 35.7949C14.1882 34.1971 14.8868 32.7069 15.9574 31.5101C17.0279 30.3134 18.4225 29.4633 19.9663 29.0644L20.7161 28.8707V28.0962V24.309C20.7161 24.2649 20.7336 24.2247 20.7614 24.1966C20.7889 24.1688 20.824 24.1551 20.8584 24.1551H23.1428C23.1772 24.1551 23.2122 24.1688 23.2397 24.1966C23.2675 24.2247 23.285 24.2649 23.285 24.309V28.0985ZM28.2725 8.08226L28.2725 8.08227L28.2751 8.08746L33.9836 19.6216C33.9838 19.6221 33.984 19.6226 33.9843 19.6231C33.9956 19.6469 34.0011 19.6738 33.9998 19.7011C33.9985 19.729 33.9902 19.7555 33.9764 19.778C33.9627 19.8005 33.9442 19.818 33.9237 19.8296L34.4178 20.699L33.9237 19.8296C33.9038 19.841 33.8821 19.8468 33.8605 19.8472H31.1382H30.1382V20.8472V24.309C30.1382 24.3531 30.1208 24.3934 30.093 24.4215C30.0655 24.4492 30.0304 24.463 29.996 24.463C29.9616 24.463 29.9265 24.4492 29.899 24.4215L29.1883 25.125L29.899 24.4215C29.8712 24.3934 29.8538 24.3531 29.8538 24.309V20.8472V19.8472H28.8538H10.1399C10.1181 19.8468 10.0963 19.841 10.0762 19.8296C10.0556 19.8178 10.0371 19.8003 10.0233 19.7777C10.0096 19.755 10.0013 19.7283 10.0001 19.7003C9.99896 19.6723 10.0049 19.6448 10.0169 19.6207L10.0173 19.6199L15.7279 8.08132C15.728 8.08125 15.728 8.08119 15.728 8.08112C15.741 8.05497 15.7603 8.0344 15.7823 8.02061C15.8042 8.00695 15.8284 8.00014 15.8525 8H28.1479C28.172 8.00022 28.1963 8.00712 28.2181 8.0209C28.2403 8.03489 28.2596 8.05577 28.2725 8.08226Z\",\n    strokeWidth: 2\n  })))), /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"dressers\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1755_4643)\"\n  }, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_1755_4643\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 7,\n    width: 44,\n    height: 30\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44 7H0V37H44V7Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_1755_4643)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.0018 29.5304V29.5317M20.0018 29.5317C20.0025 30.6347 20.8774 31.5665 22.0071 31.5665C23.1387 31.5665 24.0124 30.6335 24.0124 29.5304C24.0124 28.4314 23.14 27.4944 22.0071 27.4944C20.8742 27.4944 20.0005 28.4998 20.0018 29.5317ZM2.87199 7.87891H40.6891C41.3831 7.87891 42.0005 8.55579 42.0005 9.17891C42.0005 9.80158 41.3836 10.478 40.6891 10.478C39.9267 10.478 39.3086 11.0961 39.3086 11.8585V13.778C39.3086 14.3855 38.8161 14.878 38.2086 14.878H5.40615C4.79864 14.878 4.30615 14.3855 4.30615 13.778V11.9122C4.30615 11.1201 3.66405 10.478 2.87199 10.478C2.17815 10.478 1.56055 9.80134 1.56055 9.17891C1.56055 8.55602 2.1786 7.87891 2.87199 7.87891ZM19.7752 12.4595C19.7752 13.5595 20.6485 14.4965 21.7805 14.4965C22.9138 14.4965 23.7858 13.559 23.7858 12.4595C23.7858 11.3601 22.9138 10.4226 21.7805 10.4226C20.6485 10.4226 19.7752 11.3596 19.7752 12.4595ZM5.40615 23.6772C4.79864 23.6772 4.30615 23.1848 4.30615 22.5772V19.539C4.30615 18.9315 4.79864 18.439 5.40615 18.439H38.2086C38.8161 18.439 39.3086 18.9315 39.3086 19.539V22.5772C39.3086 23.1848 38.8161 23.6772 38.2086 23.6772H5.40615ZM24.0124 21.005C24.0124 19.9046 23.1395 18.9689 22.0071 18.9689C20.8747 18.9689 20.0011 19.9056 20.0018 21.0063C20.0025 22.107 20.876 23.042 22.0071 23.042C23.14 23.042 24.0124 22.1058 24.0124 21.005ZM4.30615 35.7629V30.6466V28.339C4.30615 27.7315 4.79864 27.239 5.40615 27.239H38.2077C38.8152 27.239 39.3077 27.7315 39.3077 28.339V35.7629C39.3077 35.8578 39.3038 35.9362 39.297 35.9999H35.1383C35.1262 35.942 35.1176 35.8632 35.1176 35.7629V34.4981C35.1176 32.8965 33.8192 31.5981 32.2176 31.5981H11.3972C9.79553 31.5981 8.49719 32.8965 8.49719 34.4981V35.7629C8.49719 35.8547 8.4869 35.9265 8.4736 35.9776C8.47148 35.9858 8.46935 35.9933 8.46727 35.9999H4.31248C4.30819 35.9341 4.30615 35.8561 4.30615 35.7629Z\",\n    strokeWidth: 1.8,\n    strokeLinejoin: \"round\"\n  })))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1755_4643\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 44,\n    height: 30,\n    fill: \"white\",\n    transform: \"translate(0 7)\"\n  }))))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"sofas\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Property 1=Default\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M3.66602 29.3337V34.8337M21.9993 23.8337V12.8337C21.9993 11.8612 22.3857 10.9286 23.0733 10.2409C23.7609 9.5533 24.6936 9.16699 25.666 9.16699H32.9993C33.9718 9.16699 34.9044 9.5533 35.5921 10.2409C36.2797 10.9286 36.666 11.8612 36.666 12.8337V16.5003M21.9993 23.8337V12.8337C21.9993 11.8612 21.613 10.9286 20.9254 10.2409C20.2378 9.5533 19.3051 9.16699 18.3327 9.16699H10.9993C10.0269 9.16699 9.09426 9.5533 8.40662 10.2409C7.71899 10.9286 7.33268 11.8612 7.33268 12.8337V16.5003\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M40.3327 29.3333V34.8333M36.666 16.5C35.6936 16.5 34.7609 16.8863 34.0733 17.5739C33.3857 18.2616 32.9994 19.1942 32.9994 20.1667V23.8333H10.9994V20.1667C10.9994 19.1942 10.613 18.2616 9.92541 17.5739C9.23778 16.8863 8.30515 16.5 7.33268 16.5C6.36022 16.5 5.42759 16.8863 4.73996 17.5739C4.05232 18.2616 3.66602 19.1942 3.66602 20.1667V31.1667H40.3327V20.1667C40.3327 19.1942 39.9464 18.2616 39.2588 17.5739C38.5711 16.8863 37.6385 16.5 36.666 16.5Z\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"tables\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Catalog/\\\\xD0\\\\xA1\\\\xD1\\\\x82\\\\xD0\\\\xBE\\\\xD0\\\\xBB\\\\xD0\\\\xB8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M3.66699 14.4044C3.66699 13.5366 4.37055 12.833 5.23842 12.833H38.7622C39.6301 12.833 40.3337 13.5366 40.3337 14.4044C40.3337 15.2723 39.6301 15.9759 38.7622 15.9759H34.048L37.2054 33.4633C37.3342 34.1768 36.7859 34.833 36.0608 34.833C35.5012 34.833 35.0208 34.4344 34.9177 33.8843L33.0443 23.893C32.867 22.9471 32.041 22.2616 31.0786 22.2616H12.9221C11.9597 22.2616 11.1337 22.9471 10.9563 23.893L9.06321 33.9897C8.97153 34.4787 8.54458 34.833 8.04708 34.833C7.40257 34.833 6.91517 34.2497 7.02968 33.6155L10.2146 15.9759H5.23842C4.37055 15.9759 3.66699 15.2723 3.66699 14.4044ZM31.9463 17.6792C31.7995 16.7001 30.9584 15.9759 29.9684 15.9759H13.8579C12.8304 15.9759 11.9701 16.7545 11.8678 17.7769L11.6341 20.1145C11.5752 20.7031 12.0375 21.214 12.6291 21.214H31.3153C31.9267 21.214 32.395 20.6702 32.3043 20.0656L31.9463 17.6792Z\",\n    strokeWidth: 0\n  })))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 44 44\",\n    id: \"armChairs\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Catalog/\\\\xD0\\\\x9A\\\\xD1\\\\x80\\\\xD1\\\\x96\\\\xD1\\\\x81\\\\xD0\\\\xBB\\\\xD0\\\\xB0\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M7.33301 33V38.5M9.16634 18.3333V9.16667C9.16634 8.19421 9.55265 7.26158 10.2403 6.57394C10.9279 5.88631 11.8605 5.5 12.833 5.5H31.1663C32.1388 5.5 33.0714 5.88631 33.7591 6.57394C34.4467 7.26158 34.833 8.19421 34.833 9.16667V18.3333\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M36.666 32.9997V38.4997M35.7493 18.333C34.5338 18.333 33.368 18.8159 32.5084 19.6754C31.6489 20.535 31.166 21.7008 31.166 22.9163V25.6663H12.8327V22.9163C12.8325 22.0491 12.5863 21.1998 12.1227 20.4669C11.6591 19.7341 10.9971 19.1478 10.2135 18.7762C9.43 18.4045 8.55712 18.2628 7.69626 18.3674C6.83541 18.4721 6.0219 18.8188 5.35023 19.3673C4.67856 19.9159 4.17629 20.6437 3.90176 21.4663C3.62722 22.2889 3.59168 23.1725 3.79928 24.0145C4.00687 24.8564 4.44907 25.6222 5.07452 26.2229C5.69997 26.8236 6.48301 27.2346 7.33268 27.408V32.9997H36.666V27.408C37.7799 27.1818 38.77 26.5498 39.4441 25.6347C40.1183 24.7196 40.4283 23.5866 40.3141 22.4557C40.1998 21.3249 39.6695 20.2768 38.826 19.5149C37.9825 18.7531 36.886 18.3319 35.7493 18.333V18.333Z\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCategoriesSprite);\nexport default __webpack_public_path__ + \"static/media/categories-sprite.236f4a68d41fc3391445ea40f3ad79f3.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useEffect } from 'react';\r\nimport { Loading } from '../types/types';\r\nimport { API_BASE } from '../utils/API_BASE';\r\n\r\nfunction useFetch(apiQuery: string) {\r\n    const [data, setData] = useState<any[]>([]);\r\n    const [loading, setLoading] = useState<Loading>('idle');\r\n    const [error, setError] = useState<unknown | null>(null);\r\n\r\n    const url = `${API_BASE}${apiQuery}`;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const response = await fetch(url);\r\n                setLoading('pending');\r\n                const result = await response.json();\r\n\r\n                if (!response.ok) throw new Error('something went wrong');\r\n\r\n                setData(result);\r\n                setError(null);\r\n                setLoading('succeeded');\r\n            } catch (errors) {\r\n                setError(errors);\r\n                setLoading('failed');\r\n            }\r\n        }\r\n        if (error === null) fetchData();\r\n    }, [error, url]);\r\n\r\n    return { data, loading, error };\r\n}\r\n\r\nexport default useFetch;\r\n","import { useEffect } from 'react';\r\nimport { useParams, NavLink, useLocation } from 'react-router-dom';\r\nimport nextId from 'react-id-generator';\r\nimport renderServerData from '../../../../helpers/renderServerData';\r\nimport categoriesSprite from '../../../../assets/icons/categories/categories-sprite.svg';\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/hooks';\r\nimport {\r\n    fetchFiltersOptionsByCategory,\r\n    updateFilterSortParam,\r\n    updateGlobalFiltersQuery,\r\n    updateCurrentCategory,\r\n    updateCurrentPage,\r\n} from '../../../../store/reducers/catalogFilterSlice';\r\nimport { fetchCatalogProductsByCategories } from '../../../../store/reducers/catalogProductsSlice';\r\nimport useFetch from '../../../../hooks/useFetch';\r\nimport './CategoryList.scss';\r\nimport { Loading } from '../../../../types/types';\r\n\r\ntype CategoriesType = {\r\n    id: string;\r\n    name: string;\r\n    spriteIcon: string;\r\n};\r\n\r\ntype SubCategoryType = {\r\n    id: string;\r\n    name: string;\r\n};\r\n\r\nconst CategoryList = () => {\r\n    const { categoryName, subCategoryName } = useParams();\r\n    const { pathname } = useLocation();\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        loading,\r\n        error,\r\n        data,\r\n    }: { loading: Loading; error: null | unknown; data: CategoriesType[] } =\r\n        useFetch('category');\r\n    const categories = useAppSelector((state) => state.categories.data);\r\n\r\n    useEffect(() => {\r\n        if (data.length === 0 || loading !== 'succeeded') return;\r\n        if (categories.length === 0) return;\r\n\r\n        const loadedCategory = data.find(\r\n            (category) => category.name === categoryName\r\n        );\r\n        const { id } = loadedCategory as CategoriesType;\r\n        dispatch(updateCurrentCategory(id));\r\n        dispatch(updateCurrentPage(0));\r\n        if (!subCategoryName) {\r\n            dispatch(fetchFiltersOptionsByCategory({ categoryId: id }));\r\n            dispatch(fetchCatalogProductsByCategories(id));\r\n            dispatch(updateFilterSortParam(null));\r\n        } else if (subCategoryName) {\r\n            const loadedSubCategory = categories\r\n                .map((category) => {\r\n                    return category.categoryDtos.find((subCategory) => {\r\n                        return subCategory.name === subCategoryName;\r\n                    });\r\n                })\r\n                .filter((subcategory) => subcategory !== undefined);\r\n\r\n            const subCategory = loadedSubCategory[0] as SubCategoryType;\r\n            const subId = subCategory.id;\r\n            dispatch(\r\n                updateGlobalFiltersQuery({\r\n                    subCategories: [subId],\r\n                })\r\n            );\r\n            dispatch(fetchCatalogProductsByCategories(subId));\r\n            dispatch(\r\n                fetchFiltersOptionsByCategory({\r\n                    categoryId: id,\r\n                    subcategoryId: subId,\r\n                })\r\n            );\r\n        }\r\n    }, [loading, data, pathname, categories]);\r\n\r\n    const renderedItems = () => {\r\n        return data.map((category) => {\r\n            const { name, id, spriteIcon } = category;\r\n            return (\r\n                <li\r\n                    className=\"category-list__item\"\r\n                    key={nextId('catalog-category')}\r\n                >\r\n                    <NavLink\r\n                        to={`/catalog/${name}`}\r\n                        className={({ isActive }) => {\r\n                            return isActive\r\n                                ? 'category-list__link active'\r\n                                : 'category-list__link';\r\n                        }}\r\n                    >\r\n                        <svg\r\n                            className=\"category-list__icon\"\r\n                            width=\"44\"\r\n                            height=\"44\"\r\n                        >\r\n                            <use href={`${categoriesSprite}#${spriteIcon}`} />\r\n                        </svg>\r\n                        <span className=\"category-list__title\">{name}</span>\r\n                    </NavLink>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <section className=\"category\">\r\n            <div className=\"container\">\r\n                <ul className=\"category-list\">\r\n                    {renderServerData({\r\n                        loading,\r\n                        error,\r\n                        content: renderedItems,\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CategoryList;\r\n","import { useState, useEffect, ChangeEvent } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/hooks';\r\nimport { updateLocalFiltersState } from '../../../../../store/reducers/catalogFilterSlice';\r\nimport './ColorFilter.scss';\r\n\r\ntype Colors = {\r\n    countOfProducts: number;\r\n    id: string;\r\n    name: string;\r\n};\r\n\r\ntype Props = {\r\n    filterTitle: string;\r\n    colors: Colors[] | any;\r\n};\r\n\r\nconst ColorFilter = (props: Props) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(true);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const [colorsId, setColorsId] = useState<string[]>([]);\r\n    const { filterTitle, colors } = props;\r\n    const currentValueFromStore = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody.colors\r\n    );\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            updateLocalFiltersState({\r\n                colors: colorsId,\r\n            })\r\n        );\r\n    }, [isActive, colorsId]);\r\n\r\n    useEffect(() => {\r\n        if (!currentValueFromStore) return;\r\n        setIsActive(false);\r\n        setColorsId(currentValueFromStore);\r\n    }, [currentValueFromStore]);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setIsActive(true);\r\n        const { target } = e;\r\n        const colorId = target.value;\r\n\r\n        if (target.checked) {\r\n            setColorsId((prev) => [...prev, colorId]);\r\n        } else {\r\n            setColorsId((prev) => {\r\n                return prev.filter((item) => item !== colorId);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`filter ${isOpen ? 'active' : ''}`}>\r\n            <button\r\n                className=\"filter__button\"\r\n                type=\"button\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {filterTitle}\r\n            </button>\r\n            <ul className=\"filter__list\">\r\n                {colors.map((color: Colors) => {\r\n                    const hex = color.id;\r\n                    const colorName = color.name;\r\n                    return (\r\n                        <li\r\n                            className=\"filter__item filter__item_color\"\r\n                            key={nextId('filter-color')}\r\n                        >\r\n                            <label className=\"filter__label\">\r\n                                <input\r\n                                    className=\"filter__input filter__input_color\"\r\n                                    type=\"checkbox\"\r\n                                    checked={colorsId.includes(hex)}\r\n                                    value={hex}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                                <span className=\"filter__input-custom\">\r\n                                    <span\r\n                                        className=\"filter__input-default\"\r\n                                        style={{ backgroundColor: `${hex}` }}\r\n                                    />\r\n                                    <span className=\"filter__input-checked\" />\r\n                                </span>\r\n                                <span className=\"filter__label-title\">\r\n                                    {colorName}\r\n                                </span>\r\n                            </label>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ColorFilter;\r\n","import { useState, useEffect } from 'react';\r\nimport Slider from 'rc-slider';\r\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/hooks';\r\nimport { updateLocalFiltersState } from '../../../../../store/reducers/catalogFilterSlice';\r\nimport 'rc-slider/assets/index.css';\r\nimport './RangeFilter.scss';\r\n\r\ntype Props = {\r\n    minValue: number;\r\n    maxValue: number;\r\n    filterTitle: string;\r\n    rangeMinName: string;\r\n    rangeMaxName: string;\r\n};\r\n\r\nconst RangeFilter = (props: Props) => {\r\n    const { minValue, maxValue, filterTitle, rangeMinName, rangeMaxName } =\r\n        props;\r\n    const [isOpen, setIsOpen] = useState<boolean>(true);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const [firstInputValue, setFirstInputValue] = useState<number | ''>(\r\n        minValue\r\n    );\r\n    const [secondInputValue, setSecondInputValue] = useState<number | ''>(\r\n        maxValue\r\n    );\r\n    const [values, setValues] = useState<number[]>([minValue, maxValue]);\r\n    const filtersBody = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody\r\n    );\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isActive && firstInputValue && secondInputValue) {\r\n            dispatch(\r\n                updateLocalFiltersState({\r\n                    [rangeMinName]: firstInputValue,\r\n                    [rangeMaxName]: secondInputValue,\r\n                })\r\n            );\r\n        }\r\n    }, [values, isActive]);\r\n\r\n    useEffect(() => {\r\n        if (!filtersBody[rangeMinName] || !filtersBody[rangeMaxName]) return;\r\n        setFirstInputValue(filtersBody[rangeMinName] as number);\r\n        setSecondInputValue(filtersBody[rangeMaxName] as number);\r\n    }, [filtersBody]);\r\n\r\n    useEffect(() => {\r\n        if (!firstInputValue || !secondInputValue) return;\r\n        setValues([firstInputValue, secondInputValue]);\r\n    }, [firstInputValue, secondInputValue]);\r\n\r\n    const handleMinInputCheck = () => {\r\n        setIsActive(true);\r\n        if (firstInputValue === '') {\r\n            setValues([values[0], values[1]]);\r\n            setFirstInputValue(values[0]);\r\n        } else if (firstInputValue > values[1]) {\r\n            setValues([values[1] - 1, values[1]]);\r\n            setFirstInputValue(values[1] - 1);\r\n        } else if (firstInputValue < minValue) {\r\n            setValues([minValue, values[1]]);\r\n            setFirstInputValue(minValue);\r\n        } else {\r\n            setFirstInputValue(Math.round(firstInputValue));\r\n            setValues([Math.round(firstInputValue), values[1]]);\r\n        }\r\n    };\r\n\r\n    const handleMaxInputCheck = () => {\r\n        setIsActive(true);\r\n        if (secondInputValue === '') {\r\n            setValues([values[0], values[1]]);\r\n            setSecondInputValue(values[1]);\r\n        } else if (secondInputValue < values[0]) {\r\n            setValues([values[0], values[0] + 1]);\r\n            setSecondInputValue(values[0] + 1);\r\n        } else if (secondInputValue > maxValue) {\r\n            setValues([values[0], maxValue]);\r\n            setSecondInputValue(maxValue);\r\n        } else {\r\n            setSecondInputValue(Math.round(secondInputValue));\r\n            setValues([values[0], Math.round(secondInputValue)]);\r\n        }\r\n    };\r\n\r\n    const handlerChangeRange = (e: number | number[]) => {\r\n        setIsActive(true);\r\n        if (Array.isArray(e)) {\r\n            setFirstInputValue(e[0]);\r\n            setSecondInputValue(e[1]);\r\n            setValues(e);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={`filter ${isOpen ? 'active' : ''}`}>\r\n            <button\r\n                className=\"filter__button\"\r\n                type=\"button\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {filterTitle}\r\n            </button>\r\n            <div className=\"filter__list filter__list_range\">\r\n                <fieldset className=\"filter__range-inputs\">\r\n                    <label className=\"filter__range-label\">\r\n                        <span className=\"filter__range-title\">від</span>\r\n                        <input\r\n                            className=\"filter__range-input\"\r\n                            type=\"number\"\r\n                            onBlur={handleMinInputCheck}\r\n                            onKeyDown={(e) =>\r\n                                e.code === 'Enter' && handleMinInputCheck()\r\n                            }\r\n                            onChange={(e) => {\r\n                                setFirstInputValue(+e.target.value || '');\r\n                            }}\r\n                            value={firstInputValue}\r\n                        />\r\n                    </label>\r\n                    <label className=\"filter__range-label\">\r\n                        <span className=\"filter__range-title\">до</span>\r\n                        <input\r\n                            className=\"filter__range-input\"\r\n                            type=\"number\"\r\n                            onBlur={handleMaxInputCheck}\r\n                            onKeyDown={(e) =>\r\n                                e.code === 'Enter' && handleMaxInputCheck()\r\n                            }\r\n                            onChange={(e) =>\r\n                                setSecondInputValue(+e.target.value || '')\r\n                            }\r\n                            value={secondInputValue}\r\n                        />\r\n                    </label>\r\n                </fieldset>\r\n                <div className=\"filter__range-slider\">\r\n                    <Slider\r\n                        range\r\n                        value={values}\r\n                        step={1}\r\n                        min={minValue}\r\n                        max={maxValue}\r\n                        onChange={handlerChangeRange}\r\n                        allowCross={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RangeFilter;\r\n","import { useState, useEffect } from 'react';\r\nimport { updateLocalFiltersState } from '../../../../../store/reducers/catalogFilterSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/hooks';\r\nimport '../CheckboxStyles.scss';\r\n\r\ntype TransformationFilterProps = {\r\n    firstOption: { optionTitle: string; boolean: boolean };\r\n    secondOption: { optionTitle: string; boolean: boolean };\r\n    filterTitle: string;\r\n    valueName: string;\r\n};\r\n\r\nconst TransformationFilter = ({\r\n    filterTitle,\r\n    firstOption,\r\n    secondOption,\r\n    valueName,\r\n}: TransformationFilterProps) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(true);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const [currentValue, setCurrentValue] = useState<string | null>(null);\r\n    const [buleanValue, setBuleanValue] = useState<boolean | null>(null);\r\n    const firstOptionTitle = firstOption.optionTitle;\r\n    const secondOptionTitle = secondOption.optionTitle;\r\n    const currentValueFromStore = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody[valueName]\r\n    );\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (\r\n            currentValueFromStore === null ||\r\n            currentValueFromStore === undefined\r\n        )\r\n            return;\r\n        setIsActive(false);\r\n        if (currentValueFromStore) {\r\n            setCurrentValue(firstOptionTitle);\r\n        } else {\r\n            setCurrentValue(secondOptionTitle);\r\n        }\r\n    }, [currentValueFromStore]);\r\n\r\n    useEffect(() => {\r\n        if (currentValue === null) {\r\n            setBuleanValue(null);\r\n        } else if (currentValue === firstOptionTitle) {\r\n            setBuleanValue(firstOption.boolean);\r\n        } else {\r\n            setBuleanValue(secondOption.boolean);\r\n        }\r\n    }, [currentValue, isActive]);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            updateLocalFiltersState({\r\n                [valueName]: buleanValue,\r\n            })\r\n        );\r\n    }, [buleanValue]);\r\n\r\n    return (\r\n        <div className={`filter ${isOpen ? 'active' : ''}`}>\r\n            <button\r\n                className=\"filter__button\"\r\n                type=\"button\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {filterTitle}\r\n            </button>\r\n            <ul className=\"filter__list\">\r\n                <li className=\"filter__item\">\r\n                    <label className=\"filter__label\">\r\n                        <input\r\n                            className=\"filter__input\"\r\n                            type=\"radio\"\r\n                            value={firstOptionTitle}\r\n                            checked={currentValue === firstOptionTitle}\r\n                            onChange={(e) => {}}\r\n                            onClick={() => {\r\n                                setIsActive(true);\r\n                                setCurrentValue((prev) =>\r\n                                    prev === firstOptionTitle\r\n                                        ? null\r\n                                        : firstOptionTitle\r\n                                );\r\n                            }}\r\n                            name={filterTitle}\r\n                        />\r\n                        <span className=\"filter__input_custom-input\">\r\n                            <span className=\"filter__input_custom-input_default\" />\r\n                            <span className=\"filter__input_custom-input_checked\" />\r\n                        </span>\r\n                        <span className=\"filter__label-title\">\r\n                            {firstOptionTitle}\r\n                        </span>\r\n                    </label>\r\n                </li>\r\n                <li className=\"filter__item\">\r\n                    <label className=\"filter__label\">\r\n                        <input\r\n                            className=\"filter__input\"\r\n                            type=\"radio\"\r\n                            value={secondOptionTitle}\r\n                            checked={currentValue === secondOptionTitle}\r\n                            onChange={(e) => {}}\r\n                            onClick={() => {\r\n                                setIsActive(true);\r\n                                setCurrentValue((prev) =>\r\n                                    prev === secondOptionTitle\r\n                                        ? null\r\n                                        : secondOptionTitle\r\n                                );\r\n                            }}\r\n                            name={filterTitle}\r\n                        />\r\n                        <span className=\"filter__input_custom-input\">\r\n                            <span className=\"filter__input_custom-input_default\" />\r\n                            <span className=\"filter__input_custom-input_checked\" />\r\n                        </span>\r\n                        <span className=\"filter__label-title\">\r\n                            {secondOptionTitle}\r\n                        </span>\r\n                    </label>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransformationFilter;\r\n","import { useState, useEffect, ChangeEvent } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/hooks';\r\nimport { updateLocalFiltersState } from '../../../../../store/reducers/catalogFilterSlice';\r\nimport '../CheckboxStyles.scss';\r\n\r\ntype Options = {\r\n    countOfProducts: number;\r\n    id: string;\r\n    name: string;\r\n};\r\n\r\ntype FilterProps = {\r\n    filterTitle: string;\r\n    options?: Options[] | null;\r\n    maxLoadOptions?: string[] | null;\r\n    valueName: string;\r\n};\r\n\r\nconst CheckboxesFilter = (props: FilterProps) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(true);\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const [checkboxesIds, setCheckboxesIds] = useState<string[]>([]);\r\n    const dispatch = useAppDispatch();\r\n    const {\r\n        filterTitle,\r\n        options = null,\r\n        maxLoadOptions = null,\r\n        valueName,\r\n    } = props;\r\n    const currentValueFromStore = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody[valueName]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!currentValueFromStore) return;\r\n        setIsActive(false);\r\n        setCheckboxesIds(currentValueFromStore as string[]);\r\n    }, [currentValueFromStore]);\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            updateLocalFiltersState({\r\n                [valueName]: [...checkboxesIds],\r\n            })\r\n        );\r\n    }, [isActive, checkboxesIds]);\r\n\r\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setIsActive(true);\r\n        const { target } = e;\r\n        const currentOptionId = e.target.value;\r\n        if (target.checked) {\r\n            setCheckboxesIds((prev) => [...prev, currentOptionId]);\r\n        } else {\r\n            setCheckboxesIds((prev) => {\r\n                return prev.filter((prevId) => prevId !== currentOptionId);\r\n            });\r\n        }\r\n    };\r\n\r\n    const renderFilter = () => {\r\n        if (options && !maxLoadOptions) {\r\n            return options.map((option) => {\r\n                const { id, name, countOfProducts } = option;\r\n                return (\r\n                    <li\r\n                        className=\"filter__item\"\r\n                        key={nextId('checkboxes-filterf')}\r\n                    >\r\n                        <label className=\"filter__label\">\r\n                            <input\r\n                                className=\"filter__input\"\r\n                                type=\"checkbox\"\r\n                                value={id}\r\n                                checked={checkboxesIds.includes(id)}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <span className=\"filter__input_custom-input\">\r\n                                <span className=\"filter__input_custom-input_default\" />\r\n                                <span className=\"filter__input_custom-input_checked\" />\r\n                            </span>\r\n                            <span className=\"filter__label-title\">\r\n                                {`${name}`}{' '}\r\n                                {countOfProducts !== 0\r\n                                    ? `(${countOfProducts})`\r\n                                    : ''}\r\n                            </span>\r\n                        </label>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n        if (maxLoadOptions && !options) {\r\n            return maxLoadOptions.map((option) => {\r\n                return (\r\n                    <li\r\n                        className=\"filter__item\"\r\n                        key={nextId('checkboxes-filterf')}\r\n                    >\r\n                        <label className=\"filter__label\">\r\n                            <input\r\n                                className=\"filter__input\"\r\n                                type=\"checkbox\"\r\n                                value={option}\r\n                                checked={checkboxesIds.includes(option)}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <span className=\"filter__input_custom-input\">\r\n                                <span className=\"filter__input_custom-input_default\" />\r\n                                <span className=\"filter__input_custom-input_checked\" />\r\n                            </span>\r\n                            <span className=\"filter__label-title\">\r\n                                {option}\r\n                            </span>\r\n                        </label>\r\n                    </li>\r\n                );\r\n            });\r\n        }\r\n        return '';\r\n    };\r\n\r\n    return (\r\n        <div className={`filter ${isOpen ? 'active' : ''}`}>\r\n            <button\r\n                className=\"filter__button\"\r\n                type=\"button\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {filterTitle}\r\n            </button>\r\n            <ul className=\"filter__list\">{renderFilter()}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckboxesFilter.defaultProps = {\r\n    options: null,\r\n    maxLoadOptions: null,\r\n};\r\n\r\nexport default CheckboxesFilter;\r\n","export interface CombinedFilters {\r\n    [key: string]: {\r\n        title: string;\r\n        type: string;\r\n        option1?: { optionTitle: string; boolean: boolean };\r\n        option2?: { optionTitle: string; boolean: boolean };\r\n        'до 100 кг'?: {\r\n            value: string;\r\n        };\r\n        '100-200 кг'?: {\r\n            value: string;\r\n        };\r\n        'от 200 кг'?: {\r\n            value: string;\r\n        };\r\n    };\r\n}\r\n\r\nconst filtersData = () => {\r\n    const filterData: CombinedFilters = {\r\n        colors: {\r\n            title: 'Кольори',\r\n            type: 'colors',\r\n        },\r\n        collections: {\r\n            title: 'Колекція',\r\n            type: 'checkboxes',\r\n        },\r\n        materials: {\r\n            title: 'Матеріали',\r\n            type: 'checkboxes',\r\n        },\r\n        subCategories: {\r\n            title: 'Вид',\r\n            type: 'checkboxes',\r\n        },\r\n        bedLengthMax: {\r\n            title: 'Довжина спального місця (см)',\r\n            type: 'range',\r\n        },\r\n        bedWidthMax: {\r\n            title: 'Ширина спального місця (см)',\r\n            type: 'range',\r\n        },\r\n        depthMax: {\r\n            title: 'Глибина (см)',\r\n            type: 'range',\r\n        },\r\n        maxLoad: {\r\n            title: 'Навантаження (кг)',\r\n            type: 'checkboxes',\r\n        },\r\n        priceMax: {\r\n            title: 'Ціна (грн)',\r\n            type: 'range',\r\n        },\r\n        heightMax: {\r\n            title: 'Висота (см)',\r\n            type: 'range',\r\n        },\r\n        widthMax: {\r\n            title: 'Ширина (см)',\r\n            type: 'range',\r\n        },\r\n        numberOfDoorsMax: {\r\n            title: 'Кількість дверей (шт)',\r\n            type: 'range',\r\n        },\r\n        numberOfDrawersMax: {\r\n            title: 'Кількість шухляд (шт)',\r\n            type: 'range',\r\n        },\r\n        sale: {\r\n            title: 'SALE',\r\n            type: 'boolean',\r\n            option1: { optionTitle: 'Акції', boolean: true },\r\n            option2: { optionTitle: 'Усі товари', boolean: false },\r\n        },\r\n        transformation: {\r\n            title: 'Механізм трансформації',\r\n            type: 'boolean',\r\n            option1: { optionTitle: 'Розкладний', boolean: true },\r\n            option2: { optionTitle: 'Не розкладний', boolean: false },\r\n        },\r\n        heightAdjustment: {\r\n            title: 'Регулювання за висотою',\r\n            type: 'boolean',\r\n            option1: { optionTitle: 'Є регулювання', boolean: true },\r\n            option2: { optionTitle: 'Немає регулювання', boolean: false },\r\n        },\r\n    };\r\n    return { ...filterData };\r\n};\r\n\r\nexport default filtersData;\r\n","import { useEffect, useRef } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport { useParams, useNavigate } from 'react-router';\r\nimport { useLenis, ReactLenis } from '@studio-freight/react-lenis';\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/hooks';\r\nimport {\r\n    resetFilters,\r\n    showHideFilters,\r\n    fetchFiltersOptionsForFilteredProducts,\r\n    updateFiltersBodyWithLocalFiltersState,\r\n    updateCurrentPage,\r\n    duplicateFilterOptions,\r\n} from '../../../../store/reducers/catalogFilterSlice';\r\nimport { fetchCatalogProductsByFilters } from '../../../../store/reducers/catalogProductsSlice';\r\nimport userScrollWidth from '../../../../utils/userScrollWidth';\r\nimport ColorFilter from './ColorFilter/ColorFilter';\r\nimport RangeFilter from './RangeFilter/RangeFilter';\r\nimport BooleanFilter from './BooleanFilter/BooleanFilter';\r\nimport CheckboxesFilter from './CheckboxesFilter/CheckboxesFilter';\r\nimport filtersData from './FiltersData';\r\nimport moveUserToPageUp from '../../../../utils/moveUserToPageUp';\r\nimport './Filters.scss';\r\nimport { FilterOptions } from '../../../../types/catalogFiltersTypes';\r\n\r\nconst Filters = () => {\r\n    const { categoryName, subCategoryName } = useParams();\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n    const isFiltersShowed = useAppSelector(\r\n        (state) => state.catalogFilters.isFiltersShowed\r\n    );\r\n    const isFiltersCleared = useAppSelector(\r\n        (state) => state.catalogFilters.isFiltersCleared\r\n    );\r\n    let filterOptions = useAppSelector(\r\n        (state) => state.catalogFilters.filterOptions\r\n    );\r\n    const filterOptionsDuplicate = useAppSelector(\r\n        (state) => state.catalogFilters.filterOptionsDuplicate\r\n    );\r\n    const filterLoading = useAppSelector(\r\n        (state) => state.catalogFilters.loading\r\n    );\r\n    const id = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody.parentCategoryId\r\n    );\r\n    const filterRef = useRef<HTMLDivElement>(null);\r\n\r\n    const filterLocalMap = filtersData();\r\n\r\n    useEffect(() => {\r\n        const header = document.querySelector('.header') as HTMLElement;\r\n\r\n        if (isFiltersShowed) {\r\n            header.style.paddingRight = `${userScrollWidth() + 16}px`;\r\n            document.body.style.paddingRight = `${userScrollWidth()}px`;\r\n        } else {\r\n            header.style.paddingRight = '16px';\r\n            document.body.style.paddingRight = '0';\r\n        }\r\n        document.body.style.overflow = isFiltersShowed ? 'hidden' : 'visible';\r\n    }, [isFiltersShowed]);\r\n\r\n    useEffect(() => {\r\n        if (!isFiltersCleared) return;\r\n        dispatch(\r\n            fetchCatalogProductsByFilters({\r\n                page: 0,\r\n                isFiltersActive: false,\r\n            })\r\n        );\r\n        dispatch(\r\n            fetchFiltersOptionsForFilteredProducts({\r\n                isFiltersActive: false,\r\n            })\r\n        );\r\n    }, [isFiltersCleared]);\r\n\r\n    useEffect(() => {\r\n        if (!filterOptions) return;\r\n        if (filterOptions.countOfProducts === 0) return;\r\n        dispatch(duplicateFilterOptions(filterOptions));\r\n    }, [filterOptions]);\r\n\r\n    const renderedFilters = (): JSX.Element | JSX.Element[] | any => {\r\n        if (!filterOptions || !filterOptionsDuplicate) return null;\r\n        if (filterOptions.countOfProducts === 0) {\r\n            filterOptions = { ...filterOptionsDuplicate } as FilterOptions;\r\n        }\r\n        const render = Object.keys(filterOptions)\r\n            .map((key: string) => {\r\n                let result;\r\n                if (!filterLocalMap[key]) return result;\r\n                const { type, title } = filterLocalMap[key];\r\n\r\n                if (\r\n                    type === 'colors' &&\r\n                    (filterOptions as FilterOptions).colors.length > 0\r\n                ) {\r\n                    result = (\r\n                        <ColorFilter\r\n                            key={nextId('color-filter')}\r\n                            filterTitle={title}\r\n                            colors={(filterOptions as FilterOptions)[key]}\r\n                        />\r\n                    );\r\n                }\r\n                if (type === 'range') {\r\n                    const valueName = key.replace('Max', '');\r\n                    const minValueName = `${valueName}Min`;\r\n                    const maxValueName = `${valueName}Max`;\r\n                    const minValue = (filterOptions as FilterOptions)[\r\n                        minValueName\r\n                    ];\r\n                    const maxValue = (filterOptions as FilterOptions)[\r\n                        maxValueName\r\n                    ];\r\n\r\n                    if (maxValue && minValue && +maxValue > 0) {\r\n                        result = (\r\n                            <RangeFilter\r\n                                key={nextId('range-filter')}\r\n                                filterTitle={title}\r\n                                minValue={+minValue}\r\n                                maxValue={+maxValue}\r\n                                rangeMinName={minValueName}\r\n                                rangeMaxName={maxValueName}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n                if (\r\n                    type === 'boolean' &&\r\n                    (filterOptions as FilterOptions)[key]\r\n                ) {\r\n                    const { option1, option2 } = filterLocalMap[key];\r\n                    if (option1 === undefined || option2 === undefined)\r\n                        return result;\r\n                    result = (\r\n                        <BooleanFilter\r\n                            key={nextId('boolean-filter')}\r\n                            filterTitle={title}\r\n                            firstOption={option1}\r\n                            secondOption={option2}\r\n                            valueName={key}\r\n                        />\r\n                    );\r\n                }\r\n                if (\r\n                    type === 'checkboxes' &&\r\n                    (filterOptions as FilterOptions)[key]\r\n                ) {\r\n                    const checkboxesFilters = (filterOptions as FilterOptions)[\r\n                        key\r\n                    ] as Array<{\r\n                        id: string;\r\n                        name: string;\r\n                        countOfProducts: number;\r\n                    }>;\r\n                    if (checkboxesFilters.length > 0) {\r\n                        if (key !== 'maxLoad') {\r\n                            result = (\r\n                                <CheckboxesFilter\r\n                                    key={nextId('checkboxes-filter')}\r\n                                    filterTitle={title}\r\n                                    options={checkboxesFilters}\r\n                                    valueName={key}\r\n                                />\r\n                            );\r\n                        } else {\r\n                            result = (\r\n                                <CheckboxesFilter\r\n                                    key={nextId('checkboxes-filter')}\r\n                                    filterTitle={title}\r\n                                    maxLoadOptions={\r\n                                        (filterOptions as FilterOptions)[\r\n                                            key\r\n                                        ] as Array<string>\r\n                                    }\r\n                                    valueName={key}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            })\r\n            .filter((item) => item !== undefined)\r\n            .sort((a, b) => {\r\n                if (a?.props.filterTitle === filterLocalMap.colors.title)\r\n                    return -1;\r\n                if (b?.props.filterTitle === filterLocalMap.colors.title)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n\r\n        return render || null;\r\n    };\r\n\r\n    return (\r\n        <div className={`filters-wrapper ${isFiltersShowed ? 'active' : ''}`}>\r\n            {filterOptions ? (\r\n                <div\r\n                    className=\"filters\"\r\n                    data-lenis-prevent\r\n                    data-lenis-prevent-wheel\r\n                    data-lenis-prevent-touch\r\n                >\r\n                    <div className=\"filters__navigation\">\r\n                        <h2 className=\"filters__title-mobile\">Фільтри</h2>\r\n                        <button\r\n                            className=\"filters__close-filter\"\r\n                            type=\"button\"\r\n                            aria-label=\"закрити фільтри\"\r\n                            onClick={() =>\r\n                                dispatch(showHideFilters(!isFiltersShowed))\r\n                            }\r\n                        />\r\n                    </div>\r\n                    {renderedFilters()}\r\n                </div>\r\n            ) : (\r\n                ''\r\n            )}\r\n            {filterOptions ? (\r\n                <div className=\"buttons\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"buttons__reject\"\r\n                        onClick={() => {\r\n                            if (!id) return;\r\n                            if (subCategoryName) {\r\n                                navigate(`/catalog/${categoryName}`);\r\n                                return;\r\n                            }\r\n                            dispatch(resetFilters(id));\r\n                            dispatch(showHideFilters(false)); // close window on mobile\r\n                            moveUserToPageUp();\r\n                            dispatch(updateCurrentPage(0));\r\n                        }}\r\n                    >\r\n                        <span className=\"buttons__reject_text\">скасувати</span>\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"buttons__submit\"\r\n                        onClick={() => {\r\n                            dispatch(\r\n                                fetchCatalogProductsByFilters({\r\n                                    page: 0,\r\n                                    isFiltersActive: true,\r\n                                })\r\n                            );\r\n                            dispatch(\r\n                                fetchFiltersOptionsForFilteredProducts({\r\n                                    isFiltersActive: true,\r\n                                })\r\n                            );\r\n                            dispatch(updateFiltersBodyWithLocalFiltersState());\r\n                            dispatch(updateCurrentPage(0));\r\n                            moveUserToPageUp();\r\n                            dispatch(showHideFilters(false)); // close window on mobile\r\n                        }}\r\n                    >\r\n                        застосувати\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filters;\r\n","import { useState, useEffect, FormEvent } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport { fetchCatalogProductsByFilters } from '../../../../store/reducers/catalogProductsSlice';\r\nimport {\r\n    updateCurrentPage,\r\n    updateFilterSortParam,\r\n} from '../../../../store/reducers/catalogFilterSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/hooks';\r\nimport './SortProducts.scss';\r\n\r\nconst SortProducts = () => {\r\n    const [currentSortOption, setCurrentSortOption] = useState<string>('');\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const filtersSortParam = useAppSelector(\r\n        (state) => state.catalogFilters.filtersSort\r\n    );\r\n    const dispatch = useAppDispatch();\r\n    const closeSelect = (e: any) => {\r\n        if (\r\n            !e.target.closest('.sort__custom-fields') &&\r\n            !e.target.closest('.sort__custom-select')\r\n        ) {\r\n            setIsActive(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isActive) {\r\n            document.addEventListener('click', closeSelect);\r\n        }\r\n\r\n        return () => document.removeEventListener('click', closeSelect);\r\n    }, [isActive]);\r\n\r\n    useEffect(() => {\r\n        if (!isActive) {\r\n            if (filtersSortParam) {\r\n                dispatch(updateFilterSortParam(null));\r\n            }\r\n            return;\r\n        }\r\n        dispatch(fetchCatalogProductsByFilters({ page: 0 }));\r\n        dispatch(updateCurrentPage(0));\r\n    }, [filtersSortParam]);\r\n\r\n    const handleSortItems = (\r\n        fieldName: string,\r\n        direction: string,\r\n        title: string,\r\n        e: FormEvent<HTMLInputElement>\r\n    ) => {\r\n        const target = e.target as HTMLInputElement;\r\n        setCurrentSortOption(target.value);\r\n        dispatch(updateFilterSortParam({ fieldName, direction, title }));\r\n    };\r\n\r\n    const sortFields = [\r\n        {\r\n            title: 'від дешевих до дорогих',\r\n            fieldName: 'price',\r\n            direction: 'asc',\r\n        },\r\n        {\r\n            title: 'від дорогих до дешевих',\r\n            fieldName: 'price',\r\n            direction: 'desc',\r\n        },\r\n        {\r\n            title: 'за популярністю',\r\n            fieldName: 'popularRating',\r\n            direction: 'asc',\r\n        },\r\n        {\r\n            title: 'за рейтингом',\r\n            fieldName: 'averageRating',\r\n            direction: 'desc',\r\n        },\r\n    ];\r\n\r\n    const renderSortFields = () => {\r\n        return sortFields.map((sortFiled, index) => {\r\n            const { title, fieldName, direction } = sortFiled;\r\n            return (\r\n                <div className=\"sort__field\" key={nextId('sort-field')}>\r\n                    <input\r\n                        className=\"sort__input\"\r\n                        id={`input-${fieldName}${index}`}\r\n                        type=\"radio\"\r\n                        name=\"sort\"\r\n                        checked={title === filtersSortParam?.title}\r\n                        value={title}\r\n                        onChange={(e) =>\r\n                            handleSortItems(fieldName, direction, title, e)\r\n                        }\r\n                    />\r\n                    <label\r\n                        className=\"sort__label\"\r\n                        htmlFor={`input-${fieldName}${index}`}\r\n                    >\r\n                        {title}\r\n                    </label>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-content__sort sort\">\r\n            <div className={`sort__custom-select ${isActive ? 'active' : ''}`}>\r\n                <button\r\n                    className=\"sort__open-btn\"\r\n                    type=\"button\"\r\n                    onClick={() => setIsActive(!isActive)}\r\n                >\r\n                    <span className=\"btn__text\">Сортувати</span>{' '}\r\n                    <span className=\"btn__current-option\">\r\n                        {filtersSortParam\r\n                            ? currentSortOption\r\n                            : 'за популярністю'}\r\n                    </span>\r\n                </button>\r\n                <fieldset className=\"sort__custom-fields\">\r\n                    {renderSortFields()}\r\n                </fieldset>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortProducts;\r\n","import { useAppSelector } from '../../../../hooks/hooks';\r\nimport pluralizeUkrainian from '../../../../helpers/pluralizeUkrainian';\r\nimport './SearchedQuantity.scss';\r\n\r\nconst SearchedQuantity = () => {\r\n    const countOfProducts = useAppSelector(\r\n        (state) => state.catalogFilters.filterOptions?.countOfProducts\r\n    );\r\n\r\n    return (\r\n        <div className=\"main-content__search-quantity search-quantity\">\r\n            <span className=\"search-quantity__title\">Знайдено:</span>\r\n            <span className=\"search-quantity__result\">\r\n                {pluralizeUkrainian(countOfProducts || 0, [\r\n                    'товар',\r\n                    'товари',\r\n                    'товарів',\r\n                ])}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchedQuantity;\r\n","/* eslint-disable react/jsx-no-useless-fragment */\r\nimport { useState, useEffect } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../../../hooks/hooks';\r\nimport { fetchCatalogProductsByFilters } from '../../../../store/reducers/catalogProductsSlice';\r\nimport Pagination2 from '../../../../shared-components/Pagination2/Pagination2';\r\nimport { updateCurrentPage } from '../../../../store/reducers/catalogFilterSlice';\r\n\r\nconst Navigation = () => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [isPaginationInit, setIsPaginationInit] = useState<boolean>(true);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const parentCategoryId = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody.parentCategoryId\r\n    );\r\n    const subCategoryId = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody.subCategoryId\r\n    );\r\n    const countOfPages = useAppSelector(\r\n        (state) => state.catalogFilters.filterOptions?.countOfPages\r\n    );\r\n    const currentPageStore = useAppSelector(\r\n        (state) => state.catalogFilters.currentPage\r\n    );\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(0);\r\n    }, [parentCategoryId, subCategoryId]);\r\n\r\n    useEffect(() => {\r\n        if (currentPage !== currentPageStore) {\r\n            setCurrentPage(currentPageStore);\r\n        }\r\n    }, [currentPageStore]);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCurrentPage(currentPage));\r\n        if (isPaginationInit) return;\r\n        dispatch(fetchCatalogProductsByFilters({ page: currentPage }));\r\n        setIsPaginationInit(true);\r\n    }, [currentPage]);\r\n\r\n    return (\r\n        <Pagination2\r\n            countOfPages={countOfPages}\r\n            currentPage={currentPage}\r\n            setCurrentPage={setCurrentPage}\r\n            setIsPaginationInit={setIsPaginationInit}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport {\r\n    resetFilters,\r\n    updateCurrentPage,\r\n} from '../../../../../store/reducers/catalogFilterSlice';\r\nimport ErrorMessage from '../../../../../shared-components/UserMessages/ErrorMessage';\r\nimport Loader from '../../../../../shared-components/Loader';\r\nimport { useAppSelector, useAppDispatch } from '../../../../../hooks/hooks';\r\nimport './ProductLoader.scss';\r\n\r\nconst ProductLoader = () => {\r\n    const { categoryName, subCategoryName } = useParams();\r\n    const [clearedFilters, setClearedFilters] = useState<boolean>(false);\r\n    const { loading, error, catalogProducts } = useAppSelector(\r\n        (state) => state.catalogProducts\r\n    );\r\n    const isFiltersCleared = useAppSelector(\r\n        (state) => state.catalogFilters.isFiltersCleared\r\n    );\r\n    const id = useAppSelector(\r\n        (state) => state.catalogFilters.filtersBody.parentCategoryId\r\n    );\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!isFiltersCleared) return;\r\n        if (!clearedFilters) return;\r\n        dispatch(updateCurrentPage(0));\r\n    }, [isFiltersCleared, clearedFilters]);\r\n\r\n    const renderItems = () => {\r\n        if (catalogProducts.length === 0 && loading === 'pending') return '';\r\n        if (error) {\r\n            return <ErrorMessage />;\r\n        }\r\n        if (loading !== 'succeeded' && loading !== 'idle') {\r\n            return (\r\n                <div className=\"catalog-products__loading-wrapper\">\r\n                    <Loader maxHeight=\"80dvh\" />\r\n                </div>\r\n            );\r\n        }\r\n        if (catalogProducts.length === 0 && loading === 'succeeded') {\r\n            return (\r\n                <div className=\"nothing-to-search\">\r\n                    <p className=\"nothing-to-search__text\">\r\n                        Вашому вибору відповідає 0 товарів. <br />\r\n                        Будь ласка, спробуйте прибрати один або кілька фільтрів.\r\n                    </p>\r\n                    <button\r\n                        className=\"nothing-to-search__clear-filters\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            if (!id) return;\r\n                            if (subCategoryName) {\r\n                                navigate(`/catalog/${categoryName}`);\r\n                                return;\r\n                            }\r\n                            dispatch(resetFilters(id));\r\n                            setClearedFilters(true);\r\n                        }}\r\n                    >\r\n                        <div className=\"nothing-to-search__clear-filters_text\">\r\n                            Скасувати всі фільтри{' '}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n        return '';\r\n    };\r\n    return <>{renderItems()}</>;\r\n};\r\n\r\nexport default ProductLoader;\r\n","import nextId from 'react-id-generator';\r\nimport { useAppSelector } from '../../../../hooks/hooks';\r\nimport ProductCard from '../../../../shared-components/ProductCard/ProductCard';\r\nimport ProductLoader from './ProductLoader/ProductLoader';\r\nimport './ProductsList.scss';\r\nimport Skeleton from '../../../../shared-components/ProductCard/Skeleton/Skeleton';\r\n\r\nconst ProductsList = () => {\r\n    const skeletonKeys = [...Array(6)].map((_, index) =>\r\n        nextId(`skeleton-card`)\r\n    );\r\n    const catalogProducts = useAppSelector(\r\n        (state) => state.catalogProducts.catalogProducts\r\n    );\r\n    const loading = useAppSelector((state) => state.catalogProducts.loading);\r\n    const error = useAppSelector((state) => state.catalogProducts.error);\r\n    const firstLoadingPage = () => {\r\n        return skeletonKeys.map((skeleton) => {\r\n            return <Skeleton key={nextId('skeleton-catalog-products')} />;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <section className=\"catalog-products\">\r\n            <ProductLoader />\r\n            <ul className=\"catalog-products__list\">\r\n                {catalogProducts.length === 0 &&\r\n                !error &&\r\n                loading !== 'succeeded'\r\n                    ? firstLoadingPage()\r\n                    : ''}\r\n                {!error &&\r\n                    catalogProducts.map((catalogProduct) => {\r\n                        return (\r\n                            <li\r\n                                key={`card-of-catalogItem-${catalogProduct.skuCode}`}\r\n                                className=\"catalog-products__card\"\r\n                            >\r\n                                <ProductCard product={catalogProduct} />\r\n                            </li>\r\n                        );\r\n                    })}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ProductsList;\r\n","import { MouseEvent } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/hooks';\r\nimport { showHideFilters } from '../../../../store/reducers/catalogFilterSlice';\r\n\r\nconst OpenFiltersButton = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { isFiltersShowed } = useAppSelector((state) => state.catalogFilters);\r\n\r\n    const handleClick = (e: MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        dispatch(showHideFilters(!isFiltersShowed));\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className=\"main-content__filters-btn\"\r\n            type=\"button\"\r\n            onClick={handleClick}\r\n        >\r\n            Фільтри\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default OpenFiltersButton;\r\n","import CategoryList from './components/CategoryList/CategoryList';\r\nimport ArrowUp from '../../shared-components/ArrowUp';\r\nimport Breadcrumbs from '../../shared-components/Breadcrumbs/Breadcrumbs';\r\nimport Filters from './components/Filters/Filters';\r\nimport SortProducts from './components/SortProducts/SortProducts';\r\nimport SearchedQuantity from './components/SearchedQuantity/SearchedQuantity';\r\nimport Pagination from './components/Pagination/Pagination';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport ProductsList from './components/ProductsList/ProductsList';\r\nimport OpenFiltersButton from './components/OpenFiltersButton/OpenFiltersButton';\r\nimport './CatalogPage.scss';\r\n\r\nconst CatalogPage = () => {\r\n    return (\r\n        <section className=\"catalog\">\r\n            <Breadcrumbs />\r\n            <CategoryList />\r\n            <div className=\"catalog-content\" id=\"catalog-content\">\r\n                <div className=\"container container_content-wrapper\">\r\n                    <Filters />\r\n                    <div className=\"catalog__main-content main-content\">\r\n                        <div className=\"main-content__top\">\r\n                            <SearchedQuantity />\r\n                            <OpenFiltersButton />\r\n                            <SortProducts />\r\n                        </div>\r\n                        <div className=\"main-content__products\">\r\n                            <ProductsList />\r\n                        </div>\r\n                        <div className=\"main-content__bottom\">\r\n                            {/* <Pagination /> */}\r\n                            <Navigation />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ArrowUp />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default CatalogPage;\r\n","import { useEffect, useState } from 'react';\r\nimport './ArrowUp.scss';\r\n\r\nconst ArrowUp = () => {\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n    const [userScrollTop, setUserScrollTop] = useState<number>();\r\n    const [userScrollBottom, setUserScrollBottom] = useState<number>();\r\n    const scrollPosition = () => {\r\n        const scrollTop = window.scrollY;\r\n        const { scrollHeight, clientHeight } = document.documentElement;\r\n        const scrollBottom = scrollHeight - clientHeight - scrollTop;\r\n        setUserScrollTop(scrollTop);\r\n        setUserScrollBottom(scrollBottom);\r\n    };\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollPosition);\r\n        return () => document.removeEventListener('scroll', scrollPosition);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            userScrollTop &&\r\n            userScrollTop >= 0 &&\r\n            userScrollBottom &&\r\n            userScrollBottom > 250\r\n        ) {\r\n            setIsActive(true);\r\n            return;\r\n        }\r\n        setIsActive(false);\r\n    }, [userScrollTop, userScrollBottom]);\r\n\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <button\r\n            className={`arrow-up ${isActive ? 'active' : ''}`}\r\n            type=\"button\"\r\n            aria-label=\"arrow-up\"\r\n            onClick={handleScrollToTop}\r\n        >\r\n            <svg\r\n                className=\"arrow-up__icon\"\r\n                width=\"10\"\r\n                height=\"21\"\r\n                viewBox=\"0 0 10 21\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0.198868 5.82475L4.51989 0.25628C4.78504 -0.0854288 5.21495 -0.0854288 5.48011 0.25628L9.80113 5.82475C10.0663 6.16646 10.0663 6.72047 9.80113 7.06218C9.53597 7.40389 9.10606 7.40389 8.8409 7.06218L5.67898 2.98744L5.67898 21L4.32102 21L4.32102 2.98744L1.15909 7.06218C0.893935 7.40389 0.464027 7.40389 0.198868 7.06218C-0.0662914 6.72048 -0.0662915 6.16646 0.198868 5.82475Z\"\r\n                />\r\n            </svg>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ArrowUp;\r\n","import ArrowUp from './ArrowUp';\r\n\r\nexport default ArrowUp;\r\n","import { useLocation } from 'react-router';\r\nimport './Breadcrumbs.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport nextId from 'react-id-generator';\r\n\r\nconst Breadcrumbs = () => {\r\n    const location = useLocation();\r\n\r\n    const pathMapping: { [key: string]: string } = {\r\n        catalog: 'Каталог',\r\n        product: 'Товар',\r\n        cart: 'Кошик',\r\n        checkout: 'Оформлення замовлення',\r\n        success: 'Успішно',\r\n        cabinet: 'Особистий кабінет',\r\n        delivery: 'Доставка і оплата',\r\n        about: 'Про нас',\r\n    };\r\n\r\n    const pathSegments = location.pathname\r\n        .split('/')\r\n        .filter((crumb) => crumb !== '');\r\n\r\n    let currentLink = '';\r\n\r\n    const crumbs = pathSegments.map((crumb) => {\r\n        const decodedCrumb = decodeURIComponent(crumb);\r\n        currentLink += `/${decodedCrumb}`;\r\n\r\n        return (\r\n            <li className=\"breadcrumbs__list_item\" key={crumb}>\r\n                <NavLink\r\n                    to={currentLink}\r\n                    className=\"breadcrumbs__list_item_link\"\r\n                >\r\n                    {pathMapping[crumb] || decodedCrumb}\r\n                </NavLink>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    if (crumbs.length > 0) {\r\n        crumbs.unshift(\r\n            <li className=\"breadcrumbs__list_item\" key={nextId('crumb-item')}>\r\n                <NavLink to=\"/\" className=\"breadcrumbs__list_item_link\">\r\n                    Головна\r\n                </NavLink>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <nav className=\"breadcrumbs\">\r\n                <ol className=\"breadcrumbs__list\">{crumbs}</ol>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","var _symbol, _symbol2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPaginationSprites(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 0,\n    height: 0,\n    className: \"hidden\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    id: \"next\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Arrow\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Line 2 (Stroke)\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M16.1753 7.19887L21.7437 11.5199C22.0854 11.785 22.0854 12.215 21.7437 12.4801L16.1753 16.8011C15.8335 17.0663 15.2795 17.0663 14.9378 16.8011C14.5961 16.536 14.5961 16.1061 14.9378 15.8409L19.0126 12.679L1 12.679L1 11.321L19.0126 11.321L14.9378 8.15909C14.5961 7.89394 14.5961 7.46403 14.9378 7.19887C15.2795 6.93371 15.8335 6.93371 16.1753 7.19887Z\"\n  })))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    id: \"prev\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"02.Icons/Arrow\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Line 2 (Stroke)\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.82475 16.8011L2.25628 12.4801C1.91457 12.215 1.91457 11.785 2.25628 11.5199L7.82475 7.19887C8.16646 6.93371 8.72048 6.93371 9.06218 7.19887C9.40389 7.46403 9.40389 7.89393 9.06218 8.15909L4.98744 11.321L23 11.321L23 12.679L4.98744 12.679L9.06218 15.8409C9.40389 16.1061 9.40389 16.536 9.06218 16.8011C8.72048 17.0663 8.16646 17.0663 7.82475 16.8011Z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPaginationSprites);\nexport default __webpack_public_path__ + \"static/media/pagination-sprites.61b4164d85d13173a7ce5726e4f55b93.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport paginationSprite from '../../assets/icons/pagination/pagination-sprites.svg';\r\nimport moveUserToPageUp from '../../utils/moveUserToPageUp';\r\nimport './Pagination2.scss';\r\n\r\nconst Pagination2 = ({\r\n    countOfPages,\r\n    currentPage,\r\n    setCurrentPage,\r\n    setIsPaginationInit,\r\n    setIsPageChosen,\r\n}: {\r\n    countOfPages: number | undefined;\r\n    currentPage: number;\r\n    setCurrentPage: Dispatch<SetStateAction<number>>;\r\n    setIsPaginationInit: Dispatch<SetStateAction<boolean>>;\r\n    setIsPageChosen?: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n    const [pages, setPages] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (!countOfPages) {\r\n            setPages([]);\r\n            return;\r\n        }\r\n        const temporaryPages = [];\r\n        for (let i = 1; i <= countOfPages; i += 1) {\r\n            temporaryPages.push(i);\r\n        }\r\n        setPages([...temporaryPages]);\r\n    }, [countOfPages]);\r\n\r\n    useEffect(() => {\r\n        if (pages.length === 0) {\r\n            setCurrentPage(0);\r\n            return;\r\n        }\r\n        if (pages.length - 1 < currentPage && currentPage !== 0) {\r\n            setCurrentPage(pages.length - 1);\r\n        }\r\n    }, [pages, currentPage]);\r\n\r\n    useEffect(() => {\r\n        if (pages.length === 0) return;\r\n        if (currentPage === null) return;\r\n        setCurrentPage(currentPage);\r\n        moveUserToPageUp();\r\n    }, [currentPage]);\r\n\r\n    const getDots = () => {\r\n        return (\r\n            <li className=\"pagination__item\" key={nextId('page-dots')}>\r\n                <span className=\"pagination__dots\">...</span>\r\n            </li>\r\n        );\r\n    };\r\n\r\n    const getPages = (page: number) => {\r\n        return (\r\n            <li className=\"pagination__item\" key={nextId('page-')}>\r\n                <button\r\n                    className={`pagination__page-btn ${\r\n                        currentPage === page - 1 ? 'active' : ''\r\n                    }`}\r\n                    type=\"button\"\r\n                    data-value={page}\r\n                    onClick={() => {\r\n                        setCurrentPage(page - 1);\r\n                        setIsPaginationInit(false);\r\n                    }}\r\n                >\r\n                    {page}\r\n                </button>\r\n            </li>\r\n        );\r\n    };\r\n\r\n    const inlineStyle = () => {\r\n        const styles: { [key: string]: string } = {};\r\n        if (pages.length === 0) {\r\n            styles.display = 'none';\r\n        } else {\r\n            styles.display = 'inline-block';\r\n        }\r\n        return styles;\r\n    };\r\n\r\n    const renderPagination = () => {\r\n        return pages.map((page, index) => {\r\n            if (currentPage < 3) {\r\n                if (index === 4 && pages.length > 5) {\r\n                    return getDots();\r\n                }\r\n                if (index > 4 && index < pages.length - 1) {\r\n                    return '';\r\n                }\r\n            }\r\n            if (currentPage >= 3 && currentPage < pages.length - 3) {\r\n                if (index === 1 || index === currentPage + 2) {\r\n                    return getDots();\r\n                }\r\n                if (\r\n                    (index > 0 && index < currentPage - 1) ||\r\n                    (index > currentPage + 1 && index < pages.length - 1)\r\n                ) {\r\n                    return '';\r\n                }\r\n            }\r\n            if (currentPage >= pages.length - 3 && pages.length > 5) {\r\n                if (index === 1) {\r\n                    return getDots();\r\n                }\r\n                if (index > 0 && index < pages.length - 4) {\r\n                    return '';\r\n                }\r\n            }\r\n            return getPages(page);\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            {countOfPages ? (\r\n                <div className=\"pagination\" style={{ ...inlineStyle() }}>\r\n                    <ul className=\" pagination__list\">{renderPagination()}</ul>\r\n                    <button\r\n                        className=\"pagination__prev-btn\"\r\n                        type=\"button\"\r\n                        aria-label=\"попередня сторінка\"\r\n                        onClick={() => {\r\n                            setCurrentPage(currentPage - 1);\r\n                            setIsPaginationInit(false);\r\n                        }}\r\n                        disabled={currentPage <= 0}\r\n                    >\r\n                        <svg width={24} height={24} className=\"prev-btn__icon\">\r\n                            <use href={`${paginationSprite}#prev`} />\r\n                        </svg>\r\n                    </button>\r\n                    <button\r\n                        className=\"pagination__next-btn\"\r\n                        type=\"button\"\r\n                        aria-label=\"наступна сторінка\"\r\n                        onClick={() => {\r\n                            setCurrentPage(currentPage + 1);\r\n                            setIsPaginationInit(false);\r\n                        }}\r\n                        disabled={currentPage >= pages.length - 1}\r\n                    >\r\n                        <svg width={24} height={24} className=\"next-btn__icon\">\r\n                            <use href={`${paginationSprite}#next`} />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pagination2;\r\n","import './Skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <div className=\"card-skeleton\">\r\n            <div className=\"card-skeleton__image\" />\r\n            <div className=\"card-skeleton__content\">\r\n                <div className=\"card-skeleton__text-wrapper\">\r\n                    <div className=\"card-skeleton__text1\" />\r\n                    <div className=\"card-skeleton__text2\" />\r\n                </div>\r\n                <div className=\"card-skeleton__bottom\">\r\n                    <div className=\"card-skeleton__price\" />\r\n                    <div className=\"card-skeleton__cart\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skeleton;\r\n","const moveUserToPageUp = (selectorId = 'catalog-content', offset = -80) => {\r\n    const catalogProductsHtml = document.getElementById(selectorId);\r\n    if (!catalogProductsHtml) return;\r\n    let yOffset;\r\n    if (offset) {\r\n        yOffset = window.screen.width > 991 ? offset || -80 : -50;\r\n    } else {\r\n        yOffset = 0;\r\n    }\r\n    const y =\r\n        catalogProductsHtml.getBoundingClientRect().top +\r\n        window.pageYOffset +\r\n        yOffset;\r\n    window.scrollTo({ top: y, behavior: 'smooth' });\r\n};\r\n\r\nexport default moveUserToPageUp;\r\n"],"names":["apiQuery","data","setData","useState","loading","setLoading","error","setError","url","concat","API_BASE","useEffect","async","response","fetch","result","json","ok","Error","errors","fetchData","CategoryList","categoryName","subCategoryName","useParams","pathname","useLocation","dispatch","useAppDispatch","useFetch","categories","useAppSelector","state","length","loadedCategory","find","category","name","id","updateCurrentCategory","updateCurrentPage","loadedSubCategory","map","categoryDtos","subCategory","filter","subcategory","undefined","subId","updateGlobalFiltersQuery","subCategories","fetchCatalogProductsByCategories","fetchFiltersOptionsByCategory","categoryId","subcategoryId","updateFilterSortParam","_jsx","className","children","renderServerData","content","renderedItems","spriteIcon","_jsxs","NavLink","to","_ref","isActive","width","height","href","categoriesSprite","nextId","props","isOpen","setIsOpen","setIsActive","colorsId","setColorsId","filterTitle","colors","currentValueFromStore","catalogFilters","filtersBody","updateLocalFiltersState","handleInputChange","e","target","colorId","value","checked","prev","item","type","onClick","color","hex","colorName","includes","onChange","style","backgroundColor","minValue","maxValue","rangeMinName","rangeMaxName","firstInputValue","setFirstInputValue","secondInputValue","setSecondInputValue","values","setValues","handleMinInputCheck","Math","round","handleMaxInputCheck","onBlur","onKeyDown","code","Slider","range","step","min","max","Array","isArray","allowCross","firstOption","secondOption","valueName","currentValue","setCurrentValue","buleanValue","setBuleanValue","firstOptionTitle","optionTitle","secondOptionTitle","boolean","CheckboxesFilter","checkboxesIds","setCheckboxesIds","options","maxLoadOptions","currentOptionId","prevId","option","countOfProducts","defaultProps","filtersData","title","collections","materials","bedLengthMax","bedWidthMax","depthMax","maxLoad","priceMax","heightMax","widthMax","numberOfDoorsMax","numberOfDrawersMax","sale","option1","option2","transformation","heightAdjustment","Filters","navigate","useNavigate","isFiltersShowed","isFiltersCleared","filterOptions","filterOptionsDuplicate","parentCategoryId","filterLocalMap","useRef","header","document","querySelector","paddingRight","userScrollWidth","body","overflow","fetchCatalogProductsByFilters","page","isFiltersActive","fetchFiltersOptionsForFilteredProducts","duplicateFilterOptions","showHideFilters","renderedFilters","Object","keys","key","ColorFilter","replace","minValueName","maxValueName","RangeFilter","BooleanFilter","checkboxesFilters","sort","a","b","resetFilters","moveUserToPageUp","updateFiltersBodyWithLocalFiltersState","SortProducts","currentSortOption","setCurrentSortOption","filtersSortParam","filtersSort","closeSelect","closest","addEventListener","removeEventListener","sortFields","fieldName","direction","sortFiled","index","handleSortItems","htmlFor","SearchedQuantity","_state$catalogFilters","pluralizeUkrainian","Navigation","currentPage","setCurrentPage","isPaginationInit","setIsPaginationInit","subCategoryId","countOfPages","currentPageStore","Pagination2","ProductLoader","clearedFilters","setClearedFilters","catalogProducts","_Fragment","ErrorMessage","Loader","maxHeight","ProductsList","skeletonKeys","_","skeleton","Skeleton","catalogProduct","ProductCard","product","skuCode","OpenFiltersButton","preventDefault","CatalogPage","Breadcrumbs","ArrowUp","userScrollTop","setUserScrollTop","userScrollBottom","setUserScrollBottom","scrollPosition","scrollTop","window","scrollY","scrollHeight","clientHeight","documentElement","scrollBottom","handleScrollToTop","scrollTo","top","behavior","viewBox","xmlns","fillRule","clipRule","d","location","pathMapping","catalog","cart","checkout","success","cabinet","delivery","about","pathSegments","split","crumb","currentLink","crumbs","decodedCrumb","decodeURIComponent","unshift","setIsPageChosen","pages","setPages","temporaryPages","i","push","getDots","inlineStyle","styles","display","getPages","disabled","paginationSprite","selectorId","arguments","offset","catalogProductsHtml","getElementById","yOffset","screen","y","getBoundingClientRect","pageYOffset"],"sourceRoot":""}