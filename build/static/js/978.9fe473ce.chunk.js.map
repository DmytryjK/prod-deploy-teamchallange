{"version":3,"file":"static/js/978.9fe473ce.chunk.js","mappings":"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","sources":["utils/birthdateChanges/birthdateChanges.ts","pages/SignInPage/SignInForm/SignInForm.tsx","pages/SignInPage/SignInPage.tsx","assets/icons/userMessages/failed_icon.svg","shared-components/UserMessages/ErrorMessageSmall/ErrorMessageSmall.tsx","assets/icons/userMessages/success_icon.svg","shared-components/UserMessages/SuccessMessage/SuccessMessage.tsx"],"sourcesContent":["export const reverseBirthdayForServer = (birthdate: string) => {\r\n    return birthdate.split('.').reverse().toString().replaceAll(',', '-');\r\n};\r\n\r\nexport const reverseBirthdayFromServer = (birthdate: string) => {\r\n    return birthdate.split('-').reverse().toString().replaceAll(',', '.');\r\n};\r\n","import { memo } from 'react';\r\nimport { useFormik, FormikErrors } from 'formik';\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/hooks';\r\nimport formValidation from '../../../utils/formValidation';\r\nimport {\r\n    FirstNameInput,\r\n    LastNameInput,\r\n    EmailInput,\r\n    PasswordInput,\r\n    PhoneNumberInput,\r\n    BirthDateInput,\r\n} from '../../../shared-components/FormComponents/Inputs';\r\nimport { reverseBirthdayForServer } from '../../../utils/birthdateChanges/birthdateChanges';\r\nimport { userSignInByEmail } from '../../../store/reducers/authSlice';\r\nimport {\r\n    ErrorMessageSmall,\r\n    SuccessMessage,\r\n} from '../../../shared-components/UserMessages/UserMessages';\r\nimport './SignInForm.scss';\r\n\r\ninterface FormValues {\r\n    [key: string]: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    birthdate: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n    repeatedPassword: string;\r\n    email: string;\r\n}\r\n\r\nconst SignInForm = () => {\r\n    const emailLinksLoading = useAppSelector(\r\n        (state) => state.auth.emailLinksLoading\r\n    );\r\n    const emailLinksError = useAppSelector(\r\n        (state) => state.auth.emailLinksError\r\n    );\r\n    const dispatch = useAppDispatch();\r\n\r\n    const formik2 = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            birthdate: '',\r\n            phoneNumber: '',\r\n            password: '',\r\n            repeatedPassword: '',\r\n            email: '',\r\n        },\r\n        validate: (values: FormValues) => {\r\n            const errors: FormikErrors<FormValues> = {};\r\n\r\n            const validationFields = [\r\n                'firstName',\r\n                'lastName',\r\n                'phoneNumber',\r\n                'password',\r\n                'email',\r\n                'birthdate',\r\n            ];\r\n\r\n            validationFields.forEach((fieldName: string) => {\r\n                const error = formValidation(fieldName, values[fieldName]);\r\n                if (error) {\r\n                    errors[fieldName] = error;\r\n                }\r\n            });\r\n\r\n            if (values.password && formik2.touched.repeatedPassword) {\r\n                if (!values.repeatedPassword) {\r\n                    errors.repeatedPassword = 'Необхідно заповнити дане поле';\r\n                } else if (values.repeatedPassword !== values.password) {\r\n                    errors.repeatedPassword = 'Паролі мають співпадати';\r\n                }\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (values, { resetForm }) => {\r\n            const {\r\n                firstName,\r\n                lastName,\r\n                birthdate,\r\n                phoneNumber,\r\n                password,\r\n                email,\r\n            } = values;\r\n            dispatch(\r\n                userSignInByEmail({\r\n                    authData: {\r\n                        email,\r\n                        password,\r\n                        firstName,\r\n                        lastName,\r\n                        birthday: reverseBirthdayForServer(birthdate),\r\n                        phoneNumber,\r\n                        roles: ['admin'],\r\n                    },\r\n                    resetForm,\r\n                })\r\n            );\r\n        },\r\n    });\r\n    return (\r\n        <form\r\n            className={`signin-form ${\r\n                emailLinksLoading === 'pending' ? 'loading-data' : ''\r\n            }`}\r\n            onSubmit={formik2.handleSubmit}\r\n            noValidate\r\n        >\r\n            <FirstNameInput formik={formik2} />\r\n            <LastNameInput formik={formik2} />\r\n            <BirthDateInput formik={formik2} />\r\n            <PhoneNumberInput formik={formik2} />\r\n            <PasswordInput formik={formik2} />\r\n            <PasswordInput\r\n                formik={formik2}\r\n                label=\"Повтор пароля*\"\r\n                name=\"repeatedPassword\"\r\n            />\r\n            <EmailInput formik={formik2} />\r\n            <div className=\"signin-form__wrapper_checkbox\">\r\n                <label\r\n                    className=\"signin-form__email-label\"\r\n                    htmlFor=\"signin-form__checkbox\"\r\n                >\r\n                    <input\r\n                        className=\"signin-form__checkbox\"\r\n                        id=\"signin-form__checkbox\"\r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span className=\"signin-form__checkbox_custom\" />\r\n                    <span>Отримувати повідомлення про знижки та акції</span>\r\n                </label>\r\n            </div>\r\n            <button\r\n                className=\"signin-form__submit\"\r\n                type=\"submit\"\r\n                disabled={emailLinksLoading === 'pending'}\r\n            >\r\n                Зареєструватися\r\n                <span className=\"submit-button__loading-dots\">\r\n                    <span className=\"submit-button__loading-dot\" />\r\n                    <span className=\"submit-button__loading-dot\" />\r\n                    <span className=\"submit-button__loading-dot\" />\r\n                </span>\r\n            </button>\r\n            {emailLinksLoading === 'succeeded' ? (\r\n                <SuccessMessage text=\"Для активації акаунту перейдіть по посиланню на вашій електронній пошті.\" />\r\n            ) : (\r\n                ''\r\n            )}\r\n            {emailLinksError ? (\r\n                <ErrorMessageSmall text={emailLinksError as string} />\r\n            ) : (\r\n                ''\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default memo(SignInForm);\r\n","import SignInForm from './SignInForm/SignInForm';\r\nimport './SignInPage.scss';\r\n\r\nconst SignInPage = () => {\r\n    return (\r\n        <section className=\"signin\">\r\n            <div className=\"container\">\r\n                <h2 className=\"signin__title\">Реєстрація нового користувача</h2>\r\n                <SignInForm />\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFailedIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5 22C18.0228 22 22.5 17.5228 22.5 12C22.5 6.47715 18.0228 2 12.5 2C6.97715 2 2.5 6.47715 2.5 12C2.5 17.5228 6.97715 22 12.5 22Z\",\n    stroke: \"#EB3D3D\",\n    strokeWidth: 1.5\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 12.5L11 14.5L16 9.5\",\n    stroke: \"#EB3D3D\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFailedIcon);\nexport default __webpack_public_path__ + \"static/media/failed_icon.90b0262963badfaf68639a5de2c134fc.svg\";\nexport { ForwardRef as ReactComponent };","import failedIcon from '../../../assets/icons/userMessages/failed_icon.svg';\r\nimport './ErrorMessageSmall.scss';\r\n\r\nconst ErrorMessageSmall = ({\r\n    text,\r\n    additionalText,\r\n}: {\r\n    text: string;\r\n    additionalText?: string;\r\n}) => {\r\n    return (\r\n        <div className=\"error-message_small\">\r\n            <div className=\"error-message_small-inner\">\r\n                <img className=\"error-message__icon\" src={failedIcon} alt=\"\" />\r\n                <p className=\"error-message__text\">{text}</p>\r\n            </div>\r\n            {additionalText ? (\r\n                <p className=\"error-message__text_additional\">\r\n                    {additionalText}\r\n                </p>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessageSmall;\r\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSuccessIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z\",\n    stroke: \"#64CB13\",\n    strokeWidth: 1.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M7.5 11.5L9.5 13.5L14.5 8.5\",\n    stroke: \"#64CB13\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSuccessIcon);\nexport default __webpack_public_path__ + \"static/media/success_icon.df18252c1db27be830794938583fba2e.svg\";\nexport { ForwardRef as ReactComponent };","import successIcon from '../../../assets/icons/userMessages/success_icon.svg';\r\nimport './SuccessMessage.scss';\r\n\r\nconst SuccessMessage = ({\r\n    text,\r\n    additionalText,\r\n}: {\r\n    text: string;\r\n    additionalText?: string;\r\n}) => {\r\n    return (\r\n        <div className=\"success-message\">\r\n            <div className=\"success-message__inner\">\r\n                <img\r\n                    className=\"success-message__icon\"\r\n                    src={successIcon}\r\n                    alt=\"\"\r\n                />\r\n                <p className=\"success-message__text\">{text}</p>\r\n            </div>\r\n            {additionalText ? (\r\n                <p className=\"success-message__text_additional\">\r\n                    {additionalText}\r\n                </p>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessMessage;\r\n"],"names":["reverseBirthdayForServer","birthdate","split","reverse","toString","replaceAll","SignInForm","emailLinksLoading","useAppSelector","state","auth","emailLinksError","dispatch","useAppDispatch","formik2","useFormik","initialValues","firstName","lastName","phoneNumber","password","repeatedPassword","email","validate","values","errors","forEach","fieldName","error","formValidation","touched","onSubmit","_ref","resetForm","userSignInByEmail","authData","birthday","roles","_jsxs","className","concat","handleSubmit","noValidate","children","_jsx","FirstNameInput","formik","LastNameInput","BirthDateInput","PhoneNumberInput","PasswordInput","label","name","EmailInput","htmlFor","id","type","disabled","SuccessMessage","text","ErrorMessageSmall","memo","SignInPage","additionalText","src","failedIcon","alt","successIcon"],"sourceRoot":""}