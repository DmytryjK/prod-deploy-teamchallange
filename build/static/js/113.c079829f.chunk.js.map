{"version":3,"file":"static/js/113.c079829f.chunk.js","mappings":"kNAKA,MAkCA,EAlCyBA,KACrB,MAAM,mBAAEC,EAAkB,kBAAEC,EAAiB,gBAAEC,IAC3CC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMC,iBAC9BC,GAAUH,EAAAA,EAAAA,IACXC,GAAUA,EAAMG,mBAAmBC,YAAYF,UAE9CG,GAAaN,EAAAA,EAAAA,IACdC,GAAUA,EAAMG,mBAAmBC,YAAYC,aAE9CC,EAAoBC,aAAaC,QAAQ,kBACzCC,GAAWC,EAAAA,EAAAA,KAYjB,OAVAC,EAAAA,EAAAA,YAAU,KACDN,EAAWO,IAAMV,IAAYI,GAClCG,GACII,EAAAA,EAAAA,IAA6B,CACzBC,aAAcT,EAAWO,GACzBG,eAAgBb,IAEvB,GACF,CAACA,EAASG,KAGTW,EAAAA,EAAAA,KAAA,WAASC,UAAU,2BAA0BC,UACzCF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CACXC,MAAM,uHACNC,SAAUzB,EACV0B,QAASzB,EACT0B,MAAOzB,KAEL,E,mECflB,MA+GA,EA/GuB0B,IACnB,MAAM,oBACFC,EAAmB,iBACnBC,EAAgB,mBAChBC,EAAkB,YAClBC,EAAW,YACXC,EAAW,kBACXC,EAAiB,YACjBC,GACAP,GAEGQ,EAAaC,IAAkBC,EAAAA,EAAAA,UAAiBC,OAAOC,YACxDC,GAAOC,EAAAA,EAAAA,QAAuB,MAE9BC,EAAeA,KACjBN,EAAeE,OAAOC,WAAW,EAG/BI,EAAeC,IACjB,MAAMC,EAASD,EAAEC,OAEZA,EAAOC,QAAQ,kBACfD,EAAOC,QAAQ,kDACfD,EAAOC,QAAQ,wBACfD,EAAOC,QAAQ,wBAEhBlB,GAAoB,EACxB,GAGJd,EAAAA,EAAAA,YAAU,KAAO,IAADiC,EAIZ,OAHAT,OAAOU,iBAAiB,SAAUN,GACtB,QAAZK,EAAAP,EAAKS,eAAO,IAAAF,GAAZA,EAAcC,iBAAiB,QAASL,GAEjC,KAAO,IAADO,EACG,QAAZA,EAAAV,EAAKS,eAAO,IAAAC,GAAZA,EAAcC,oBAAoB,QAASR,GAC3CL,OAAOa,oBAAoB,SAAUT,EAAa,CACrD,GACF,KAEH5B,EAAAA,EAAAA,YAAU,KAEFsC,SAASC,KAAKC,MAAMC,SADpB1B,EAC+B,SAEA,UAG5B,KACHuB,SAASC,KAAKC,MAAMC,SAAW,SAAS,IAE7C,CAAC1B,IAEJuB,SAASJ,iBAAiB,WAAW,SAAUJ,GAC7B,WAAVA,EAAEY,KACF5B,GAAoB,EAE5B,IA8BA,OACI6B,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,iBAAiBsC,IAAKlB,EAAKnB,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACpCoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,iCAAgCC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,UACzDF,EAAAA,EAAAA,KAAA,KAAAE,SAAA,GAAAsC,OAAO3B,EAAc,EAAC,KAAA2B,OAAe,OAAXzB,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,aAG3CzC,EAAAA,EAAAA,KAAA,UACI0C,KAAK,SACLzC,UAAU,uCACV,aAAW,6CACX0C,QAASA,IAAMlC,GAAoB,GAAOP,UAE1CF,EAAAA,EAAAA,KAAA,OAAK4C,MAAM,KAAKC,OAAO,KAAI3C,UACvBF,EAAAA,EAAAA,KAAA,OAAK8C,KAAI,GAAAN,OAAKO,EAAAA,EAAiB,0BA1CvB,KAAb,OAAXhC,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,QAAqB,MAElCzC,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACHC,YAAU,EACVC,cAAe,EACfC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBC,SAAU3C,EACV4C,cAAezC,EACf0C,WAAY,CAAEC,QAAS7C,GACvBX,UAAU,kCAAiCC,SAE/B,OAAXa,QAAW,IAAXA,OAAW,EAAXA,EAAa2C,KAAKC,IACf3D,EAAAA,EAAAA,KAAC4D,EAAAA,GAAW,CAAA1D,UACRF,EAAAA,EAAAA,KAAA,OACI6D,IACI7C,EAAc,IACR2C,EAAWG,sBACXH,EAAWI,qBAErBC,IAAI,4BAPML,EAAW/D,UAoCnC,E,cC5Hd,MASA,EATyBqE,KAEjB3B,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,qBAAoBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aACfD,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,O,cCgBnB,MAAMC,EAAsBC,IAA6B,IAA5B,YAAEC,GAAoBD,EAC/C,MAAM,QAAElF,IAAYH,EAAAA,EAAAA,IACfC,GAAUA,EAAMG,mBAAmBC,cAGlCkF,GAAevF,EAAAA,EAAAA,IAChBC,GAAUA,EAAMG,mBAAmBmF,eAGlCC,GAAkBxF,EAAAA,EAAAA,IACnBC,GAAUA,EAAMG,mBAAmBC,YAAYoF,UAG7CzD,EAAa0D,IAAkBvD,EAAAA,EAAAA,UAAgC,KAC/DwD,EAAcC,IAAmBzD,EAAAA,EAAAA,UAAc,OAC/CR,EAAkBD,IAAuBS,EAAAA,EAAAA,WAAkB,IAC3DN,EAAagE,IAAkB1D,EAAAA,EAAAA,UAAS,OACxC2D,EAAcC,IAAmB5D,EAAAA,EAAAA,UAAS,OAC1CL,EAAakE,IAAkB7D,EAAAA,EAAAA,UAAiB,IAChD8D,EAAgBC,IAAqB/D,EAAAA,EAAAA,WAAS,GAE/CgE,GAAY5D,EAAAA,EAAAA,QAAkB,OAkCpC3B,EAAAA,EAAAA,YAAU,KACN,GAAIuF,EAAUpD,SAAWyC,GAAmBG,EAAc,CACtD,MAAM,OAAES,GAAWD,EAAUpD,QAC7BqD,EAAOC,QAAQ,EAAG,GAAG,GACrBL,EAAe,EACnB,IACD,CAACR,IAEJ,MAAMc,EAAqBF,IACvBP,EAAeO,EAAO,EAGpBxE,EAAsBwE,IACxBL,EAAgBK,EAAO,EAGrBrE,EAAqBqE,IACvBJ,EAAeI,EAAOtE,YAAY,EAqItC,OAAOb,EAAAA,EAAAA,KAAAsF,EAAAA,SAAA,CAAApF,UA9GCoC,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAApF,SAAA,CACK8E,IAAkBhF,EAAAA,EAAAA,KAACiE,EAAgB,KACpCjE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC3BoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,6BAA4BC,SAAA,CACtCmE,IACGrE,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACjE,UAAU,0BAEtBD,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACHT,IAAK2C,EACLK,aAAc,GACdC,aAAc,EACdvC,YAAU,EACVwC,OAAQ,CAAEN,OAAQT,GAClBvB,QAAS,CAACC,EAAAA,GAAYsC,EAAAA,GAAQrC,EAAAA,IAC9BC,SAAU+B,EACV7B,WAAY,CAAEC,QAASoB,GACvBtB,cAAeA,KACX,GAAI3C,EAAa,CAAC,IAAD+E,EACb,MAAMR,EAA0B,QAApBQ,EAAGT,EAAUpD,eAAO,IAAA6D,OAAA,EAAjBA,EAAmBR,OAC9BA,IACAJ,EAAeI,EAAOtE,aAvCtD+E,EAyCoCT,EAAOtE,YAxC3CgF,EAyCoCV,EAAOW,cACPX,EAAOY,OAAOtD,OAvC7B,IACbmD,GAAoB,GAChBA,EAAmBC,EACnBnB,EAAaU,QAAQQ,EAAmB,GAK5ClB,EAAaU,QAAQQ,EAAmB,IAkCxB,CA/CFI,IACtBJ,EACAC,CA6CwB,EAEJ5F,UAAU,yBAAwBC,SAEjCqE,GACGA,EAAgBb,KAAI,CAACuC,EAAOC,KACxBlG,EAAAA,EAAAA,KAAC4D,EAAAA,GAAW,CAERjB,QAASA,IA3GnBwD,WACtBlB,GAAkB,GAClB,IACI,MAAMmB,EAAc,CAChBrG,eAAgBb,EAChBmH,SAAsB,OAAZ/B,QAAY,IAAZA,OAAY,EAAZA,EAAc1E,IAGtB0G,QAAiBC,MAAM,GAAD/D,OAAIgE,EAAAA,EAAQ,qBAAqB,CACzDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBxE,KAAMyE,KAAKC,UAAUR,KAGzB,IAAKE,EAASO,GACV,MAAM,IAAIC,MAAM,kBAGpB,MAAMC,QAA6BT,EAASU,OAC5CvC,EAAesC,GAEfhC,EAAemB,GACfzF,GAAoB,EACxB,CAAE,MAAOF,GACL0G,QAAQ1G,MAAM,SAAUA,EAC5B,CAAC,QACG0E,GAAkB,EACtB,GA8E+CiC,CAAkBhB,GAAOhG,UAExCF,EAAAA,EAAAA,KAAA,OACI6D,IAAKoC,EAAMkB,iBACXnD,IAAI,mBALHiC,EAAMrG,SAU3BI,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACHM,SAAUqB,EACVY,aAAc,GACdrC,cAAe,EACfC,QAAS,CAACC,EAAAA,GAAYsC,EAAAA,IACtB0B,0BAAwB,EACxBC,qBAAmB,EACnBC,YAAa,CACT,IAAK,CACDpE,cAAe,EACfqC,aAAc,GAElB,IAAK,CACDrC,cAAe,EACfqC,aAAc,GAElB,IAAK,CACDrC,cAAe,EACfqC,aAAc,IAElB,KAAM,CACFrC,cAAe,EACfqC,aAAc,KAGtBtF,UAAU,gCAA+BC,SAExCqE,GACGA,EAAgBb,KAAI,CAACuC,EAAOC,KAEpBlG,EAAAA,EAAAA,KAAC4D,EAAAA,GAAW,CAER3D,UACIiG,IAAUrF,EACJ,yBACA,GACTX,UAEDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,UAClDF,EAAAA,EAAAA,KAAA,OACI6D,IAAKoC,EAAMsB,gBACXvD,IAAI,qBAVPiC,EAAMrG,aAoBtCc,IACGV,EAAAA,EAAAA,KAACwH,EAAa,CACV/G,oBAAqBA,EACrBC,iBAAkBA,EAClBC,mBAAoBA,EACpBC,YAAaA,EACbC,YAAaA,EACbC,kBAAmBA,EACnBC,YAAaA,QAOL,EAGhC,GAAe0G,EAAAA,EAAAA,MAAKtD,G,cCjLpB,MACA,EAAe,IAA0B,kECyCzC,EA3FsBuD,KAClB,MAAMC,GAAgB5I,EAAAA,EAAAA,IACjBC,GAAUA,EAAMG,mBAAmBC,YAAYwI,gBAG9CC,EAAqBF,EAAgBG,KAAKC,MAAMJ,GAyEtD,OACI3H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UACxCoC,EAAAA,EAAAA,MAAA,MACIrC,UAAU,gCACVG,MAAK,+CAAAoC,OAAcmF,GAAgBzH,SAAA,CA5EhC8H,MACX,MAAMC,EAAwB,GAC9B,GAAIN,EAAgB,EAAG,OAAOM,EAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAgBE,EAAoBK,GAAK,EAAG,CAC5D,GAAIA,GAAK,EAAG,OAAOD,EACnBA,EAAOE,MACHnI,EAAAA,EAAAA,KAAA,MACIC,UAAU,mBAAkBC,UAG5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAmB2C,MAAM,KAAKC,OAAO,KAAI3C,UACpDF,EAAAA,EAAAA,KAAA,OAAK8C,KAAI,GAAAN,OAAK4F,EAAY,iBAHzBC,EAAAA,EAAAA,IAAO,wBAOxB,CACA,GAAIV,GAAiB,EACjB,OAAOM,EAiBX,GAfKK,OAAOC,UAAUZ,IAClBM,EAAOE,MACH7F,EAAAA,EAAAA,MAAA,MACIrC,UAAU,mBAAkBC,SAAA,EAG5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAmB2C,MAAM,IAAIC,OAAO,KAAI3C,UACnDF,EAAAA,EAAAA,KAAA,OAAK8C,KAAI,GAAAN,OAAK4F,EAAY,qBAE9BpI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAmB2C,MAAM,IAAIC,OAAO,KAAI3C,UACnDF,EAAAA,EAAAA,KAAA,OAAK8C,KAAI,GAAAN,OAAK4F,EAAY,yBANzBC,EAAAA,EAAAA,IAAO,yBAWpBV,EAAgB,EAChB,IAAK,IAAIa,EAAI,EAAGA,EAAIV,KAAKC,MAAM,EAAIJ,GAAgBa,GAAK,EACpDP,EAAOE,MACHnI,EAAAA,EAAAA,KAAA,MACIC,UAAU,mBAAkBC,UAG5BF,EAAAA,EAAAA,KAAA,OACIC,UAAU,mBACV2C,MAAM,KACNC,OAAO,KAAI3C,UAEXF,EAAAA,EAAAA,KAAA,OAAK8C,KAAI,GAAAN,OAAK4F,EAAY,mBAPzBC,EAAAA,EAAAA,IAAO,8BAaxB,IAAK,IAAIG,EAAI,EAAGA,EAAIV,KAAKC,MAAM,EAAIJ,GAAgBa,GAAK,EACpDP,EAAOE,MACHnI,EAAAA,EAAAA,KAAA,MACIC,UAAU,mBAAkBC,UAG5BF,EAAAA,EAAAA,KAAA,OACIC,UAAU,mBACV2C,MAAM,KACNC,OAAO,KAAI3C,UAEXF,EAAAA,EAAAA,KAAA,OAAK8C,KAAI,GAAAN,OAAK4F,EAAY,mBAPzBC,EAAAA,EAAAA,IAAO,yBAc5B,OAAOJ,EAAOvE,KAAK+E,GAASA,GAAK,EAQxBT,IACDhI,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uBAEhB,E,sDC1Ed,MAAMyI,EAAiBtE,IAAgC,IAA/B,eAAEuE,GAAuBvE,EAC7C,MAAMlF,GAAUH,EAAAA,EAAAA,IACXC,GAAUA,EAAMG,mBAAmBC,YAAYF,UAE9C0J,GAAe7J,EAAAA,EAAAA,IAChBC,GAAUA,EAAMG,mBAAmBC,YAAYyJ,SAE9CvE,GAAevF,EAAAA,EAAAA,IAChBC,GAAUA,EAAMG,mBAAmBmF,eAKlCwE,IAHiB/J,EAAAA,EAAAA,IAClBC,GAAUA,EAAMG,mBAAmB4J,cAEnBC,EAAAA,EAAAA,GAAWJ,IAC1BK,EAAoBtC,KAAKuC,MAC3B3J,aAAaC,QAAQ,iBACjBmH,KAAKC,UAAU,CACXuC,IAAK,GACLC,UAAW,GACXC,eAAgB,OAGtB,IAAEF,EAAG,UAAEC,GAAcH,GAErB,SAAEK,EAAQ,KAAEC,IADMhK,aAAaC,QAAQ,mBAClBgK,EAAAA,EAAAA,OAErB/J,GAAWC,EAAAA,EAAAA,KACX+J,GAAcD,EAAAA,EAAAA,MAAcF,UAElC3J,EAAAA,EAAAA,YAAU,KACN,MACM+J,EAAcJ,EAASK,QADf,MAC8B,IACxCD,IAAgBxK,KACpB0K,EAAAA,EAAAA,GAAiB,eACjBnK,GACIoK,EAAAA,EAAAA,IAA+B,CAC3B9J,eAAgB2J,EAChBrD,SAAUkD,KAGlBhK,aAAauK,QAAQ,iBAAkBJ,GACvCnK,aAAauK,QACT,eACAnD,KAAKC,UAAU,CACXuC,IAAKI,KAEZ,GACF,CAACD,EAAUC,EAAMrK,KAEpBS,EAAAA,EAAAA,YAAU,KACN,IAAKwJ,GAA+B,IAAxBL,EAAarG,OAAc,OACvC,IAAKqG,EAAaiB,MAAMC,GAAUA,EAAMpK,KAAOuJ,IAAM,OACrD,MAAMC,EAAYN,EAAamB,QAAQD,GAAUA,EAAMpK,KAAOuJ,IAAK,GAC9De,KACCC,EAAcrB,EAAamB,QAAQD,GAAUA,EAAMpK,KAAOuJ,IAAK,GAChEE,eAEL9J,aAAauK,QACT,eACAnD,KAAKC,UAAU,CACXuC,MACAC,YACAe,iBAGR1K,GACI2K,EAAAA,EAAAA,IAAmB,CACfxK,GAAIuJ,EACJe,KAAMd,EACNC,eAAgBc,IAEvB,GACF,CAACvB,KAEJjJ,EAAAA,EAAAA,YAAU,KACN,IAAK2E,EAAc,OACnB,MAAM,GAAE1E,EAAE,KAAEsK,EAAI,eAAEb,GAAmB/E,EACrC/E,aAAauK,QACT,eACAnD,KAAKC,UAAU,CACXuC,IAAKvJ,EACLwJ,UAAWc,EACXC,YAAad,IAEpB,GACF,CAAC/E,IAmCJ,OACIhC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,kBAAiBC,SAAA,EAC5BoC,EAAAA,EAAAA,MAAA,QAAMrC,UAAU,+BAA8BC,SAAA,CAAC,oCACpCF,EAAAA,EAAAA,KAAA,QAAAE,SAAmB,OAAZoE,QAAY,IAAZA,OAAY,EAAZA,EAAc4F,WAEhClK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,SAChC4I,EAAapF,KAAKsG,IACf,MAAM,GAAEpK,EAAE,KAAEsK,EAAI,eAAEb,GAAmBW,EACrC,OACIhK,EAAAA,EAAAA,KAAA,MACIC,UAAS,yBAAAuC,OACc,qFAAnB6G,GACmB,iGAAnBA,EACM,eACA,IACPnJ,UAGHF,EAAAA,EAAAA,KAACqK,EAAAA,GAAO,CACJpK,UAAS,yBAAAuC,QACO,OAAZ8B,QAAY,IAAZA,OAAY,EAAZA,EAAc1E,MAAOA,EAAK,cAAgB,IAE9C0K,GAAE,GAAA9H,OAAKiH,GAAWjH,OAAG5C,GACrBuC,MAAO,CAAEoI,gBAAgB,GAAD/H,OAAK5C,IAC7B+C,QAASA,KAzDXwD,WACtBwC,GAAe,GACf,IACI,MAAMvC,EAAc,CAChBrG,eAAgBb,EAChBmH,SAAUzG,GAGR0G,QAAiBC,MACnB,iEACA,CACIE,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBxE,KAAMyE,KAAKC,UAAUR,KAI7B,IAAKE,EAASO,GACV,MAAM,IAAIC,MAAM,kBAGpB,MAAMC,QAA6BT,EAASU,OAE5CvH,GAAS+K,EAAAA,EAAAA,IAAoBzD,GACjC,CAAE,MAAOxG,GACL0G,QAAQ1G,MAAM,SAAUA,EAC5B,CAAC,QACGoI,GAAe,EACnB,GA4B4B8B,CAAkB7K,GAClBH,GACI2K,EAAAA,EAAAA,IAAmB,CACfF,OACAtK,KACAyJ,mBAEP,MAhBJhB,EAAAA,EAAAA,IAAO,iBAmBX,QAIf,EAId,GAAeZ,EAAAA,EAAAA,MAAKiB,GC7HpB,EArDqBgC,KACjB,MAAMC,EAAmBC,IACrB,IAAI3C,EAAS2C,EAAMC,WACnB,GAAID,GAAS,IAAM,CAEf3C,IADmB2C,GACAE,iBAAiBnB,QAAQ,IAAK,IACrD,CACA,OAAO1B,CAAM,EAEX7I,GAAcL,EAAAA,EAAAA,IACfC,GAAUA,EAAMG,mBAAmBC,cAElCkF,GAAevF,EAAAA,EAAAA,IAChBC,GAAUA,EAAMG,mBAAmBmF,gBAGlC,MAAEsG,EAAK,kBAAEG,GAAsB3L,EA8BrC,OACIY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UA3BtDoC,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAApF,SAAA,CACsC,sFAArB,OAAZoE,QAAY,IAAZA,OAAY,EAAZA,EAAc+E,iBACkB,kGAArB,OAAZ/E,QAAY,IAAZA,OAAY,EAAZA,EAAc+E,gBAAyC,MACnDrJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,SAClC6K,GACGzI,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAApF,SAAA,EACIoC,EAAAA,EAAAA,MAAA,QAAMrC,UAAU,kDAAiDC,SAAA,CAC5DyK,EAAgBI,GAAmB,WAExCzI,EAAAA,EAAAA,MAAA,QAAMrC,UAAU,0DAAyDC,SAAA,CACpEyK,EAAgBC,GAAO,cAIhCtI,EAAAA,EAAAA,MAAA,QAAMrC,UAAU,iDAAgDC,SAAA,CAC3DyK,EAAgBC,GAAO,aAKxC5K,EAAAA,EAAAA,KAAA,QAAMC,UAAU,8BAA6BC,SAC5B,OAAZoE,QAAY,IAAZA,OAAY,EAAZA,EAAc+E,qBAQrB,E,kCC3Cd,MAAM2B,EAAeA,KACjB,MAAM1G,GAAevF,EAAAA,EAAAA,IAChBC,GAAUA,EAAMG,mBAAmBmF,eAElCpF,GAAUH,EAAAA,EAAAA,IACXC,GAAUA,EAAMG,mBAAmBC,YAAYF,UAE9C+L,GAAWlM,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMkM,KAAKD,YAC/CE,EAAsBC,IACzBlK,EAAAA,EAAAA,WAAkB,GAEhBzB,GAAWC,EAAAA,EAAAA,MAEjBC,EAAAA,EAAAA,YAAU,KACD2E,GAAiB2G,GAAa/L,GACnCkM,EACIH,EAASlB,MACJtB,GACGA,EAAK1I,iBAAmBb,GACxBuJ,EAAKpC,WAAa/B,EAAa1E,KAE1C,GACF,CAACqL,EAAU3G,EAAcpF,IAoE5B,MAAwC,sFAArB,OAAZoF,QAAY,IAAZA,OAAY,EAAZA,EAAc+E,iBACgB,kGAArB,OAAZ/E,QAAY,IAAZA,OAAY,EAAZA,EAAc+E,iBACd/G,EAAAA,EAAAA,MAAA,UACIrC,UAAU,mBACVyC,KAAK,SACLC,QAASA,IAAMlD,GAAS4L,EAAAA,EAAAA,KAAsB,IAAOnL,SAAA,EAErDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAAwBC,SAAC,8IAGzCF,EAAAA,EAAAA,KAAA,OACIC,UAAU,yBACV2C,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRC,MAAM,6BAA4BrL,UAElCF,EAAAA,EAAAA,KAAA,QACIwL,EAAE,8bACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,eA5EvBT,GAEI7I,EAAAA,EAAAA,MAAA,UAAQrC,UAAU,+BAA+ByC,KAAK,SAAQxC,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qCAAoCC,SAAC,iDAGrDF,EAAAA,EAAAA,KAAA,OACIC,UAAU,iBACVsL,MAAM,6BACN3I,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRO,KAAK,OAAM3L,UAEXF,EAAAA,EAAAA,KAAA,QACIwL,EAAE,yFACFK,KAAK,kBAOrBvJ,EAAAA,EAAAA,MAAA,UACIrC,UAAU,WACVyC,KAAK,SACLoJ,SAAUX,EACVxI,QAASA,KACLlD,GACIsM,EAAAA,EAAAA,IAAqB,CACjBhM,eAAgBb,EAChBmH,SAAU/B,EAAeA,EAAa1E,GAAK,MAGnDH,GAASuM,EAAAA,EAAAA,KAAc,GAAM,EAC/B9L,SAAA,EAEFF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAC,uDACjCF,EAAAA,EAAAA,KAAA,OACIC,UAAU,iBACV2C,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRC,MAAM,6BAA4BrL,UAElCF,EAAAA,EAAAA,KAAA,QACIJ,GAAG,SACH4L,EAAE,qpCAmCrB,EAGL,GAAe/D,EAAAA,EAAAA,MAAKuD,GCjFpB,EA5CwBiB,KACpB,MAAOC,EAAaC,IAAkBjL,EAAAA,EAAAA,WAAS,GACzCkL,GAAWrN,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMqN,KAAKD,WAChD/C,GAAiBtK,EAAAA,EAAAA,IAClBC,IAAK,IAAAsN,EAAA,OAA0C,QAA1CA,EAAKtN,EAAMG,mBAAmBmF,oBAAY,IAAAgI,OAAA,EAArCA,EAAuCjD,cAAc,IAE9DkD,GAAaxN,EAAAA,EAAAA,IACdC,GAAUA,EAAMG,mBAAmBC,YAAYoN,WAE9CtN,GAAUH,EAAAA,EAAAA,IACXC,GAAUA,EAAMG,mBAAmBC,YAAYF,UAepD,OAZAS,EAAAA,EAAAA,YAAU,KACD0J,GAKD8C,EAHmB,qFAAnB9C,GACmB,iGAAnBA,EAKJ,GACD,CAACA,KAGA/G,EAAAA,EAAAA,MAAA,OACIrC,UAAS,6BAAAuC,OACJ0J,EAA8B,GAAhB,eAChBhM,SAAA,EAEHF,EAAAA,EAAAA,KAACgL,EAAY,IACG,OAAfuB,GAAuBH,GACpBpM,EAAAA,EAAAA,KAACyM,EAAAA,EAAgB,CACb1M,eAAgBb,EAChBqN,WAAYA,IAGhB,KAEF,E,uBC1Bd,MAwOA,EAxOkBG,KACd,MAAOC,EAAWC,IAAgB1L,EAAAA,EAAAA,UAAwB,MACpD2L,EAAqB5K,SAAS6K,iBAChC,yBAEEC,EAAiB9K,SAAS6K,iBAAiB,oBAC3C1N,GAAcL,EAAAA,EAAAA,IACfC,GAAUA,EAAMG,mBAAmBC,eAGlC,YACF4N,EAAW,aACXC,EAAY,UACZC,EAAS,WACT7N,EAAU,eACV8N,EAAc,iBACdC,EAAgB,OAChBC,EAAM,OACNxK,EAAM,MACND,EAAK,MACL0K,EAAK,cACLC,EAAa,gBACbC,EAAe,UACfC,EAAS,SACTC,EAAQ,QACRC,GACAvO,EAsEEwO,EApEuC,CACzC,CACIxN,MAAO,yDACPyN,MAAOZ,GAEX,CACI7M,MAAO,yDACPyN,MAAOX,GAEX,CACI9M,MAAO,mDACPyN,MAAOxO,EAAW6K,MAEtB,CACI9J,MAAO,kIACPyN,QAAOV,GAAiB,sBAE5B,CACI/M,MAAO,6HACPyN,QAAOT,GAAmB,sBAE9B,CACIhN,MAAO,2BACPyN,MAAOR,EACPS,KAAM,gBAEV,CACI1N,MAAO,uCACPyN,MAAOhL,EACPiL,KAAM,gBAEV,CACI1N,MAAO,uCACPyN,MAAOjL,EACPkL,KAAM,gBAEV,CACI1N,MAAO,6CACPyN,MAAOP,EACPQ,KAAM,gBAEV,CACI1N,MAAO,8FACPyN,MAAON,EACPO,KAAM,gBAEV,CACI1N,MAAO,8FACPyN,MAAOL,EACPM,KAAM,gBAEV,CACI1N,MAAO,mIACPyN,MAAOJ,EACPK,KAAM,gBAEV,CACI1N,MAAO,6HACPyN,MAAOH,EACPI,KAAM,gBAEV,CACI1N,MAAO,2EACPyN,MAAOF,EACPG,KAAM,iBAIgC7D,QAAQ8D,GAC9CA,EAAUF,OACF,EAEL,IAGX,SAASG,IACLjB,EAAekB,SAAQ,CAACxF,EAAMvC,KAC1B,MAAMgI,EAAa,GAAA1L,OAAMqK,EAAmB3G,GAAOiI,aAAY,MAC3C1F,EACRtG,MAAMiM,YAAY,mBAAoBF,EAAc,GAExE,CAUA,OARAvO,EAAAA,EAAAA,YAAU,KACNwB,OAAOU,iBAAiB,SAAUmM,EAA0B,GAI7D,IAEHA,KAEI1L,EAAAA,EAAAA,MAAA,MAAIrC,UAAU,YAAWC,SAAA,EACrBoC,EAAAA,EAAAA,MAAA,MACIrC,UAAS,8BAAAuC,OACS,UAAdmK,EAAwB,SAAW,IAEvC,YAAU,QAAOzM,SAAA,EAEjBF,EAAAA,EAAAA,KAAA,UACIC,UAAU,sBACVyC,KAAK,SACLC,QAASA,IACLiK,GAAcyB,GACD,UAATA,EAAmB,KAAO,UAEjCnO,UAEDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,gCAE5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,UAC/CgJ,EAAAA,EAAAA,IAAM8D,WAInB1K,EAAAA,EAAAA,MAAA,MACIrC,UAAS,mCAAAuC,OACS,eAAdmK,EAA6B,SAAW,IAE5C,YAAU,aAAYzM,SAAA,EAEtBF,EAAAA,EAAAA,KAAA,UACIC,UAAU,sBACVyC,KAAK,SACLC,QAASA,IACLiK,GAAcyB,GACD,eAATA,EAAwB,KAAO,eAEtCnO,UAEDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,4FAI5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAA,SAAAE,SACK0N,EAAuBlK,KAAKqK,IACzB,MAAM,MAAE3N,EAAK,MAAEyN,EAAK,KAAEC,GAASC,EAC/B,MACqB,kBAAVF,GACU,kBAAVA,GAGHvL,EAAAA,EAAAA,MAAA,MAAApC,SAAA,EACIoC,EAAAA,EAAAA,MAAA,MAAIrC,UAAU,cAAaC,SAAA,CACtBE,EAAM,QAEXkC,EAAAA,EAAAA,MAAA,MAAIrC,UAAU,aAAYC,SAAA,CACrB2N,EAAM,IAAEC,GAAQ,SALhBzF,EAAAA,EAAAA,IAAO,mBASpBiG,MAAMC,QAAQV,IAEVvL,EAAAA,EAAAA,MAAA,MAAApC,SAAA,EACIoC,EAAAA,EAAAA,MAAA,MAAIrC,UAAU,cAAaC,SAAA,CACtBE,EAAM,QAEXJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SACrB2N,EAAMnK,KAAI,CAAC+E,EAAMvC,IACPA,EACH2H,EAAMpL,OAAS,EAAC,GAAAD,OACXiG,EAAI,MACPA,SATTJ,EAAAA,EAAAA,IAAO,mBAejB,IAAI,cAM/B/F,EAAAA,EAAAA,MAAA,MACIrC,UAAS,iCAAAuC,OACS,aAAdmK,EAA2B,SAAW,IAE1C,YAAU,WAAUzM,SAAA,EAEpBF,EAAAA,EAAAA,KAAA,UACIC,UAAU,sBACVyC,KAAK,SACLC,QAASA,IACLiK,GAAcyB,GACD,aAATA,EAAsB,KAAO,aAEpCnO,UAEDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBC,SAAC,0GAI5CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAACwO,EAAAA,EAAa,CAACC,WAAW,gCAGjC,E,cC3Ob,MAyEA,EAzE6BC,KACzB,MAAOrK,EAAasE,IAAkBzH,EAAAA,EAAAA,WAAS,GACzChC,GAAUH,EAAAA,EAAAA,IACXC,GAAUA,EAAMG,mBAAmBC,YAAYF,UAE9CgL,GAAOnL,EAAAA,EAAAA,IACRC,GAAUA,EAAMG,mBAAmBC,YAAY8K,OAE9CyE,GAAiB5P,EAAAA,EAAAA,IAClBC,GAAUA,EAAMG,mBAAmBC,YAAYuP,kBAE9C,QAAErO,IAAYvB,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMG,qBAE9CyP,GAAQC,EAAAA,EAAAA,KAASzK,IAAiB,IAAhB,OAAE0K,GAAQ1K,CAAA,IAwBlC,OACI9B,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,kCAAiCC,SAAA,CAC/B,YAAZI,GACGN,EAAAA,EAAAA,KAACkE,EAAAA,EAAM,CAACjE,UAAU,yBAElB,IAEJD,EAAAA,EAAAA,KAACmE,EAAmB,CAACE,YAAaA,KAClC/B,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,qCAAoCC,SAAA,EAC/CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAAEgK,KACrC5H,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,2BAA0BC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAmBC,SAAEhB,KAClCc,EAAAA,EAAAA,KAAC0H,EAAa,KACd1H,EAAAA,EAAAA,KAAA,KACIC,UAAU,+BACV6C,KAAK,mBACLH,QAAUoM,GApCVC,EAChBD,EACAE,KAGA,GADAF,EAAMG,iBACFD,EAAQ,CACR,MAAME,EAAuB,CACzBC,QAAS,IACTC,KAAM,GACNC,SAAU,IACVC,OAASC,GAAqBA,EAC9BC,WAAW,EACXC,MAAM,EACNC,OAAO,GAGN,OAALf,QAAK,IAALA,GAAAA,EAAOgB,SAASX,EAAQE,EAC5B,GAoBoBH,CAAYD,EAAO,oBACtB7O,UAEA2P,EAAAA,EAAAA,GAAmBlB,EAAgB,CAChC,uCACA,6CACA,2DAIZ3O,EAAAA,EAAAA,KAAC0I,EAAc,CAACC,eAAgBA,KAChC3I,EAAAA,EAAAA,KAAC0K,EAAY,KACb1K,EAAAA,EAAAA,KAACiM,EAAe,KAChBjM,EAAAA,EAAAA,KAAC0M,EAAS,SAEZ,E,wBCtEd,MAAMoD,EAA2C,CAC7C,KAAM,uCACN,KAAM,iCACN,KAAM,mDACN,KAAM,6CACN,KAAM,6CACN,KAAM,6CACN,KAAM,uCACN,KAAM,6CACN,KAAM,mDACN,GAAM,6CACN,GAAM,mDACN,GAAM,8CAiEV,EAxDwBtP,IACpB,MAAM,QAAEuP,EAAO,UAAEC,EAAS,KAAE9F,EAAI,OAAElC,GAAWxH,EACvCyP,EARgBC,KACtB,MAAOC,EAAMC,EAAOC,GAAOH,EAAWI,MAAM,KACtCC,EAAYT,EAAcM,GAChC,MAAM,GAAN5N,OAAU6N,EAAG,KAAA7N,OAAI+N,EAAS,KAAA/N,OAAI2N,EAAI,EAKZK,CAAiBR,GAgCvC,OACIhQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC3CoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,sCAAqCC,SAAA,EAChDoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,6CAA4CC,SAAA,EACvDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAC3DgK,KAELlK,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kDAAiDC,SACzD+P,KAELjQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAxCvD8H,KACvB,MACMyI,EAAQ,GAEd,IAAK,IAAIvI,EAAI,EAAGA,GAHE,EAGcA,IAAK,CACjC,MAAMwI,EAAWxI,GAAKF,EAEhB2I,GACF3Q,EAAAA,EAAAA,KAAA,OAEIC,UAAS,2BAAAuC,OACLkO,EAAW,SAAW,IAE1B9N,MAAM,KACNC,OAAO,KAAI3C,UAEXF,EAAAA,EAAAA,KAAA,OACI8C,KAAI,GAAAN,OAAK4F,EAAY,KAAA5F,OACjBkO,EAAW,SAAW,eATzBxI,GAebuI,EAAMtI,KAAKwI,EACf,CAEA,OAAO3Q,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAEuQ,GAAY,EActCG,CAAkB5I,SAG3BhI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,SACtD6P,QAGP,EC7ERc,EAAkDzM,IAIjD,IAJkD,OACrD0M,GAGH1M,EACG,MAAO2M,EAASC,IAAc9P,EAAAA,EAAAA,UAAiB,KACxC+P,EAAyBC,IAC5BhQ,EAAAA,EAAAA,WAAS,GAeb,OAJAvB,EAAAA,EAAAA,YAAU,KACNuR,EAA2BH,EAAQtO,QAXrB,IAWyC,GACxD,CAACsO,KAGAzO,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,mBAAkBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,YACIkK,KAAK,UACLiH,KAAM,GACNC,KAAM,GACNC,UAAW,IACXpR,UAAU,+CACVqR,YAAY,sEACZzD,MAAOiD,EAASA,EAAOS,OAAOR,QAAUA,EACxCS,SAAUV,EAASA,EAAOW,aAtBRhQ,IAC1B,MAAMiQ,EAAYjQ,EAAEC,OAAOmM,MAEvB6D,EAAUjP,QALA,KAMVuO,EAAWU,EACf,KAmBIpP,EAAAA,EAAAA,MAAA,OACIrC,UAAS,mBAAAuC,OACLyO,EAA0B,WAAa,IACxC/Q,SAAA,CAEF6Q,EAAQtO,OAAO,IA/BV,SAiCR,EAIdoO,EAAgBc,aAAe,CAC3Bb,YAAQc,GAGZ,U,kCCzBA,MA0UA,EA1U8BC,KAC1B,MAAOC,EAAaC,IAAkB7Q,EAAAA,EAAAA,WAAkB,IACjD8Q,EAAaC,IAAkB/Q,EAAAA,EAAAA,WAAS,IACxC8G,EAAQkK,IAAahR,EAAAA,EAAAA,UAAS,IAC9BiR,EAAYC,IAAiBlR,EAAAA,EAAAA,UAAwB,OACrDmR,EAAcC,IAAmBpR,EAAAA,EAAAA,WAAkB,IACnDqR,EAAcC,IAAmBtR,EAAAA,EAAAA,UAAc,MAChDuR,GAAUnR,EAAAA,EAAAA,QAAO,MACjBoR,GAAUpR,EAAAA,EAAAA,QAAO,OAEjB,QAAEqR,EAAO,QAAEzT,IAAYH,EAAAA,EAAAA,IACxBC,GAAUA,EAAMG,mBAAmBC,eAGlC,cAAEwT,EAAa,YAAEC,EAAW,aAAEvO,IAAiBvF,EAAAA,EAAAA,IAChDC,GAAUA,EAAMG,qBASfM,GAAWC,EAAAA,EAAAA,MAEjBC,EAAAA,EAAAA,YAAU,KACgB,cAAlBiT,IACAV,EAAU,GACVI,GAAgB,GACpB,GACD,CAACM,EAAeC,KAEnBlT,EAAAA,EAAAA,YAAU,KACS,IAAXqI,GACAiK,GAAe,EACnB,GACD,CAACjK,KAEJrI,EAAAA,EAAAA,YAAU,KACgB,cAAlBiT,IACAnT,GACIoK,EAAAA,EAAAA,IAA+B,CAC3B9J,eAAgBb,EAChBmH,UAAsB,OAAZ/B,QAAY,IAAZA,OAAY,EAAZA,EAAc1E,KAAM,UAGtCH,GAASqT,EAAAA,EAAAA,OACb,GACD,CAACF,IAEJ,MAgBMG,GAAUC,EAAAA,EAAAA,IAAU,CACtBC,cAAe,CACXC,UAAW,GACXC,MAAO,GACPpC,QAAS,IAEbqC,SAAW7B,IACP,MAAM8B,EAAmC,CAAC,EAU1C,MATyB,CAAC,YAAa,SAEtBpF,SAASqF,IACtB,MAAM/S,GAAQgT,EAAAA,EAAAA,GAAeD,EAAW/B,EAAO+B,IAC3C/S,IACA8S,EAAOC,GAAa/S,EACxB,IAGG8S,CAAM,EAEjBG,SAAUA,CAACjC,EAAMnN,KAAqB,IAAnB,UAAEqP,GAAWrP,EACxB4N,GACJvS,GACIiU,EAAAA,EAAAA,IAAoB,CAChBC,kBAAmB,CACf5T,eAAgBb,EAChB0U,SAAUrC,EAAO2B,UACjBlL,YACGuJ,GAEPkC,cAEP,IA0CT,OACInR,EAAAA,EAAAA,MAAAgD,EAAAA,SAAA,CAAApF,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,mBAAmBL,GAAG,kBAAiBM,SAAA,EAClDoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,+BAA8BC,SAAA,EACzCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,iGAGnDoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,+BAA8BC,SAAA,EACzCF,EAAAA,EAAAA,KAAA,UACIC,UAAU,6BACVyC,KAAK,SACL,aAAW,8FACXH,IAAKkQ,EAAQvS,UAEbF,EAAAA,EAAAA,KAAA,OACIC,UAAU,8BACV2C,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRC,MAAM,6BAA4BrL,UAElCF,EAAAA,EAAAA,KAAA,KAAGJ,GAAG,iBAAgBM,UAClBF,EAAAA,EAAAA,KAAA,QACIJ,GAAG,kBACHiU,SAAS,UACTC,SAAS,UACTtI,EAAE,4WAKlBxL,EAAAA,EAAAA,KAAA,UACIC,UAAU,6BACVyC,KAAK,SACL,aAAW,wFACXH,IAAKmQ,EAAQxS,UAEbF,EAAAA,EAAAA,KAAA,OACIC,UAAU,8BACV2C,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRC,MAAM,6BAA4BrL,UAElCF,EAAAA,EAAAA,KAAA,KAAGJ,GAAG,iBAAgBM,UAClBF,EAAAA,EAAAA,KAAA,QACIJ,GAAG,kBACHiU,SAAS,UACTC,SAAS,UACTtI,EAAE,gXAO1BxL,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACHuC,aAAc,GACdrC,cAAe,EACfC,QAAS,CAACC,EAAAA,IACVH,WAAY,CACR8Q,OAAQtB,EAAQ3Q,QAChBkS,OAAQtB,EAAQ5Q,SAEpBwF,YAAa,CACT,EAAG,CACCpE,cAAe,GAEnB,IAAK,CACDA,cAAe,GAEnB,IAAK,CACDA,cAAe,GAEnB,IAAK,CACDA,cAAe,GAEnB,IAAK,CACDA,cAAe,GAEnB,IAAK,CACDA,cAAe,GAEnB,IAAK,CACDA,cAAe,GAEnB,KAAM,CACFA,cAAe,IAGvBjD,UAAU,WAAUC,SAEZ,OAAPyS,QAAO,IAAPA,OAAO,EAAPA,EAASjP,KAAKuQ,IACXjU,EAAAA,EAAAA,KAAC4D,EAAAA,GAAW,CAAA1D,UACRF,EAAAA,EAAAA,KAACkU,EAAc,CACXhK,KAAM+J,EAAOL,SACb5D,UAAWiE,EAAOlN,KAClBgJ,QAASkE,EAAOA,OAChBjM,OAAQiM,EAAOjM,WALLK,EAAAA,EAAAA,IAAO,yBAUjCrI,EAAAA,EAAAA,KAAA,UACI2C,QAASA,IAAMoP,GAAe,GAC9BrP,KAAK,SACLzC,UAAU,2BAA0BC,SACvC,gGAKTF,EAAAA,EAAAA,KAACmU,EAAAA,EAAK,CACFC,OAAQtC,EACRuC,UAAWtC,EACXuC,qBAAsBjC,EACtBkC,wBAAyBjC,EACzBkC,eAAe,2IACfC,SAAS,QAAOvU,UAEhBoC,EAAAA,EAAAA,MAAA,OAAApC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gCAA+BC,SAAC,2FAG9CoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,iCAAgCC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uCAAsCC,SAAC,mEAlKjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SACxB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGwD,KAAKgR,IAClB1U,EAAAA,EAAAA,KAAA,UACIC,UAAU,uBAEVyC,KAAK,SACL,aAAW,OACXC,QAASA,KAnDzBuP,EAmD+CwC,EAAW,EAC1CC,aAAcA,KACNpC,GACAqC,aAAarC,GAlDrCH,EAoDoCsC,EAAU,EAE9BG,aAAcA,IACVrC,EACIsC,YAAW,IAAM1C,EAAc,OAAO,MAE7ClS,UAEDF,EAAAA,EAAAA,KAAA,OAAK4C,MAAM,KAAKC,OAAO,KAAI3C,UACvBF,EAAAA,EAAAA,KAAA,OACI8C,KAAI,GAAAN,OAAK4F,EAAY,KAAA5F,OACjBkS,GAAa1M,GACZmK,GAAcA,GAAcuC,EACvB,SACA,iBAtBbA,OAkKJ1C,IACGhS,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcC,SAAC,+IAKpCoC,EAAAA,EAAAA,MAAA,QACIrC,UAAU,0CACVuT,SAAUT,EAAQgC,aAClBC,YAAU,EAAA9U,SAAA,EAEVoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,iCAAgCC,SAAA,EAC3CF,EAAAA,EAAAA,KAACiV,EAAAA,GAAc,CACXnE,OAAQiC,EACRmC,oBAAmB,GAAA1S,OACfuQ,EAAQM,OAAOH,WACfH,EAAQoC,QAAQjC,UACV,uBACA,OAGdlT,EAAAA,EAAAA,KAACoV,EAAAA,GAAU,CACPtE,OAAQiC,EACRmC,oBAAmB,GAAA1S,OACfuQ,EAAQM,OAAOF,OACfJ,EAAQoC,QAAQhC,MACV,uBACA,UAIlBnT,EAAAA,EAAAA,KAAC6Q,EAAe,CAACC,OAAQiC,KACzBzQ,EAAAA,EAAAA,MAAA,UACIrC,UAAS,kCAAAuC,OACa,YAAlBoQ,EAA8B,UAAY,IAE9ClQ,KAAK,SACLC,QAhQK0S,KAErBpD,EADW,IAAXjK,EAIJ,EA2PkD9H,SAAA,CACjC,6EAEGoC,EAAAA,EAAAA,MAAA,QAAMrC,UAAU,iCAAgCC,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wCAGvB4S,GACG7S,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACpCF,EAAAA,EAAAA,KAACsV,EAAAA,EAAiB,CAACC,KAAK,qLAG5B,aAKjB,ECpVX,EAXoBC,KAEZlT,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,eAAeL,GAAG,cAAaM,SAAA,EAC1CF,EAAAA,EAAAA,KAACyV,EAAAA,EAAW,KACZzV,EAAAA,EAAAA,KAAC0O,EAAoB,KACrB1O,EAAAA,EAAAA,KAAC6R,EAAqB,KACtB7R,EAAAA,EAAAA,KAACrB,EAAgB,M,6ECP7B,MAuDA,EAvDoB8W,KAChB,MAAMC,GAAWlM,EAAAA,EAAAA,MAEXmM,EAAyC,CAC3CC,QAAS,6CACTC,QAAS,iCACT3K,KAAM,iCACN4K,SAAU,4HACVC,QAAS,6CACTC,QAAS,oGACTC,SAAU,+FACVC,MAAO,yCAGLC,EAAeT,EAASpM,SACzBgH,MAAM,KACNrG,QAAQmM,GAAoB,KAAVA,IAEvB,IAAIC,EAAc,GAElB,MAAMC,EAASH,EAAazS,KAAK0S,IAC7B,MAAMG,EAAeC,mBAAmBJ,GAGxC,OAFAC,GAAW,IAAA7T,OAAQ+T,IAGfvW,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UAClCF,EAAAA,EAAAA,KAACqK,EAAAA,GAAO,CACJC,GAAI+L,EACJpW,UAAU,8BAA6BC,SAEtCyV,EAAYS,IAAUG,KALaH,EAOvC,IAcb,OAVIE,EAAO7T,OAAS,GAChB6T,EAAOG,SACHzW,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UAClCF,EAAAA,EAAAA,KAACqK,EAAAA,GAAO,CAACC,GAAG,IAAIrK,UAAU,8BAA6BC,SAAC,iDADhBmI,EAAAA,EAAAA,IAAO,iBASvDrI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAmBC,SAAEoW,OAErC,C,8CCtDd,MAAM9H,EAAgBpK,IAA8C,IAA7C,WAAEqK,GAAqCrK,EAC1D,OACI9B,EAAAA,EAAAA,MAAA,OAAKrC,UAAS,kBAAAuC,OAAoBiM,GAAavO,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAAC,0CAAW,KAACF,EAAAA,EAAAA,KAAA,SAAM,4LACpBA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oEAAiB,+GAC9CF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gCACXF,EAAAA,EAAAA,KAAA,SAAM,kLACNA,EAAAA,EAAAA,KAAA,SAAM,gNACNA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAAC,uDACpCF,EAAAA,EAAAA,KAAA,SAAM,gQACyCA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4DAE7C,MAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qDAAa,MAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uDACxB,EAIdsO,EAAcmD,aAAe,CACzBlD,WAAY,IAGhB,S,+CCvBA,MAkBA,EAlBiBiI,KAETpU,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BACfqC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,yBAAwBC,SAAA,EACnCoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,8BAA6BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAEnBqC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,wBAAuBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gC,4HCKnC,MAAME,EAAkBK,IACpB,MAAM,SAAEH,EAAQ,QAAEC,EAAO,MAAEC,EAAK,MAAEH,GAAUI,EACtCmW,EAAe,IAAIrI,MAAM,IAAI5K,KAAI,CAACkT,EAAG1Q,KACvCmC,EAAAA,EAAAA,IAAO,oBAEJwO,EAAkBC,IAAuB5V,EAAAA,EAAAA,WAAkB,GAE5DuR,IADSsE,EAAAA,EAAAA,OACCzV,EAAAA,EAAAA,QAAO,OACjBoR,GAAUpR,EAAAA,EAAAA,QAAO,MAcvB,OACIgB,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,uBAAsBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,SAAEE,KACxCkC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,8BAA6BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,UACIC,UAAU,4BACVyC,KAAK,SACL,aAAW,8FACXH,IAAKkQ,EAAQvS,UAEbF,EAAAA,EAAAA,KAAA,OACIC,UAAU,6BACV2C,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRC,MAAM,6BAA4BrL,UAElCF,EAAAA,EAAAA,KAAA,KAAGJ,GAAG,iBAAgBM,UAClBF,EAAAA,EAAAA,KAAA,QACIJ,GAAG,kBACHiU,SAAS,UACTC,SAAS,UACTtI,EAAE,4WAKlBxL,EAAAA,EAAAA,KAAA,UACIC,UAAU,4BACVyC,KAAK,SACL,aAAW,wFACXH,IAAKmQ,EAAQxS,UAEbF,EAAAA,EAAAA,KAAA,OACIC,UAAU,6BACV2C,MAAM,KACNC,OAAO,KACPyI,QAAQ,YACRC,MAAM,6BAA4BrL,UAElCF,EAAAA,EAAAA,KAAA,KAAGJ,GAAG,iBAAgBM,UAClBF,EAAAA,EAAAA,KAAA,QACIJ,GAAG,kBACHiU,SAAS,UACTC,SAAS,UACTtI,EAAE,kXAQ9BxL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACnCF,EAAAA,EAAAA,KAACgD,EAAAA,GAAM,CACH/C,UAAU,0BACVkD,QAAS,CAACC,EAAAA,IACVmC,aAAc,GACdrC,cAAe,EACfD,WAAY,CACR8Q,OAAQtB,EAAQ3Q,QAChBkS,OAAQtB,EAAQ5Q,SAEpBkV,OAAQA,IAAMF,GAAoB,GAClCxP,YAAa,CACT,EAAG,CACCpE,cAAe,QAEnB,IAAK,CACDA,cAAe,KACfqC,aAAc,IAElB,IAAK,CACDrC,cAAe,IACfqC,aAAc,IAElB,IAAK,CACDrC,cAAe,IACfqC,aAAc,IAElB,IAAK,CACDrC,cAAe,IACfqC,aAAc,IAElB,IAAK,CACDrC,cAAe,IACfqC,aAAc,IAElB,IAAK,CACDrC,cAAe,IACfqC,aAAc,IAElB,KAAM,CACFrC,cAAe,IACfqC,aAAc,IAElB,KAAM,CACFrC,cAAe,EACfqC,aAAc,KAEpBrF,UAED+W,EAAAA,EAAAA,GAAiB,CACd1W,QACAD,UACAyP,QAxHVmH,IACH7W,EAASqD,KAAKmS,IAEb7V,EAAAA,EAAAA,KAAC4D,EAAAA,GAAW,CAAA1D,UACRF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAACmX,EAAAA,EAAW,CAACtB,QAASA,OACpB,mBAAArT,OAH2BqT,EAAQ3W,YAsHjCkY,aAAcT,EAAajT,KAAKrB,IAExBrC,EAAAA,EAAAA,KAAC4D,EAAAA,GAAW,CAAA1D,UACRF,EAAAA,EAAAA,KAAC0W,EAAAA,EAAQ,KADKrU,eASxC,EAId,GAAeoF,EAAAA,EAAAA,MAAKtH,E,kDCrIpB,MACA,EAAe,IAA0B,gE,aC7BzC,MAwBA,EAxB0BiE,IAMnB,IANoB,KACvBmR,EAAI,eACJ8B,GAIHjT,EACG,OACI9B,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,sBAAqBC,SAAA,EAChCoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,4BAA2BC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAsB4D,IAAKyT,EAAYtT,IAAI,MAC1DhE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAqBC,SAAEqV,OAEvC8B,GACGrX,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SACxCmX,IAGL,KAEF,ECYd,MACA,EAAe,IAA0B,iECLzC,EA5BuBjT,IAMhB,IANiB,KACpBmR,EAAI,eACJ8B,GAIHjT,EACG,OACI9B,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,kBAAiBC,SAAA,EAC5BoC,EAAAA,EAAAA,MAAA,OAAKrC,UAAU,yBAAwBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OACIC,UAAU,wBACV4D,IAAK0T,EACLvT,IAAI,MAERhE,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBC,SAAEqV,OAEzC8B,GACGrX,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAC1CmX,IAGL,KAEF,C,kCC3Bd,MAgBA,EAhByB,WAAmD,IAAlDG,EAAUC,UAAAhV,OAAA,QAAAmP,IAAA6F,UAAA,GAAAA,UAAA,GAAG,kBAAmBrI,EAAMqI,UAAAhV,OAAA,QAAAmP,IAAA6F,UAAA,GAAAA,UAAA,IAAI,GAChE,MAAMC,EAAsBzV,SAAS0V,eAAeH,GACpD,IAAKE,EAAqB,OAC1B,IAAIE,EAEAA,EADAxI,EACUjO,OAAO0W,OAAOjV,MAAQ,IAAMwM,IAAW,IAAM,GAE7C,EAEd,MAAM0I,EACFJ,EAAoBK,wBAAwBC,IAC5C7W,OAAO8W,YACPL,EACJzW,OAAOyO,SAAS,CAAEoI,IAAKF,EAAGI,SAAU,UACxC,C","sources":["pages/ProductPage/components/InterestedSlider/InterestedSlider.tsx","pages/ProductPage/components/ProductImagesSlider/EnlargedPhoto/EnlargedPhoto.tsx","shared-components/FullScreenLoader/FullScreenLoader.tsx","pages/ProductPage/components/ProductImagesSlider/ProductImagesSlider.tsx","assets/icons/rating/sprite-rating.svg","pages/ProductPage/components/ProductRating/ProductRating.tsx","pages/ProductPage/components/ColorSelection/ColorSelection.tsx","pages/ProductPage/components/ProductPrice/ProductPrice.tsx","pages/ProductPage/components/AddProductBlock/AddToCartBtn/AddToCartBtn.tsx","pages/ProductPage/components/AddProductBlock/AddProductBlock.tsx","pages/ProductPage/components/Accordeon/Accordeon.tsx","pages/ProductPage/components/ProductInfoContainer/ProductInfoContainer.tsx","pages/ProductPage/components/CustomersReviewSlider/components/CustomerReview/CustomerReview.tsx","pages/ProductPage/components/CustomersReviewSlider/components/CommentTextArea/CommentTextarea.tsx","pages/ProductPage/components/CustomersReviewSlider/CustomersReviewSlider.tsx","pages/ProductPage/ProductPage.tsx","shared-components/Breadcrumbs/Breadcrumbs.tsx","shared-components/DeliveryTerms/DeliveryTerms.tsx","shared-components/ProductCard/Skeleton/Skeleton.tsx","shared-components/ProductsSlider/ProductsSlider.tsx","assets/icons/userMessages/failed_icon.svg","shared-components/UserMessages/ErrorMessageSmall/ErrorMessageSmall.tsx","assets/icons/userMessages/success_icon.svg","shared-components/UserMessages/SuccessMessage/SuccessMessage.tsx","utils/moveUserToPageUp.ts"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../../../hooks/hooks';\r\nimport { fetchMightBeInterestProducts } from '../../../../store/reducers/productsSliderSlice';\r\nimport ProductsSlider from '../../../../shared-components/ProductsSlider/ProductsSlider';\r\n\r\nconst InterestedSlider = () => {\r\n    const { interestedProducts, loadingInterested, errorInterested } =\r\n        useAppSelector((state) => state.productsSlider);\r\n    const skuCode = useAppSelector(\r\n        (state) => state.productInformation.productInfo.skuCode\r\n    );\r\n    const collection = useAppSelector(\r\n        (state) => state.productInformation.productInfo.collection\r\n    );\r\n    const storageCurrentSku = localStorage.getItem('productSkuCode');\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!collection.id || skuCode !== storageCurrentSku) return;\r\n        dispatch(\r\n            fetchMightBeInterestProducts({\r\n                collectionId: collection.id,\r\n                productSkuCode: skuCode,\r\n            })\r\n        );\r\n    }, [skuCode, collection]);\r\n\r\n    return (\r\n        <section className=\"product-page__interested\">\r\n            <ProductsSlider\r\n                title=\"Також може зацікавити\"\r\n                products={interestedProducts}\r\n                loading={loadingInterested}\r\n                error={errorInterested}\r\n            />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default InterestedSlider;\r\n","import { useEffect, useState, useRef, RefObject } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Controller, Navigation } from 'swiper';\r\nimport productPageSprite from '../../../../../assets/icons/product-page/product-pageSprite.svg';\r\nimport { ResponseData } from '../ProductImagesSlider';\r\nimport './EnlargedPhoto.scss';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/thumbs';\r\n\r\ntype Props = {\r\n    setLargePhotoActive: React.Dispatch<React.SetStateAction<boolean>>;\r\n    largePhotoActive: boolean;\r\n    handleSecondSwiper: (swiper: any) => void;\r\n    firstSwiper: null;\r\n    handleSlideChange: (swiper: any) => void;\r\n    activeIndex: number;\r\n    popUpImages: ResponseData[] | null;\r\n};\r\n\r\nconst EnlargedPhoto = (props: Props) => {\r\n    const {\r\n        setLargePhotoActive,\r\n        largePhotoActive,\r\n        handleSecondSwiper,\r\n        firstSwiper,\r\n        activeIndex,\r\n        handleSlideChange,\r\n        popUpImages,\r\n    } = props;\r\n\r\n    const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\r\n    const test = useRef<HTMLDivElement>(null);\r\n\r\n    const handleResize = () => {\r\n        setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    const closeSlider = (e: MouseEvent) => {\r\n        const target = e.target as HTMLElement;\r\n        if (\r\n            !target.closest('.swiper-slide') &&\r\n            !target.closest('.enlarged-block__content_header_sliderCounter') &&\r\n            !target.closest('.swiper-button-next') &&\r\n            !target.closest('.swiper-button-prev')\r\n        ) {\r\n            setLargePhotoActive(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize);\r\n        test.current?.addEventListener('click', closeSlider);\r\n\r\n        return () => {\r\n            test.current?.removeEventListener('click', closeSlider);\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (largePhotoActive) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'visible';\r\n        }\r\n\r\n        return () => {\r\n            document.body.style.overflow = 'visible';\r\n        };\r\n    }, [largePhotoActive]);\r\n\r\n    document.addEventListener('keydown', function (e) {\r\n        if (e.key === 'Escape') {\r\n            setLargePhotoActive(false);\r\n        }\r\n    });\r\n\r\n    const renderSlider = () => {\r\n        if (popUpImages?.length === 0) return null;\r\n        return (\r\n            <Swiper\r\n                navigation\r\n                slidesPerView={1}\r\n                modules={[Navigation, Controller]}\r\n                onSwiper={handleSecondSwiper}\r\n                onSlideChange={handleSlideChange}\r\n                controller={{ control: firstSwiper }}\r\n                className=\"product-images__enlarged_slider\"\r\n            >\r\n                {popUpImages?.map((popUpImage) => (\r\n                    <SwiperSlide key={popUpImage.id}>\r\n                        <img\r\n                            src={\r\n                                windowWidth > 700\r\n                                    ? popUpImage.desktopPopUpImagePath\r\n                                    : popUpImage.mobilePopUpImagePath\r\n                            }\r\n                            alt=\"Enlarged slider images\"\r\n                        />\r\n                    </SwiperSlide>\r\n                ))}\r\n            </Swiper>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"enlarged-block\" ref={test}>\r\n            <div className=\"enlarged-block__content\">\r\n                <div className=\"enlarged-block__content_header\">\r\n                    <div className=\"enlarged-block__content_header_sliderCounter\">\r\n                        <p>{`${activeIndex + 1}/${popUpImages?.length}`}</p>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"enlarged-block__content_header_close\"\r\n                        aria-label=\"закрити\"\r\n                        onClick={() => setLargePhotoActive(false)}\r\n                    >\r\n                        <svg width=\"40\" height=\"40\">\r\n                            <use href={`${productPageSprite}#close-icon`} />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {renderSlider()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnlargedPhoto;\r\n","import Loader from '../Loader';\r\nimport './FullScreenLoader.scss';\r\n\r\nconst FullScreenLoader = () => {\r\n    return (\r\n        <div className=\"full-screen-loader\">\r\n            <div className=\"overlay\" />\r\n            <Loader />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FullScreenLoader;\r\n","import { memo, useEffect, useRef, useState } from 'react';\r\nimport { Swiper, SwiperSlide, SwiperRef } from 'swiper/react';\r\nimport { Navigation, Thumbs, Controller } from 'swiper';\r\nimport { useAppSelector } from '../../../../hooks/hooks';\r\nimport EnlargedPhoto from './EnlargedPhoto/EnlargedPhoto';\r\nimport FullScreenLoader from '../../../../shared-components/FullScreenLoader/FullScreenLoader';\r\nimport Loader from '../../../../shared-components/Loader';\r\nimport { API_BASE } from '../../../../utils/API_BASE';\r\nimport './ProductImagesSlider.scss';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/thumbs';\r\n\r\nexport interface ResponseData {\r\n    id: string;\r\n    desktopPopUpImagePath: string;\r\n    mobilePopUpImagePath: string;\r\n}\r\n\r\ntype Props = {\r\n    colorChange: boolean;\r\n};\r\n\r\nconst ProductImagesSlider = ({ colorChange }: Props) => {\r\n    const { skuCode } = useAppSelector(\r\n        (state) => state.productInformation.productInfo\r\n    );\r\n\r\n    const currentColor = useAppSelector(\r\n        (state) => state.productInformation.currentColor\r\n    );\r\n\r\n    const imagesFromStore = useAppSelector(\r\n        (state) => state.productInformation.productInfo.images\r\n    );\r\n\r\n    const [popUpImages, setPopUpImages] = useState<ResponseData[] | null>([]);\r\n    const [thumbsSwiper, setThumbsSwiper] = useState<any>(null);\r\n    const [largePhotoActive, setLargePhotoActive] = useState<boolean>(false);\r\n    const [firstSwiper, setFirstSwiper] = useState(null);\r\n    const [secondSwiper, setSecondSwiper] = useState(null);\r\n    const [activeIndex, setActiveIndex] = useState<number>(0);\r\n    const [isPopUpLoading, setIsPopUpLoading] = useState(false);\r\n\r\n    const swiperRef = useRef<SwiperRef>(null);\r\n\r\n    const handleSliderClick = async (index: number) => {\r\n        setIsPopUpLoading(true);\r\n        try {\r\n            const requestBody = {\r\n                productSkuCode: skuCode,\r\n                colorHex: currentColor?.id,\r\n            };\r\n\r\n            const response = await fetch(`${API_BASE}image/popup-image`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed');\r\n            }\r\n\r\n            const data: ResponseData[] = await response.json();\r\n            setPopUpImages(data);\r\n\r\n            setActiveIndex(index);\r\n            setLargePhotoActive(true);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        } finally {\r\n            setIsPopUpLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (swiperRef.current && imagesFromStore && thumbsSwiper) {\r\n            const { swiper } = swiperRef.current;\r\n            swiper.slideTo(0, 0, false);\r\n            setActiveIndex(0);\r\n        }\r\n    }, [imagesFromStore]);\r\n\r\n    const handleFirstSwiper = (swiper: any) => {\r\n        setFirstSwiper(swiper);\r\n    };\r\n\r\n    const handleSecondSwiper = (swiper: any) => {\r\n        setSecondSwiper(swiper);\r\n    };\r\n\r\n    const handleSlideChange = (swiper: any) => {\r\n        setActiveIndex(swiper.activeIndex);\r\n    };\r\n\r\n    const thumbnailListMove = (\r\n        activeSlideIndex: number,\r\n        previousSlideIndex: number,\r\n        slidesQuantity: number\r\n    ) => {\r\n        if (slidesQuantity > 4) {\r\n            if (activeSlideIndex >= 2) {\r\n                if (activeSlideIndex > previousSlideIndex) {\r\n                    thumbsSwiper.slideTo(activeSlideIndex - 1);\r\n                } else {\r\n                    thumbsSwiper.slideTo(activeSlideIndex - 2);\r\n                }\r\n            } else {\r\n                thumbsSwiper.slideTo(activeSlideIndex - 2);\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderSlider = () => {\r\n        return (\r\n            <>\r\n                {isPopUpLoading && <FullScreenLoader />}\r\n                <div className=\"product-images\">\r\n                    <div className=\"product-images__main-image\">\r\n                        {colorChange && (\r\n                            <Loader className=\"slider-image__loader\" />\r\n                        )}\r\n                        <Swiper\r\n                            ref={swiperRef}\r\n                            spaceBetween={10}\r\n                            initialSlide={0}\r\n                            navigation\r\n                            thumbs={{ swiper: thumbsSwiper }}\r\n                            modules={[Navigation, Thumbs, Controller]}\r\n                            onSwiper={handleFirstSwiper}\r\n                            controller={{ control: secondSwiper }}\r\n                            onSlideChange={() => {\r\n                                if (firstSwiper) {\r\n                                    const swiper = swiperRef.current?.swiper;\r\n                                    if (swiper) {\r\n                                        setActiveIndex(swiper.activeIndex);\r\n                                        thumbnailListMove(\r\n                                            swiper.activeIndex,\r\n                                            swiper.previousIndex,\r\n                                            swiper.slides.length\r\n                                        );\r\n                                    }\r\n                                }\r\n                            }}\r\n                            className=\"product-images__slider\"\r\n                        >\r\n                            {imagesFromStore &&\r\n                                imagesFromStore.map((image, index) => (\r\n                                    <SwiperSlide\r\n                                        key={image.id}\r\n                                        onClick={() => handleSliderClick(index)}\r\n                                    >\r\n                                        <img\r\n                                            src={image.desktopImagePath}\r\n                                            alt=\"Slider images\"\r\n                                        />\r\n                                    </SwiperSlide>\r\n                                ))}\r\n                        </Swiper>\r\n                        <Swiper\r\n                            onSwiper={setThumbsSwiper}\r\n                            spaceBetween={10}\r\n                            slidesPerView={4}\r\n                            modules={[Navigation, Thumbs]}\r\n                            centerInsufficientSlides\r\n                            watchSlidesProgress\r\n                            breakpoints={{\r\n                                320: {\r\n                                    slidesPerView: 3,\r\n                                    spaceBetween: 4,\r\n                                },\r\n                                360: {\r\n                                    slidesPerView: 4,\r\n                                    spaceBetween: 4,\r\n                                },\r\n                                800: {\r\n                                    slidesPerView: 3,\r\n                                    spaceBetween: 10,\r\n                                },\r\n                                1250: {\r\n                                    slidesPerView: 4,\r\n                                    spaceBetween: 10,\r\n                                },\r\n                            }}\r\n                            className=\"product-images__slider-thumbs\"\r\n                        >\r\n                            {imagesFromStore &&\r\n                                imagesFromStore.map((image, index) => {\r\n                                    return (\r\n                                        <SwiperSlide\r\n                                            key={image.id}\r\n                                            className={\r\n                                                index === activeIndex\r\n                                                    ? 'thumbnail-slide_active'\r\n                                                    : ''\r\n                                            }\r\n                                        >\r\n                                            <div className=\"product-images__slider-thumbs-wrapper\">\r\n                                                <img\r\n                                                    src={image.sliderImagePath}\r\n                                                    alt=\"Slider images\"\r\n                                                />\r\n                                            </div>\r\n                                        </SwiperSlide>\r\n                                    );\r\n                                })}\r\n                        </Swiper>\r\n                    </div>\r\n                </div>\r\n\r\n                {largePhotoActive && (\r\n                    <EnlargedPhoto\r\n                        setLargePhotoActive={setLargePhotoActive}\r\n                        largePhotoActive={largePhotoActive}\r\n                        handleSecondSwiper={handleSecondSwiper}\r\n                        firstSwiper={firstSwiper}\r\n                        activeIndex={activeIndex}\r\n                        handleSlideChange={handleSlideChange}\r\n                        popUpImages={popUpImages}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return <>{renderSlider()}</>;\r\n};\r\n\r\nexport default memo(ProductImagesSlider);\r\n","var _symbol, _symbol2, _symbol3, _symbol4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSpriteRating(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 0,\n    height: 0,\n    className: \"hidden\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 14 14\",\n    id: \"active\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.61958 1.17082C6.73932 0.802295 7.26068 0.802296 7.38042 1.17082L8.70631 5.25147C8.75986 5.41628 8.91344 5.52786 9.08673 5.52786H13.3774C13.7649 5.52786 13.926 6.02371 13.6125 6.25147L10.1413 8.77345C10.0011 8.87531 9.94243 9.05586 9.99598 9.22066L11.3219 13.3013C11.4416 13.6698 11.0198 13.9763 10.7063 13.7485L7.23511 11.2265C7.09492 11.1247 6.90508 11.1247 6.76489 11.2265L3.29368 13.7485C2.98019 13.9763 2.5584 13.6698 2.67814 13.3013L4.00402 9.22067C4.05757 9.05586 3.99891 8.87531 3.85872 8.77345L0.387506 6.25147C0.0740204 6.02371 0.235132 5.52786 0.622621 5.52786H4.91327C5.08656 5.52786 5.24014 5.41628 5.29369 5.25147L6.61958 1.17082Z\",\n    fill: \"#C57100\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 7 14\",\n    id: \"active_half\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M6.99983 0.888672C6.83955 0.888672 6.67927 0.980802 6.6194 1.16506L5.29352 5.24572C5.23997 5.41053 5.08639 5.52211 4.9131 5.52211H0.622447C0.234958 5.52211 0.0738465 6.01795 0.387332 6.24572L3.85854 8.7677C3.99874 8.86955 4.0574 9.0501 4.00385 9.21491L2.67797 13.2956C2.55823 13.6641 2.98002 13.9705 3.2935 13.7428L6.76471 11.2208C6.83481 11.1699 6.91732 11.1444 6.99983 11.1444V0.888672Z\",\n    fill: \"#C57100\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 14 14\",\n    id: \"inactive\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.61958 1.17082C6.73932 0.802295 7.26068 0.802296 7.38042 1.17082L8.70631 5.25147C8.75986 5.41628 8.91344 5.52786 9.08673 5.52786H13.3774C13.7649 5.52786 13.926 6.02371 13.6125 6.25147L10.1413 8.77345C10.0011 8.87531 9.94243 9.05586 9.99598 9.22066L11.3219 13.3013C11.4416 13.6698 11.0198 13.9763 10.7063 13.7485L7.23511 11.2265C7.09492 11.1247 6.90508 11.1247 6.76489 11.2265L3.29368 13.7485C2.98019 13.9763 2.5584 13.6698 2.67814 13.3013L4.00402 9.22067C4.05757 9.05586 3.99891 8.87531 3.85872 8.77345L0.387506 6.25147C0.0740204 6.02371 0.235132 5.52786 0.622621 5.52786H4.91327C5.08656 5.52786 5.24014 5.41628 5.29369 5.25147L6.61958 1.17082Z\",\n    fill: \"#EDEDED\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 7 14\",\n    id: \"inactive_half\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.221854 0.888184C0.38213 0.888183 0.542405 0.980314 0.602276 1.16458L1.92816 5.24523C1.98171 5.41004 2.13529 5.52162 2.30858 5.52162H6.59923C6.98672 5.52162 7.14783 6.01747 6.83435 6.24523L3.36314 8.76721C3.22294 8.86907 3.16428 9.04961 3.21783 9.21442L4.54371 13.2951C4.66345 13.6636 4.24166 13.97 3.92818 13.7423L0.456968 11.2203C0.38687 11.1694 0.304362 11.1439 0.221854 11.1439V0.888184Z\",\n    fill: \"#EDEDED\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpriteRating);\nexport default __webpack_public_path__ + \"static/media/sprite-rating.f6cd4b2da4f76050ba8e0518590d3de2.svg\";\nexport { ForwardRef as ReactComponent };","import nextId from 'react-id-generator';\r\nimport { useAppSelector } from '../../../../hooks/hooks';\r\nimport ratingSprite from '../../../../assets/icons/rating/sprite-rating.svg';\r\nimport './ProductRating.scss';\r\n\r\nconst ProductRating = () => {\r\n    const currentRating = useAppSelector(\r\n        (state) => state.productInformation.productInfo.averageRating\r\n    );\r\n\r\n    const reminderOfDividing = currentRating % Math.floor(currentRating);\r\n    const rating = () => {\r\n        const result: JSX.Element[] = [];\r\n        if (currentRating < 0) return result;\r\n        for (let i = 0; i < currentRating - reminderOfDividing; i += 1) {\r\n            if (i >= 5) return result;\r\n            result.push(\r\n                <li\r\n                    className=\"stars-list__item\"\r\n                    key={nextId('product-rating-star')}\r\n                >\r\n                    <svg className=\"stars-list__icon\" width=\"14\" height=\"14\">\r\n                        <use href={`${ratingSprite}#active`} />\r\n                    </svg>\r\n                </li>\r\n            );\r\n        }\r\n        if (currentRating >= 5) {\r\n            return result;\r\n        }\r\n        if (!Number.isInteger(currentRating)) {\r\n            result.push(\r\n                <li\r\n                    className=\"stars-list__item\"\r\n                    key={nextId('product-rating-star')}\r\n                >\r\n                    <svg className=\"stars-list__icon\" width=\"7\" height=\"14\">\r\n                        <use href={`${ratingSprite}#active_half`} />\r\n                    </svg>\r\n                    <svg className=\"stars-list__icon\" width=\"7\" height=\"14\">\r\n                        <use href={`${ratingSprite}#inactive_half`} />\r\n                    </svg>\r\n                </li>\r\n            );\r\n        }\r\n        if (currentRating < 1) {\r\n            for (let k = 0; k < Math.floor(5 - currentRating); k += 1) {\r\n                result.push(\r\n                    <li\r\n                        className=\"stars-list__item\"\r\n                        key={nextId('product-rating-star')}\r\n                    >\r\n                        <svg\r\n                            className=\"stars-list__icon\"\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                        >\r\n                            <use href={`${ratingSprite}#inactive`} />\r\n                        </svg>\r\n                    </li>\r\n                );\r\n            }\r\n        } else {\r\n            for (let k = 0; k < Math.floor(5 - currentRating); k += 1) {\r\n                result.push(\r\n                    <li\r\n                        className=\"stars-list__item\"\r\n                        key={nextId('product-rating-star')}\r\n                    >\r\n                        <svg\r\n                            className=\"stars-list__icon\"\r\n                            width=\"14\"\r\n                            height=\"14\"\r\n                        >\r\n                            <use href={`${ratingSprite}#inactive`} />\r\n                        </svg>\r\n                    </li>\r\n                );\r\n            }\r\n        }\r\n\r\n        return result.map((item) => item);\r\n    };\r\n    return (\r\n        <div className=\"product-page__rating rating\">\r\n            <ul\r\n                className=\"rating__stars-list stars-list\"\r\n                title={`рейтинг: ${currentRating}`}\r\n            >\r\n                {rating()}\r\n                <li className=\"stars-list__bg\" />\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductRating;\r\n","import { useEffect, memo } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport nextId from 'react-id-generator';\r\nimport {\r\n    updateProductColor,\r\n    fetchProductInfoByScuWithColor,\r\n    updateProductImages,\r\n} from '../../../../store/reducers/productInformationSlice';\r\nimport { useAppSelector, useAppDispatch } from '../../../../hooks/hooks';\r\nimport { ResponseData } from '../ProductImagesSlider/ProductImagesSlider';\r\nimport { sortColors } from '../../../../shared-components/ProductCard/SliderImages/SliderImages';\r\nimport moveUserToPageUp from '../../../../utils/moveUserToPageUp';\r\nimport './ColorSelection.scss';\r\n\r\ntype Props = {\r\n    setColorChange: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nconst ColorSelection = ({ setColorChange }: Props) => {\r\n    const skuCode = useAppSelector(\r\n        (state) => state.productInformation.productInfo.skuCode\r\n    );\r\n    const colorDtoList = useAppSelector(\r\n        (state) => state.productInformation.productInfo.colors\r\n    );\r\n    const currentColor = useAppSelector(\r\n        (state) => state.productInformation.currentColor\r\n    );\r\n    const currentSkuCode = useAppSelector(\r\n        (state) => state.productInformation.currentSku\r\n    );\r\n    const colorDtoSort = sortColors(colorDtoList);\r\n    const localColorCurrent = JSON.parse(\r\n        localStorage.getItem('currentColor') ||\r\n            JSON.stringify({\r\n                hex: '',\r\n                colorName: '',\r\n                quantityStatus: '',\r\n            })\r\n    );\r\n    const { hex, colorName } = localColorCurrent;\r\n    const localProductSku = localStorage.getItem('productSkuCode');\r\n    const { pathname, hash } = useLocation();\r\n\r\n    const dispatch = useAppDispatch();\r\n    const currentPath = useLocation().pathname;\r\n\r\n    useEffect(() => {\r\n        const regex = /\\D/g;\r\n        const skuFromLink = pathname.replace(regex, ''); // Удаляем все, кроме цифр\r\n        if (skuFromLink === skuCode) return;\r\n        moveUserToPageUp('productPage');\r\n        dispatch(\r\n            fetchProductInfoByScuWithColor({\r\n                productSkuCode: skuFromLink,\r\n                colorHex: hash,\r\n            })\r\n        );\r\n        localStorage.setItem('productSkuCode', skuFromLink);\r\n        localStorage.setItem(\r\n            'currentColor',\r\n            JSON.stringify({\r\n                hex: hash,\r\n            })\r\n        );\r\n    }, [pathname, hash, skuCode]);\r\n\r\n    useEffect(() => {\r\n        if (!hex || colorDtoSort.length === 0) return;\r\n        if (!colorDtoSort.some((color) => color.id === hex)) return;\r\n        const colorName = colorDtoSort.filter((color) => color.id === hex)[0]\r\n            .name;\r\n        const colorStatus = colorDtoSort.filter((color) => color.id === hex)[0]\r\n            .quantityStatus;\r\n\r\n        localStorage.setItem(\r\n            'currentColor',\r\n            JSON.stringify({\r\n                hex,\r\n                colorName,\r\n                colorStatus,\r\n            })\r\n        );\r\n        dispatch(\r\n            updateProductColor({\r\n                id: hex,\r\n                name: colorName,\r\n                quantityStatus: colorStatus,\r\n            })\r\n        );\r\n    }, [colorDtoList]);\r\n\r\n    useEffect(() => {\r\n        if (!currentColor) return;\r\n        const { id, name, quantityStatus } = currentColor;\r\n        localStorage.setItem(\r\n            'currentColor',\r\n            JSON.stringify({\r\n                hex: id,\r\n                colorName: name,\r\n                colorStatus: quantityStatus,\r\n            })\r\n        );\r\n    }, [currentColor]);\r\n\r\n    const handleColorChange = async (id: string) => {\r\n        setColorChange(true);\r\n        try {\r\n            const requestBody = {\r\n                productSkuCode: skuCode,\r\n                colorHex: id,\r\n            };\r\n\r\n            const response = await fetch(\r\n                'https://cozy-home.onrender.com/api/v1/image/product-card-image',\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(requestBody),\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Request failed');\r\n            }\r\n\r\n            const data: ResponseData[] = await response.json();\r\n\r\n            dispatch(updateProductImages(data));\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        } finally {\r\n            setColorChange(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"color-selection\">\r\n            <span className=\"color-selection__color-descr\">\r\n                Колір: <span>{currentColor?.name}</span>\r\n            </span>\r\n            <ul className=\"color-selection__list\">\r\n                {colorDtoSort.map((color) => {\r\n                    const { id, name, quantityStatus } = color;\r\n                    return (\r\n                        <li\r\n                            className={`color-selection__item ${\r\n                                quantityStatus === 'Немає на складі' ||\r\n                                quantityStatus === 'Немає в наявності'\r\n                                    ? 'out-of-stock'\r\n                                    : ''\r\n                            }`}\r\n                            key={nextId('product-color')}\r\n                        >\r\n                            <NavLink\r\n                                className={`color-selection__link ${\r\n                                    currentColor?.id === id ? 'active-link' : ''\r\n                                }`}\r\n                                to={`${currentPath}${id}`}\r\n                                style={{ backgroundColor: `${id}` }}\r\n                                onClick={() => {\r\n                                    handleColorChange(id);\r\n                                    dispatch(\r\n                                        updateProductColor({\r\n                                            name,\r\n                                            id,\r\n                                            quantityStatus,\r\n                                        })\r\n                                    );\r\n                                }}\r\n                            />\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ColorSelection);\r\n","import { useAppSelector } from '../../../../hooks/hooks';\r\nimport './ProductPrice.scss';\r\n\r\nconst ProductPrice = () => {\r\n    const addSpaceToPrice = (price: number) => {\r\n        let result = price.toString();\r\n        if (price >= 1000) {\r\n            const temporary = +price;\r\n            result = temporary.toLocaleString().replace(',', ' ');\r\n        }\r\n        return result;\r\n    };\r\n    const productInfo = useAppSelector(\r\n        (state) => state.productInformation.productInfo\r\n    );\r\n    const currentColor = useAppSelector(\r\n        (state) => state.productInformation.currentColor\r\n    );\r\n\r\n    const { price, priceWithDiscount } = productInfo;\r\n\r\n    const renderPrice = () => {\r\n        return (\r\n            <>\r\n                {currentColor?.quantityStatus === 'Немає на складі' ||\r\n                currentColor?.quantityStatus === 'Немає в наявності' ? null : (\r\n                    <div className=\"product-price__wrapper\">\r\n                        {priceWithDiscount ? (\r\n                            <>\r\n                                <span className=\"product-price__discount product-price_bold-text\">\r\n                                    {addSpaceToPrice(priceWithDiscount)} UAH\r\n                                </span>\r\n                                <span className=\"product-price__default product-price_strikethrough-text\">\r\n                                    {addSpaceToPrice(price)} UAH\r\n                                </span>\r\n                            </>\r\n                        ) : (\r\n                            <span className=\"product-price__default product-price_bold-text\">\r\n                                {addSpaceToPrice(price)} UAH\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                )}\r\n                <span className=\"product-price__stock-status\">\r\n                    {currentColor?.quantityStatus}\r\n                </span>\r\n            </>\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"product-page__product-price product-price\">\r\n            {renderPrice()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductPrice;\r\n","import { useEffect, useState, memo } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '../../../../../hooks/hooks';\r\nimport {\r\n    openPopUpNotification,\r\n    openPopUpCart,\r\n} from '../../../../../store/reducers/modalsSlice';\r\nimport { addProductToCartBody } from '../../../../../store/reducers/cartSlice';\r\nimport './AddToCartBtn.scss';\r\n\r\nconst AddToCartBtn = () => {\r\n    const currentColor = useAppSelector(\r\n        (state) => state.productInformation.currentColor\r\n    );\r\n    const skuCode = useAppSelector(\r\n        (state) => state.productInformation.productInfo.skuCode\r\n    );\r\n    const cartBody = useAppSelector((state) => state.cart.cartBody);\r\n    const [isElementAddedToCart, setIsElementAddedToCart] =\r\n        useState<boolean>(false);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!currentColor || !cartBody || !skuCode) return;\r\n        setIsElementAddedToCart(\r\n            cartBody.some(\r\n                (item) =>\r\n                    item.productSkuCode === skuCode &&\r\n                    item.colorHex === currentColor.id\r\n            )\r\n        );\r\n    }, [cartBody, currentColor, skuCode]);\r\n\r\n    // const handleAddProductToCart = () => {\r\n    //     if (isElementAddedToCart || !currentColor) return;\r\n    //     dispatch(\r\n    //         addProductToCartBody({\r\n    //             productSkuCode: skuCode,\r\n    //             colorHex: currentColor.id,\r\n    //         })\r\n    //     );\r\n    //     dispatch(openPopUpCart(true));\r\n    // };\r\n\r\n    const cartBtnRender = () => {\r\n        if (isElementAddedToCart) {\r\n            return (\r\n                <button className=\"cart-btn cart-btn_added-item\" type=\"button\">\r\n                    <span className=\"cart-btn__text cart-btn__text_dark\">\r\n                        В кошику\r\n                    </span>\r\n                    <svg\r\n                        className=\"cart-btn__icon\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"16\"\r\n                        height=\"16\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        fill=\"none\"\r\n                    >\r\n                        <path\r\n                            d=\"M5.59509 14L0 8.31185L1.39877 6.88981L5.59509 11.1559L14.6012 2L16 3.42204L5.59509 14Z\"\r\n                            fill=\"#262626\"\r\n                        />\r\n                    </svg>\r\n                </button>\r\n            );\r\n        }\r\n        return (\r\n            <button\r\n                className=\"cart-btn\"\r\n                type=\"button\"\r\n                disabled={isElementAddedToCart}\r\n                onClick={() => {\r\n                    dispatch(\r\n                        addProductToCartBody({\r\n                            productSkuCode: skuCode,\r\n                            colorHex: currentColor ? currentColor.id : '',\r\n                        })\r\n                    );\r\n                    dispatch(openPopUpCart(true));\r\n                }}\r\n            >\r\n                <span className=\"cart-btn__text\">До кошика</span>\r\n                <svg\r\n                    className=\"cart-btn__icon\"\r\n                    width=\"16\"\r\n                    height=\"14\"\r\n                    viewBox=\"0 0 16 14\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        id=\"Vector\"\r\n                        d=\"M0.673684 2.8539e-05C0.303158 2.8539e-05 0 0.315028 0 0.700027C0 1.08503 0.303158 1.40003 0.673684 1.40003H2.16859L3.93701 8.75001C4.08657 9.37301 4.62417 9.80001 5.24194 9.80001H12.9684C13.5761 9.80001 14.0921 9.38141 14.2525 8.77171L16 2.10002H4.71579L5.05263 3.50002H14.2525L12.9684 8.40001H5.24194L3.47352 1.05003C3.40066 0.748544 3.23252 0.481196 2.99603 0.290815C2.75955 0.100433 2.46841 -0.00196401 2.16926 2.8539e-05H0.673684ZM12.1263 9.80001C11.0181 9.80001 10.1053 10.7485 10.1053 11.9C10.1053 13.0515 11.0181 14 12.1263 14C13.2345 14 14.1474 13.0515 14.1474 11.9C14.1474 10.7485 13.2345 9.80001 12.1263 9.80001ZM6.06316 9.80001C4.95495 9.80001 4.04211 10.7485 4.04211 11.9C4.04211 13.0515 4.95495 14 6.06316 14C7.17137 14 8.08421 13.0515 8.08421 11.9C8.08421 10.7485 7.17137 9.80001 6.06316 9.80001ZM6.06316 11.2C6.44244 11.2 6.73684 11.5066 6.73684 11.9C6.73684 12.2941 6.44177 12.6 6.06316 12.6C5.68387 12.6 5.38947 12.2934 5.38947 11.9C5.38947 11.5059 5.68455 11.2 6.06316 11.2ZM12.1263 11.2C12.5056 11.2 12.8 11.5066 12.8 11.9C12.8 12.2941 12.5049 12.6 12.1263 12.6C11.747 12.6 11.4526 12.2934 11.4526 11.9C11.4526 11.5059 11.7477 11.2 12.1263 11.2Z\"\r\n                    />\r\n                </svg>\r\n            </button>\r\n        );\r\n    };\r\n\r\n    return currentColor?.quantityStatus === 'Немає на складі' ||\r\n        currentColor?.quantityStatus === 'Немає в наявності' ? (\r\n        <button\r\n            className=\"notification-btn\"\r\n            type=\"button\"\r\n            onClick={() => dispatch(openPopUpNotification(true))}\r\n        >\r\n            <span className=\"notification-btn__text\">\r\n                Повідомити, коли з'явиться\r\n            </span>\r\n            <svg\r\n                className=\"notification-btn__icon\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    d=\"M9.15333 14.0007C9.03626 14.2029 8.86808 14.3708 8.66565 14.4875C8.46322 14.6042 8.23366 14.6656 8 14.6656C7.76634 14.6656 7.53678 14.6042 7.33435 14.4875C7.13192 14.3708 6.96374 14.2029 6.84667 14.0007M12 5.60065C12 4.46932 11.5787 3.38398 10.8287 2.58398C10.078 1.78398 9.06 1.33398 8 1.33398C6.93933 1.33398 5.922 1.78332 5.17133 2.58398C4.42133 3.38398 4 4.46932 4 5.60065C4 10.5787 2 12.0007 2 12.0007H14C14 12.0007 12 10.5787 12 5.60065Z\"\r\n                    stroke=\"#FFFFFE\"\r\n                    strokeWidth=\"1.5\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                />\r\n            </svg>\r\n        </button>\r\n    ) : (\r\n        cartBtnRender()\r\n    );\r\n};\r\n\r\nexport default memo(AddToCartBtn);\r\n","import { useState, useEffect } from 'react';\r\nimport AddToFavoriteBtn from '../../../../shared-components/AddToFavoriteBtn/AddToFavoriteBtn';\r\nimport AddToCartBtn from './AddToCartBtn/AddToCartBtn';\r\nimport { useAppSelector } from '../../../../hooks/hooks';\r\n\r\nconst AddProductBlock = () => {\r\n    const [isAvailable, setIsAvailable] = useState(true);\r\n    const jwtToken = useAppSelector((state) => state.auth.jwtToken);\r\n    const quantityStatus = useAppSelector(\r\n        (state) => state.productInformation.currentColor?.quantityStatus\r\n    );\r\n    const isFavorite = useAppSelector(\r\n        (state) => state.productInformation.productInfo.favorite\r\n    );\r\n    const skuCode = useAppSelector(\r\n        (state) => state.productInformation.productInfo.skuCode\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!quantityStatus) return;\r\n        if (\r\n            quantityStatus === 'Немає на складі' ||\r\n            quantityStatus === 'Немає в наявності'\r\n        ) {\r\n            setIsAvailable(false);\r\n        } else {\r\n            setIsAvailable(true);\r\n        }\r\n    }, [quantityStatus]);\r\n\r\n    return (\r\n        <div\r\n            className={`product-page__add-product ${\r\n                !isAvailable ? 'unavailable' : ''\r\n            }`}\r\n        >\r\n            <AddToCartBtn />\r\n            {isFavorite !== null && jwtToken ? (\r\n                <AddToFavoriteBtn\r\n                    productSkuCode={skuCode}\r\n                    isFavorite={isFavorite}\r\n                />\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProductBlock;\r\n","import { useState, useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\nimport nextId from 'react-id-generator';\r\nimport { useAppSelector } from '../../../../hooks/hooks';\r\nimport DeliveryTerms from '../../../../shared-components/DeliveryTerms/DeliveryTerms';\r\nimport './Accordeon.scss';\r\n\r\ntype CharactersDataType = {\r\n    title: string;\r\n    value:\r\n        | string\r\n        | string[]\r\n        | number\r\n        | boolean\r\n        | { id: string; name: string }\r\n        | Record<string, never>;\r\n    unit?: string;\r\n};\r\n\r\nconst Accordeon = () => {\r\n    const [activeTab, setActiveTab] = useState<string | null>(null);\r\n    const accordeonItemsText = document.querySelectorAll(\r\n        '.accordeon__item-text'\r\n    );\r\n    const accordeonItems = document.querySelectorAll('.accordeon__item');\r\n    const productInfo = useAppSelector(\r\n        (state) => state.productInformation.productInfo\r\n    );\r\n\r\n    const {\r\n        description,\r\n        categoryName,\r\n        materials,\r\n        collection,\r\n        transformation,\r\n        heightAdjustment,\r\n        weight,\r\n        height,\r\n        width,\r\n        depth,\r\n        numberOfDoors,\r\n        numberOfDrawers,\r\n        bedLength,\r\n        bedWidth,\r\n        maxLoad,\r\n    } = productInfo;\r\n\r\n    const charactersData: CharactersDataType[] = [\r\n        {\r\n            title: 'Категорія',\r\n            value: categoryName,\r\n        },\r\n        {\r\n            title: 'Матеріали',\r\n            value: materials,\r\n        },\r\n        {\r\n            title: 'Колекції',\r\n            value: collection.name,\r\n        },\r\n        {\r\n            title: 'Механізм трансформації',\r\n            value: transformation ? 'так' : false,\r\n        },\r\n        {\r\n            title: 'Регулювання за висотою',\r\n            value: heightAdjustment ? 'так' : false,\r\n        },\r\n        {\r\n            title: 'Вага',\r\n            value: weight,\r\n            unit: 'кг',\r\n        },\r\n        {\r\n            title: 'Висота',\r\n            value: height,\r\n            unit: 'см',\r\n        },\r\n        {\r\n            title: 'Ширина',\r\n            value: width,\r\n            unit: 'см',\r\n        },\r\n        {\r\n            title: 'Глибина',\r\n            value: depth,\r\n            unit: 'см',\r\n        },\r\n        {\r\n            title: 'Кількість дверей',\r\n            value: numberOfDoors,\r\n            unit: 'шт',\r\n        },\r\n        {\r\n            title: 'Кількість шухляд',\r\n            value: numberOfDrawers,\r\n            unit: 'шт',\r\n        },\r\n        {\r\n            title: 'Довжина спального місця',\r\n            value: bedLength,\r\n            unit: 'см',\r\n        },\r\n        {\r\n            title: 'Ширина спального місця',\r\n            value: bedWidth,\r\n            unit: 'см',\r\n        },\r\n        {\r\n            title: 'Навантаження',\r\n            value: maxLoad,\r\n            unit: 'кг',\r\n        },\r\n    ];\r\n\r\n    const charactersCurtrentInfo = charactersData.filter((character) => {\r\n        if (character.value) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    });\r\n\r\n    function autoCalculateHeightOfItem() {\r\n        accordeonItems.forEach((item, index) => {\r\n            const currentHeight = `${accordeonItemsText[index].scrollHeight}px`;\r\n            const currentItem = item as HTMLElement;\r\n            currentItem.style.setProperty('--content-height', currentHeight);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', autoCalculateHeightOfItem);\r\n\r\n        // return () =>\r\n        //     window.removeEventListener('resize', autoCalculateHeightOfItem);\r\n    }, []);\r\n\r\n    autoCalculateHeightOfItem();\r\n    return (\r\n        <ul className=\"accordeon\">\r\n            <li\r\n                className={`accordeon__item item-descr ${\r\n                    activeTab === 'descr' ? 'active' : ''\r\n                }`}\r\n                data-name=\"descr\"\r\n            >\r\n                <button\r\n                    className=\"accordeon__item-btn\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                        setActiveTab((prev) =>\r\n                            prev === 'descr' ? null : 'descr'\r\n                        )\r\n                    }\r\n                >\r\n                    <span className=\"accordeon__item-title\">Опис</span>\r\n                </button>\r\n                <div className=\"accordeon__item-inner\">\r\n                    <p className=\"accordeon__item-text item-descr__text\">\r\n                        {parse(description)}\r\n                    </p>\r\n                </div>\r\n            </li>\r\n            <li\r\n                className={`accordeon__item item-characters ${\r\n                    activeTab === 'characters' ? 'active' : ''\r\n                }`}\r\n                data-name=\"characters\"\r\n            >\r\n                <button\r\n                    className=\"accordeon__item-btn\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                        setActiveTab((prev) =>\r\n                            prev === 'characters' ? null : 'characters'\r\n                        )\r\n                    }\r\n                >\r\n                    <span className=\"accordeon__item-title\">\r\n                        Характеристики\r\n                    </span>\r\n                </button>\r\n                <div className=\"accordeon__item-inner\">\r\n                    <table className=\"accordeon__item-text item-characters__table\">\r\n                        <tbody>\r\n                            {charactersCurtrentInfo.map((character) => {\r\n                                const { title, value, unit } = character;\r\n                                if (\r\n                                    typeof value === 'string' ||\r\n                                    typeof value === 'number'\r\n                                )\r\n                                    return (\r\n                                        <tr key={nextId('character-type')}>\r\n                                            <th className=\"table-title\">\r\n                                                {title}:\r\n                                            </th>\r\n                                            <td className=\"table-text\">\r\n                                                {value} {unit || ''}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                if (Array.isArray(value)) {\r\n                                    return (\r\n                                        <tr key={nextId('character-type')}>\r\n                                            <th className=\"table-title\">\r\n                                                {title}:\r\n                                            </th>\r\n                                            <td className=\"table-text\">\r\n                                                {value.map((item, index) => {\r\n                                                    return index <\r\n                                                        value.length - 1\r\n                                                        ? `${item}, `\r\n                                                        : item;\r\n                                                })}\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                }\r\n                                return null;\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </li>\r\n            <li\r\n                className={`accordeon__item item-delivery ${\r\n                    activeTab === 'delivery' ? 'active' : ''\r\n                }`}\r\n                data-name=\"delivery\"\r\n            >\r\n                <button\r\n                    className=\"accordeon__item-btn\"\r\n                    type=\"button\"\r\n                    onClick={() =>\r\n                        setActiveTab((prev) =>\r\n                            prev === 'delivery' ? null : 'delivery'\r\n                        )\r\n                    }\r\n                >\r\n                    <span className=\"accordeon__item-title\">\r\n                        Оплата та доставка\r\n                    </span>\r\n                </button>\r\n                <div className=\"accordeon__item-inner\">\r\n                    <DeliveryTerms extraClass=\"accordeon__item-text\" />\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Accordeon;\r\n","import { useState, MouseEvent } from 'react';\r\nimport { useLenis } from '@studio-freight/react-lenis';\r\nimport { useAppSelector } from '../../../../hooks/hooks';\r\nimport ProductImagesSlider from '../ProductImagesSlider/ProductImagesSlider';\r\nimport ProductRating from '../ProductRating/ProductRating';\r\nimport ColorSelection from '../ColorSelection/ColorSelection';\r\nimport ProductPrice from '../ProductPrice/ProductPrice';\r\nimport AddProductBlock from '../AddProductBlock/AddProductBlock';\r\nimport Accordeon from '../Accordeon/Accordeon';\r\nimport pluralizeUkrainian from '../../../../helpers/pluralizeUkrainian';\r\nimport Loader from '../../../../shared-components/Loader';\r\n\r\nconst ProductInfoContainer = () => {\r\n    const [colorChange, setColorChange] = useState(false);\r\n    const skuCode = useAppSelector(\r\n        (state) => state.productInformation.productInfo.skuCode\r\n    );\r\n    const name = useAppSelector(\r\n        (state) => state.productInformation.productInfo.name\r\n    );\r\n    const countOfReviews = useAppSelector(\r\n        (state) => state.productInformation.productInfo.countOfReviews\r\n    );\r\n    const { loading } = useAppSelector((state) => state.productInformation);\r\n\r\n    const lenis = useLenis(({ scroll }) => {\r\n        // called every scroll\r\n    });\r\n\r\n    const handleClick = (\r\n        event: MouseEvent<HTMLAnchorElement>,\r\n        anchor: string\r\n    ) => {\r\n        event.preventDefault();\r\n        if (anchor) {\r\n            const scrollToOptions: any = {\r\n                offset: -100,\r\n                lerp: 0.1,\r\n                duration: 1.3,\r\n                easing: (rawValue: number) => rawValue, // Example easing function\r\n                immediate: false,\r\n                lock: false,\r\n                force: false,\r\n            };\r\n\r\n            lenis?.scrollTo(anchor, scrollToOptions);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-page__wrapper container\">\r\n            {loading === 'pending' ? (\r\n                <Loader className=\"product-page__loader\" />\r\n            ) : (\r\n                ''\r\n            )}\r\n            <ProductImagesSlider colorChange={colorChange} />\r\n            <div className=\"product-page-right-content-wrapper\">\r\n                <h1 className=\"product-page__title\">{name}</h1>\r\n                <div className=\"product-page__extra-info\">\r\n                    <p className=\"product-page__sku\">{skuCode}</p>\r\n                    <ProductRating />\r\n                    <a\r\n                        className=\"product-page__feedbacks-link\"\r\n                        href=\"#customer-review\"\r\n                        onClick={(event) =>\r\n                            handleClick(event, '#customer-review')\r\n                        }\r\n                    >\r\n                        {pluralizeUkrainian(countOfReviews, [\r\n                            'відгуг',\r\n                            'відгука',\r\n                            'відгуків',\r\n                        ])}\r\n                    </a>\r\n                </div>\r\n                <ColorSelection setColorChange={setColorChange} />\r\n                <ProductPrice />\r\n                <AddProductBlock />\r\n                <Accordeon />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductInfoContainer;\r\n","/* eslint-disable no-plusplus */\r\nimport './CustomerReview.scss';\r\nimport ratingSprite from '../../../../../../assets/icons/rating/sprite-rating.svg';\r\n\r\ntype Props = {\r\n    content: string;\r\n    name: string;\r\n    dateAdded: string;\r\n    rating: number;\r\n};\r\n\r\nconst monthMappings: { [key: string]: string } = {\r\n    '01': 'Січень',\r\n    '02': 'Лютий',\r\n    '03': 'Березень',\r\n    '04': 'Квітень',\r\n    '05': 'Травень',\r\n    '06': 'Червень',\r\n    '07': 'Липень',\r\n    '08': 'Серпень',\r\n    '09': 'Вересень',\r\n    '10': 'Жовтень',\r\n    '11': 'Листопад',\r\n    '12': 'Грудень',\r\n};\r\n\r\nconst formatDateString = (dateString: string): string => {\r\n    const [year, month, day] = dateString.split('-');\r\n    const monthName = monthMappings[month];\r\n    return `${day} ${monthName} ${year}`;\r\n};\r\n\r\nconst CustomerReview = (props: Props) => {\r\n    const { content, dateAdded, name, rating } = props;\r\n    const formattedDate = formatDateString(dateAdded);\r\n\r\n    const renderStarsRating = (rating: number) => {\r\n        const maxRating = 5;\r\n        const stars = [];\r\n\r\n        for (let i = 1; i <= maxRating; i++) {\r\n            const isActive = i <= rating;\r\n\r\n            const star = (\r\n                <svg\r\n                    key={i}\r\n                    className={`review-stars-list__icon ${\r\n                        isActive ? 'active' : ''\r\n                    }`}\r\n                    width=\"14\"\r\n                    height=\"14\"\r\n                >\r\n                    <use\r\n                        href={`${ratingSprite}#${\r\n                            isActive ? 'active' : 'inactive'\r\n                        }`}\r\n                    />\r\n                </svg>\r\n            );\r\n\r\n            stars.push(star);\r\n        }\r\n\r\n        return <div className=\"review-stars-list\">{stars}</div>;\r\n    };\r\n\r\n    return (\r\n        <div className=\"customers-review__slider_cards\">\r\n            <div className=\"customers-review__slider_cards_card\">\r\n                <div className=\"customers-review__slider_cards_card_header\">\r\n                    <h2 className=\"customers-review__slider_cards_card_header_title\">\r\n                        {name}\r\n                    </h2>\r\n                    <p className=\"customers-review__slider_cards_card_header_date\">\r\n                        {formattedDate}\r\n                    </p>\r\n                    <div className=\"customers-review__slider_cards_card_header_rating\">\r\n                        {renderStarsRating(rating)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"customers-review__slider_cards_card_review\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerReview;\r\n","import React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport './CommentTextarea.scss';\r\n\r\ninterface CommentTextareaProps {\r\n    formik?: any;\r\n}\r\n\r\nconst CommentTextarea: React.FC<CommentTextareaProps> = ({\r\n    formik,\r\n}: {\r\n    formik?: any;\r\n}) => {\r\n    const [comment, setComment] = useState<string>('');\r\n    const [isMaxCharactersExceeded, setIsMaxCharactersExceeded] =\r\n        useState(false);\r\n    const maxLength = 500;\r\n\r\n    const handleTextareaChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const inputText = e.target.value;\r\n\r\n        if (inputText.length <= maxLength) {\r\n            setComment(inputText);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsMaxCharactersExceeded(comment.length >= maxLength);\r\n    }, [comment]);\r\n\r\n    return (\r\n        <div className=\"comment-textarea\">\r\n            <textarea\r\n                name=\"comment\"\r\n                cols={30}\r\n                rows={10}\r\n                maxLength={500}\r\n                className=\"customers-review__modal_inputs_input_comment\"\r\n                placeholder=\"Ваш коментар\"\r\n                value={formik ? formik.values.comment : comment}\r\n                onChange={formik ? formik.handleChange : handleTextareaChange}\r\n            />\r\n            <div\r\n                className={`character-count ${\r\n                    isMaxCharactersExceeded ? 'exceeded' : ''\r\n                }`}\r\n            >\r\n                {comment.length}/{maxLength}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCommentTextarea.defaultProps = {\r\n    formik: undefined,\r\n};\r\n\r\nexport default CommentTextarea;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useFormik, FormikErrors } from 'formik';\r\nimport { Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport nextId from 'react-id-generator';\r\nimport Modal from '../../../../shared-components/Modal/Modal';\r\nimport ratingSprite from '../../../../assets/icons/rating/sprite-rating.svg';\r\nimport CustomerReview from './components/CustomerReview/CustomerReview';\r\nimport CommentTextarea from './components/CommentTextArea/CommentTextarea';\r\nimport { useAppSelector, useAppDispatch } from '../../../../hooks/hooks';\r\nimport formValidation from '../../../../utils/formValidation';\r\nimport {\r\n    addReviewForProduct,\r\n    resetAddReviewForProduct,\r\n    fetchProductInfoByScuWithColor,\r\n} from '../../../../store/reducers/productInformationSlice';\r\nimport {\r\n    EmailInput,\r\n    FirstNameInput,\r\n} from '../../../../shared-components/FormComponents/Inputs';\r\nimport { ErrorMessageSmall } from '../../../../shared-components/UserMessages/UserMessages';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport './CustomersReviewSlider.scss';\r\n\r\ntype FormValues = {\r\n    [key: string]: string;\r\n    firstName: string;\r\n    email: string;\r\n};\r\n\r\nconst CustomersReviewSlider = () => {\r\n    const [modalActive, setModalActive] = useState<boolean>(false);\r\n    const [ratingError, setRatingError] = useState(false);\r\n    const [rating, setRating] = useState(0);\r\n    const [hoverIndex, setHoverIndex] = useState<number | null>(null);\r\n    const [reviewSubmit, setReviewSubmit] = useState<boolean>(false);\r\n    const [timeoutHover, setTimeoutHover] = useState<any>(null);\r\n    const prevRef = useRef(null);\r\n    const nextRef = useRef(null);\r\n\r\n    const { reviews, skuCode } = useAppSelector(\r\n        (state) => state.productInformation.productInfo\r\n    );\r\n\r\n    const { loadingReview, errorReview, currentColor } = useAppSelector(\r\n        (state) => state.productInformation\r\n    );\r\n\r\n    // const loadingReview = useAppSelector(\r\n    //     (state) => state.productInformation.loadingReview\r\n    // );\r\n    // const errorReview = useAppSelector(\r\n    //     (state) => state.productInformation.errorReview\r\n    // );\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (loadingReview === 'succeeded') {\r\n            setRating(0);\r\n            setReviewSubmit(true);\r\n        }\r\n    }, [loadingReview, errorReview]);\r\n\r\n    useEffect(() => {\r\n        if (rating !== 0) {\r\n            setRatingError(false);\r\n        }\r\n    }, [rating]);\r\n\r\n    useEffect(() => {\r\n        if (loadingReview === 'succeeded') {\r\n            dispatch(\r\n                fetchProductInfoByScuWithColor({\r\n                    productSkuCode: skuCode,\r\n                    colorHex: currentColor?.id || '#000',\r\n                })\r\n            );\r\n            dispatch(resetAddReviewForProduct());\r\n        }\r\n    }, [loadingReview]);\r\n\r\n    const additionalValidation = () => {\r\n        if (rating === 0) {\r\n            setRatingError(true);\r\n        } else {\r\n            setRatingError(false);\r\n        }\r\n    };\r\n\r\n    const handleStarClick = (selectedRating: number) => {\r\n        setRating(selectedRating);\r\n    };\r\n\r\n    const handleStarHover = (currentIndexStar: number) => {\r\n        setHoverIndex(currentIndexStar);\r\n    };\r\n\r\n    const formik7 = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            email: '',\r\n            comment: '',\r\n        },\r\n        validate: (values: FormValues) => {\r\n            const errors: FormikErrors<FormValues> = {};\r\n            const validationFields = ['firstName', 'email'];\r\n\r\n            validationFields.forEach((fieldName: string) => {\r\n                const error = formValidation(fieldName, values[fieldName]);\r\n                if (error) {\r\n                    errors[fieldName] = error;\r\n                }\r\n            });\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (values, { resetForm }) => {\r\n            if (ratingError) return;\r\n            dispatch(\r\n                addReviewForProduct({\r\n                    productRatingInfo: {\r\n                        productSkuCode: skuCode,\r\n                        userName: values.firstName,\r\n                        rating,\r\n                        ...values,\r\n                    },\r\n                    resetForm,\r\n                })\r\n            );\r\n        },\r\n    });\r\n\r\n    const stars = () => {\r\n        return (\r\n            <div className=\"stars-rating\">\r\n                {[1, 2, 3, 4, 5].map((starIndex) => (\r\n                    <button\r\n                        className=\"stars-rating__button\"\r\n                        key={starIndex}\r\n                        type=\"button\"\r\n                        aria-label=\"star\"\r\n                        onClick={() => handleStarClick(starIndex)}\r\n                        onMouseEnter={() => {\r\n                            if (timeoutHover) {\r\n                                clearTimeout(timeoutHover);\r\n                            }\r\n                            handleStarHover(starIndex);\r\n                        }}\r\n                        onMouseLeave={() =>\r\n                            setTimeoutHover(\r\n                                setTimeout(() => setHoverIndex(null), 250)\r\n                            )\r\n                        }\r\n                    >\r\n                        <svg width=\"20\" height=\"20\">\r\n                            <use\r\n                                href={`${ratingSprite}#${\r\n                                    starIndex <= rating ||\r\n                                    (hoverIndex && hoverIndex >= starIndex)\r\n                                        ? 'active'\r\n                                        : 'inactive'\r\n                                }`}\r\n                            />\r\n                        </svg>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"customers-review\" id=\"customer-review\">\r\n                    <div className=\"customers-review__slider-top\">\r\n                        <h1 className=\"customers-review__slider-top_title\">\r\n                            Відгуки покупців\r\n                        </h1>\r\n                        <div className=\"customers-review__navigation\">\r\n                            <button\r\n                                className=\"customers-review__prev-btn\"\r\n                                type=\"button\"\r\n                                aria-label=\"попередній слайд\"\r\n                                ref={prevRef}\r\n                            >\r\n                                <svg\r\n                                    className=\"customers-review__prev-icon\"\r\n                                    width=\"24\"\r\n                                    height=\"24\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <g id=\"02.Icons/Arrow\">\r\n                                        <path\r\n                                            id=\"Line 2 (Stroke)\"\r\n                                            fillRule=\"evenodd\"\r\n                                            clipRule=\"evenodd\"\r\n                                            d=\"M7.82475 16.8011L2.25628 12.4801C1.91457 12.215 1.91457 11.785 2.25628 11.5199L7.82475 7.19887C8.16646 6.93371 8.72048 6.93371 9.06218 7.19887C9.40389 7.46403 9.40389 7.89393 9.06218 8.15909L4.98744 11.321L23 11.321L23 12.679L4.98744 12.679L9.06218 15.8409C9.40389 16.1061 9.40389 16.536 9.06218 16.8011C8.72048 17.0663 8.16646 17.0663 7.82475 16.8011Z\"\r\n                                        />\r\n                                    </g>\r\n                                </svg>\r\n                            </button>\r\n                            <button\r\n                                className=\"customers-review__next-btn\"\r\n                                type=\"button\"\r\n                                aria-label=\"наступний слайд\"\r\n                                ref={nextRef}\r\n                            >\r\n                                <svg\r\n                                    className=\"customers-review__next-icon\"\r\n                                    width=\"24\"\r\n                                    height=\"24\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <g id=\"02.Icons/Arrow\">\r\n                                        <path\r\n                                            id=\"Line 2 (Stroke)\"\r\n                                            fillRule=\"evenodd\"\r\n                                            clipRule=\"evenodd\"\r\n                                            d=\"M16.1753 7.19887L21.7437 11.5199C22.0854 11.785 22.0854 12.215 21.7437 12.4801L16.1753 16.8011C15.8335 17.0663 15.2795 17.0663 14.9378 16.8011C14.5961 16.536 14.5961 16.1061 14.9378 15.8409L19.0126 12.679L1 12.679L1 11.321L19.0126 11.321L14.9378 8.15909C14.5961 7.89394 14.5961 7.46403 14.9378 7.19887C15.2795 6.93371 15.8335 6.93371 16.1753 7.19887Z\"\r\n                                        />\r\n                                    </g>\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <Swiper\r\n                        spaceBetween={32}\r\n                        slidesPerView={4}\r\n                        modules={[Navigation]}\r\n                        navigation={{\r\n                            prevEl: prevRef.current,\r\n                            nextEl: nextRef.current,\r\n                        }}\r\n                        breakpoints={{\r\n                            0: {\r\n                                slidesPerView: 1,\r\n                            },\r\n                            340: {\r\n                                slidesPerView: 2,\r\n                            },\r\n                            400: {\r\n                                slidesPerView: 2,\r\n                            },\r\n                            424: {\r\n                                slidesPerView: 2,\r\n                            },\r\n                            546: {\r\n                                slidesPerView: 2,\r\n                            },\r\n                            700: {\r\n                                slidesPerView: 2,\r\n                            },\r\n                            900: {\r\n                                slidesPerView: 3,\r\n                            },\r\n                            1440: {\r\n                                slidesPerView: 4,\r\n                            },\r\n                        }}\r\n                        className=\"mySwiper\"\r\n                    >\r\n                        {reviews?.map((review) => (\r\n                            <SwiperSlide key={nextId('customer-review')}>\r\n                                <CustomerReview\r\n                                    name={review.userName}\r\n                                    dateAdded={review.data}\r\n                                    content={review.review}\r\n                                    rating={review.rating}\r\n                                />\r\n                            </SwiperSlide>\r\n                        ))}\r\n                    </Swiper>\r\n                    <button\r\n                        onClick={() => setModalActive(true)}\r\n                        type=\"button\"\r\n                        className=\"customers-review__button\"\r\n                    >\r\n                        Написати відгук\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                active={modalActive}\r\n                setActive={setModalActive}\r\n                isDataLoadedToServer={reviewSubmit}\r\n                setisDataLoadedToServer={setReviewSubmit}\r\n                isSubmitedText=\"Ваш відгук успішно додано!\"\r\n                maxwidth=\"916px\"\r\n            >\r\n                <div>\r\n                    <h1 className=\"customers-review__modal_title\">\r\n                        Написати відгук\r\n                    </h1>\r\n                    <div className=\"customers-review__modal_rating\">\r\n                        <h2 className=\"customers-review__modal_rating_title\">\r\n                            Ваша оцінка\r\n                        </h2>\r\n                        {stars()}\r\n                        {ratingError && (\r\n                            <p className=\"rating-error\">\r\n                                Необхідно обрати рейтинг\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                    <form\r\n                        className=\"customers-review__modal_form modal-form\"\r\n                        onSubmit={formik7.handleSubmit}\r\n                        noValidate\r\n                    >\r\n                        <div className=\"customers-review__modal_inputs\">\r\n                            <FirstNameInput\r\n                                formik={formik7}\r\n                                additionalClassName={`${\r\n                                    formik7.errors.firstName &&\r\n                                    formik7.touched.firstName\r\n                                        ? 'inputErrorValidation'\r\n                                        : ''\r\n                                }`}\r\n                            />\r\n                            <EmailInput\r\n                                formik={formik7}\r\n                                additionalClassName={`${\r\n                                    formik7.errors.email &&\r\n                                    formik7.touched.email\r\n                                        ? 'inputErrorValidation'\r\n                                        : ''\r\n                                }`}\r\n                            />\r\n                        </div>\r\n                        <CommentTextarea formik={formik7} />\r\n                        <button\r\n                            className={`customers-review__modal_button ${\r\n                                loadingReview === 'pending' ? 'loading' : ''\r\n                            }`}\r\n                            type=\"submit\"\r\n                            onClick={additionalValidation}\r\n                        >\r\n                            Додати відгук\r\n                            <span className=\"customers-review__loading-dots\">\r\n                                <span className=\"customers-review__loading-dot\" />\r\n                                <span className=\"customers-review__loading-dot\" />\r\n                                <span className=\"customers-review__loading-dot\" />\r\n                            </span>\r\n                        </button>\r\n                        {errorReview ? (\r\n                            <div className=\"customers-review__error\">\r\n                                <ErrorMessageSmall text=\"Виникла помилка, спробуйте ще раз.\" />\r\n                            </div>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomersReviewSlider;\r\n","import Breadcrumbs from '../../shared-components/Breadcrumbs/Breadcrumbs';\r\nimport InterestedSlider from './components/InterestedSlider/InterestedSlider';\r\nimport ProductInfoContainer from './components/ProductInfoContainer/ProductInfoContainer';\r\nimport CustomersReviewSlider from './components/CustomersReviewSlider/CustomersReviewSlider';\r\nimport './ProductPage.scss';\r\n\r\nconst ProductPage = () => {\r\n    return (\r\n        <div className=\"product-page\" id=\"productPage\">\r\n            <Breadcrumbs />\r\n            <ProductInfoContainer />\r\n            <CustomersReviewSlider />\r\n            <InterestedSlider />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n","import { useLocation } from 'react-router';\r\nimport './Breadcrumbs.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport nextId from 'react-id-generator';\r\n\r\nconst Breadcrumbs = () => {\r\n    const location = useLocation();\r\n\r\n    const pathMapping: { [key: string]: string } = {\r\n        catalog: 'Каталог',\r\n        product: 'Товар',\r\n        cart: 'Кошик',\r\n        checkout: 'Оформлення замовлення',\r\n        success: 'Успішно',\r\n        cabinet: 'Особистий кабінет',\r\n        delivery: 'Доставка і оплата',\r\n        about: 'Про нас',\r\n    };\r\n\r\n    const pathSegments = location.pathname\r\n        .split('/')\r\n        .filter((crumb) => crumb !== '');\r\n\r\n    let currentLink = '';\r\n\r\n    const crumbs = pathSegments.map((crumb) => {\r\n        const decodedCrumb = decodeURIComponent(crumb);\r\n        currentLink += `/${decodedCrumb}`;\r\n\r\n        return (\r\n            <li className=\"breadcrumbs__list_item\" key={crumb}>\r\n                <NavLink\r\n                    to={currentLink}\r\n                    className=\"breadcrumbs__list_item_link\"\r\n                >\r\n                    {pathMapping[crumb] || decodedCrumb}\r\n                </NavLink>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    if (crumbs.length > 0) {\r\n        crumbs.unshift(\r\n            <li className=\"breadcrumbs__list_item\" key={nextId('crumb-item')}>\r\n                <NavLink to=\"/\" className=\"breadcrumbs__list_item_link\">\r\n                    Головна\r\n                </NavLink>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <nav className=\"breadcrumbs\">\r\n                <ol className=\"breadcrumbs__list\">{crumbs}</ol>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","import './DeliveryTerms.scss';\r\n\r\nconst DeliveryTerms = ({ extraClass }: { extraClass?: string }) => {\r\n    return (\r\n        <div className={`delivery-terms ${extraClass}`}>\r\n            <b className=\"delivery-terms__main\">Оплата:</b> <br />\r\n            При отриманні накладеним платежем <b>(вся Україна)</b> або готівкою\r\n            кур'єру <b>(Київ)</b>\r\n            <br /> На банківську карту (передоплата)\r\n            <br /> На розрахунковий рахунок (передоплата)\r\n            <br />\r\n            <br />\r\n            <b className=\"delivery-terms__main\">Доставка:</b>\r\n            <br />\r\n            Безкоштовна доставка всіма поштовами службами: <b>\r\n                Нова Пошта\r\n            </b>, <b>Автолюкс</b>, <b>Делівері</b>\r\n        </div>\r\n    );\r\n};\r\n\r\nDeliveryTerms.defaultProps = {\r\n    extraClass: '',\r\n};\r\n\r\nexport default DeliveryTerms;\r\n","import './Skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <div className=\"card-skeleton\">\r\n            <div className=\"card-skeleton__image\" />\r\n            <div className=\"card-skeleton__content\">\r\n                <div className=\"card-skeleton__text-wrapper\">\r\n                    <div className=\"card-skeleton__text1\" />\r\n                    <div className=\"card-skeleton__text2\" />\r\n                </div>\r\n                <div className=\"card-skeleton__bottom\">\r\n                    <div className=\"card-skeleton__price\" />\r\n                    <div className=\"card-skeleton__cart\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skeleton;\r\n","import { useRef, useState, memo } from 'react';\r\nimport { Swiper, SwiperSlide, useSwiper } from 'swiper/react';\r\nimport { Navigation } from 'swiper';\r\nimport nextId from 'react-id-generator';\r\nimport ProductCard from '../ProductCard/ProductCard';\r\nimport Skeleton from '../ProductCard/Skeleton/Skeleton';\r\nimport renderServerData from '../../helpers/renderServerData';\r\nimport { Loading, ProductCardType } from '../../types/types';\r\nimport 'swiper/css/navigation';\r\nimport './ProductsSlider.scss';\r\n\r\ntype Props = {\r\n    title: string;\r\n    products: ProductCardType[];\r\n    loading: Loading;\r\n    error: null | unknown;\r\n};\r\n\r\nconst ProductsSlider = (props: Props) => {\r\n    const { products, loading, error, title } = props;\r\n    const skeletonKeys = [...Array(8)].map((_, index) =>\r\n        nextId(`skeleton-card`)\r\n    );\r\n    const [isSliderRendered, setisSliderRendered] = useState<boolean>(false);\r\n    const swiper = useSwiper();\r\n    const prevRef = useRef(null);\r\n    const nextRef = useRef(null);\r\n\r\n    const items = () => {\r\n        return products.map((product) => {\r\n            return (\r\n                <SwiperSlide key={`card-of-newItems${product.skuCode}`}>\r\n                    <div className=\"products-slider__card\">\r\n                        <ProductCard product={product} />\r\n                    </div>\r\n                </SwiperSlide>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"products-slider\">\r\n            <div className=\"container\">\r\n                <div className=\"products-slider__top\">\r\n                    <h2 className=\"products-slider__title\">{title}</h2>\r\n                    <div className=\"products-slider__navigation\">\r\n                        <button\r\n                            className=\"products-slider__prev-btn\"\r\n                            type=\"button\"\r\n                            aria-label=\"попередній слайд\"\r\n                            ref={prevRef}\r\n                        >\r\n                            <svg\r\n                                className=\"products-slider__prev-icon\"\r\n                                width=\"24\"\r\n                                height=\"24\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <g id=\"02.Icons/Arrow\">\r\n                                    <path\r\n                                        id=\"Line 2 (Stroke)\"\r\n                                        fillRule=\"evenodd\"\r\n                                        clipRule=\"evenodd\"\r\n                                        d=\"M7.82475 16.8011L2.25628 12.4801C1.91457 12.215 1.91457 11.785 2.25628 11.5199L7.82475 7.19887C8.16646 6.93371 8.72048 6.93371 9.06218 7.19887C9.40389 7.46403 9.40389 7.89393 9.06218 8.15909L4.98744 11.321L23 11.321L23 12.679L4.98744 12.679L9.06218 15.8409C9.40389 16.1061 9.40389 16.536 9.06218 16.8011C8.72048 17.0663 8.16646 17.0663 7.82475 16.8011Z\"\r\n                                    />\r\n                                </g>\r\n                            </svg>\r\n                        </button>\r\n                        <button\r\n                            className=\"products-slider__next-btn\"\r\n                            type=\"button\"\r\n                            aria-label=\"наступний слайд\"\r\n                            ref={nextRef}\r\n                        >\r\n                            <svg\r\n                                className=\"products-slider__next-icon\"\r\n                                width=\"24\"\r\n                                height=\"24\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                                <g id=\"02.Icons/Arrow\">\r\n                                    <path\r\n                                        id=\"Line 2 (Stroke)\"\r\n                                        fillRule=\"evenodd\"\r\n                                        clipRule=\"evenodd\"\r\n                                        d=\"M16.1753 7.19887L21.7437 11.5199C22.0854 11.785 22.0854 12.215 21.7437 12.4801L16.1753 16.8011C15.8335 17.0663 15.2795 17.0663 14.9378 16.8011C14.5961 16.536 14.5961 16.1061 14.9378 15.8409L19.0126 12.679L1 12.679L1 11.321L19.0126 11.321L14.9378 8.15909C14.5961 7.89394 14.5961 7.46403 14.9378 7.19887C15.2795 6.93371 15.8335 6.93371 16.1753 7.19887Z\"\r\n                                    />\r\n                                </g>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container container_pd-right-off\">\r\n                <div className=\"products-slider__cards\">\r\n                    <Swiper\r\n                        className=\"products-slider__slider\"\r\n                        modules={[Navigation]}\r\n                        spaceBetween={32}\r\n                        slidesPerView={4}\r\n                        navigation={{\r\n                            prevEl: prevRef.current,\r\n                            nextEl: nextRef.current,\r\n                        }}\r\n                        onInit={() => setisSliderRendered(true)}\r\n                        breakpoints={{\r\n                            0: {\r\n                                slidesPerView: 'auto',\r\n                            },\r\n                            340: {\r\n                                slidesPerView: 1.12,\r\n                                spaceBetween: 16,\r\n                            },\r\n                            400: {\r\n                                slidesPerView: 1.2,\r\n                                spaceBetween: 24,\r\n                            },\r\n                            424: {\r\n                                slidesPerView: 1.3,\r\n                                spaceBetween: 24,\r\n                            },\r\n                            546: {\r\n                                slidesPerView: 1.7,\r\n                                spaceBetween: 24,\r\n                            },\r\n                            700: {\r\n                                slidesPerView: 2.2,\r\n                                spaceBetween: 24,\r\n                            },\r\n                            810: {\r\n                                slidesPerView: 2.5,\r\n                                spaceBetween: 24,\r\n                            },\r\n                            1100: {\r\n                                slidesPerView: 3.4,\r\n                                spaceBetween: 32,\r\n                            },\r\n                            1294: {\r\n                                slidesPerView: 4,\r\n                                spaceBetween: 32,\r\n                            },\r\n                        }}\r\n                    >\r\n                        {renderServerData({\r\n                            error,\r\n                            loading,\r\n                            content: items,\r\n                            customLoader: skeletonKeys.map((key) => {\r\n                                return (\r\n                                    <SwiperSlide key={key}>\r\n                                        <Skeleton />\r\n                                    </SwiperSlide>\r\n                                );\r\n                            }),\r\n                        })}\r\n                    </Swiper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ProductsSlider);\r\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFailedIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5 22C18.0228 22 22.5 17.5228 22.5 12C22.5 6.47715 18.0228 2 12.5 2C6.97715 2 2.5 6.47715 2.5 12C2.5 17.5228 6.97715 22 12.5 22Z\",\n    stroke: \"#EB3D3D\",\n    strokeWidth: 1.5\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 12.5L11 14.5L16 9.5\",\n    stroke: \"#EB3D3D\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFailedIcon);\nexport default __webpack_public_path__ + \"static/media/failed_icon.90b0262963badfaf68639a5de2c134fc.svg\";\nexport { ForwardRef as ReactComponent };","import failedIcon from '../../../assets/icons/userMessages/failed_icon.svg';\r\nimport './ErrorMessageSmall.scss';\r\n\r\nconst ErrorMessageSmall = ({\r\n    text,\r\n    additionalText,\r\n}: {\r\n    text: string;\r\n    additionalText?: string;\r\n}) => {\r\n    return (\r\n        <div className=\"error-message_small\">\r\n            <div className=\"error-message_small-inner\">\r\n                <img className=\"error-message__icon\" src={failedIcon} alt=\"\" />\r\n                <p className=\"error-message__text\">{text}</p>\r\n            </div>\r\n            {additionalText ? (\r\n                <p className=\"error-message__text_additional\">\r\n                    {additionalText}\r\n                </p>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessageSmall;\r\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSuccessIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z\",\n    stroke: \"#64CB13\",\n    strokeWidth: 1.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M7.5 11.5L9.5 13.5L14.5 8.5\",\n    stroke: \"#64CB13\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSuccessIcon);\nexport default __webpack_public_path__ + \"static/media/success_icon.df18252c1db27be830794938583fba2e.svg\";\nexport { ForwardRef as ReactComponent };","import successIcon from '../../../assets/icons/userMessages/success_icon.svg';\r\nimport './SuccessMessage.scss';\r\n\r\nconst SuccessMessage = ({\r\n    text,\r\n    additionalText,\r\n}: {\r\n    text: string;\r\n    additionalText?: string;\r\n}) => {\r\n    return (\r\n        <div className=\"success-message\">\r\n            <div className=\"success-message__inner\">\r\n                <img\r\n                    className=\"success-message__icon\"\r\n                    src={successIcon}\r\n                    alt=\"\"\r\n                />\r\n                <p className=\"success-message__text\">{text}</p>\r\n            </div>\r\n            {additionalText ? (\r\n                <p className=\"success-message__text_additional\">\r\n                    {additionalText}\r\n                </p>\r\n            ) : (\r\n                ''\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessMessage;\r\n","const moveUserToPageUp = (selectorId = 'catalog-content', offset = -80) => {\r\n    const catalogProductsHtml = document.getElementById(selectorId);\r\n    if (!catalogProductsHtml) return;\r\n    let yOffset;\r\n    if (offset) {\r\n        yOffset = window.screen.width > 991 ? offset || -80 : -50;\r\n    } else {\r\n        yOffset = 0;\r\n    }\r\n    const y =\r\n        catalogProductsHtml.getBoundingClientRect().top +\r\n        window.pageYOffset +\r\n        yOffset;\r\n    window.scrollTo({ top: y, behavior: 'smooth' });\r\n};\r\n\r\nexport default moveUserToPageUp;\r\n"],"names":["InterestedSlider","interestedProducts","loadingInterested","errorInterested","useAppSelector","state","productsSlider","skuCode","productInformation","productInfo","collection","storageCurrentSku","localStorage","getItem","dispatch","useAppDispatch","useEffect","id","fetchMightBeInterestProducts","collectionId","productSkuCode","_jsx","className","children","ProductsSlider","title","products","loading","error","props","setLargePhotoActive","largePhotoActive","handleSecondSwiper","firstSwiper","activeIndex","handleSlideChange","popUpImages","windowWidth","setWindowWidth","useState","window","innerWidth","test","useRef","handleResize","closeSlider","e","target","closest","_test$current","addEventListener","current","_test$current2","removeEventListener","document","body","style","overflow","key","_jsxs","ref","concat","length","type","onClick","width","height","href","productPageSprite","Swiper","navigation","slidesPerView","modules","Navigation","Controller","onSwiper","onSlideChange","controller","control","map","popUpImage","SwiperSlide","src","desktopPopUpImagePath","mobilePopUpImagePath","alt","FullScreenLoader","Loader","ProductImagesSlider","_ref","colorChange","currentColor","imagesFromStore","images","setPopUpImages","thumbsSwiper","setThumbsSwiper","setFirstSwiper","secondSwiper","setSecondSwiper","setActiveIndex","isPopUpLoading","setIsPopUpLoading","swiperRef","swiper","slideTo","handleFirstSwiper","_Fragment","spaceBetween","initialSlide","thumbs","Thumbs","_swiperRef$current","activeSlideIndex","previousSlideIndex","previousIndex","slides","thumbnailListMove","image","index","async","requestBody","colorHex","response","fetch","API_BASE","method","headers","JSON","stringify","ok","Error","data","json","console","handleSliderClick","desktopImagePath","centerInsufficientSlides","watchSlidesProgress","breakpoints","sliderImagePath","EnlargedPhoto","memo","ProductRating","currentRating","averageRating","reminderOfDividing","Math","floor","rating","result","i","push","ratingSprite","nextId","Number","isInteger","k","item","ColorSelection","setColorChange","colorDtoList","colors","colorDtoSort","currentSku","sortColors","localColorCurrent","parse","hex","colorName","quantityStatus","pathname","hash","useLocation","currentPath","skuFromLink","replace","moveUserToPageUp","fetchProductInfoByScuWithColor","setItem","some","color","filter","name","colorStatus","updateProductColor","NavLink","to","backgroundColor","updateProductImages","handleColorChange","ProductPrice","addSpaceToPrice","price","toString","toLocaleString","priceWithDiscount","AddToCartBtn","cartBody","cart","isElementAddedToCart","setIsElementAddedToCart","openPopUpNotification","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","disabled","addProductToCartBody","openPopUpCart","AddProductBlock","isAvailable","setIsAvailable","jwtToken","auth","_state$productInforma","isFavorite","favorite","AddToFavoriteBtn","Accordeon","activeTab","setActiveTab","accordeonItemsText","querySelectorAll","accordeonItems","description","categoryName","materials","transformation","heightAdjustment","weight","depth","numberOfDoors","numberOfDrawers","bedLength","bedWidth","maxLoad","charactersCurtrentInfo","value","unit","character","autoCalculateHeightOfItem","forEach","currentHeight","scrollHeight","setProperty","prev","Array","isArray","DeliveryTerms","extraClass","ProductInfoContainer","countOfReviews","lenis","useLenis","scroll","event","handleClick","anchor","preventDefault","scrollToOptions","offset","lerp","duration","easing","rawValue","immediate","lock","force","scrollTo","pluralizeUkrainian","monthMappings","content","dateAdded","formattedDate","dateString","year","month","day","split","monthName","formatDateString","stars","isActive","star","renderStarsRating","CommentTextarea","formik","comment","setComment","isMaxCharactersExceeded","setIsMaxCharactersExceeded","cols","rows","maxLength","placeholder","values","onChange","handleChange","inputText","defaultProps","undefined","CustomersReviewSlider","modalActive","setModalActive","ratingError","setRatingError","setRating","hoverIndex","setHoverIndex","reviewSubmit","setReviewSubmit","timeoutHover","setTimeoutHover","prevRef","nextRef","reviews","loadingReview","errorReview","resetAddReviewForProduct","formik7","useFormik","initialValues","firstName","email","validate","errors","fieldName","formValidation","onSubmit","resetForm","addReviewForProduct","productRatingInfo","userName","fillRule","clipRule","prevEl","nextEl","review","CustomerReview","Modal","active","setActive","isDataLoadedToServer","setisDataLoadedToServer","isSubmitedText","maxwidth","starIndex","onMouseEnter","clearTimeout","onMouseLeave","setTimeout","handleSubmit","noValidate","FirstNameInput","additionalClassName","touched","EmailInput","additionalValidation","ErrorMessageSmall","text","ProductPage","Breadcrumbs","location","pathMapping","catalog","product","checkout","success","cabinet","delivery","about","pathSegments","crumb","currentLink","crumbs","decodedCrumb","decodeURIComponent","unshift","Skeleton","skeletonKeys","_","isSliderRendered","setisSliderRendered","useSwiper","onInit","renderServerData","items","ProductCard","customLoader","additionalText","failedIcon","successIcon","selectorId","arguments","catalogProductsHtml","getElementById","yOffset","screen","y","getBoundingClientRect","top","pageYOffset","behavior"],"sourceRoot":""}